{"id":"bdf73d48cf6736f58f4601c43abadb0b","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/ethregistrar/IBaseRegistrar.sol":{"content":"import \"../registry/ENS.sol\";\nimport \"./IBaseRegistrar.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\ninterface IBaseRegistrar is IERC721 {\n    event ControllerAdded(address indexed controller);\n    event ControllerRemoved(address indexed controller);\n    event NameMigrated(\n        uint256 indexed id,\n        address indexed owner,\n        uint256 expires\n    );\n    event NameRegistered(\n        uint256 indexed id,\n        address indexed owner,\n        uint256 expires\n    );\n    event NameRenewed(uint256 indexed id, uint256 expires);\n\n    // Authorises a controller, who can register and renew domains.\n    function addController(address controller) external;\n\n    // Revoke controller permission for an address.\n    function removeController(address controller) external;\n\n    // Set the resolver for the TLD this registrar manages.\n    function setResolver(address resolver) external;\n\n    // Returns the expiration timestamp of the specified label hash.\n    function nameExpires(uint256 id) external view returns (uint256);\n\n    // Returns true iff the specified name is available for registration.\n    function available(uint256 id) external view returns (bool);\n\n    /**\n     * @dev Register a name.\n     */\n    function register(\n        uint256 id,\n        address owner,\n        uint256 duration\n    ) external returns (uint256);\n\n    function renew(uint256 id, uint256 duration) external returns (uint256);\n\n    /**\n     * @dev Reclaim ownership of a name in ENS, if you own it in the registrar.\n     */\n    function reclaim(uint256 id, address owner) external;\n}\n"},"contracts/registry/ENS.sol":{"content":"pragma solidity >=0.8.4;\n\ninterface ENS {\n    // Logged when the owner of a node assigns a new owner to a subnode.\n    event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\n\n    // Logged when the owner of a node transfers ownership to a new account.\n    event Transfer(bytes32 indexed node, address owner);\n\n    // Logged when the resolver for a node changes.\n    event NewResolver(bytes32 indexed node, address resolver);\n\n    // Logged when the TTL of a node changes\n    event NewTTL(bytes32 indexed node, uint64 ttl);\n\n    // Logged when an operator is added or removed.\n    event ApprovalForAll(\n        address indexed owner,\n        address indexed operator,\n        bool approved\n    );\n\n    function setRecord(\n        bytes32 node,\n        address owner,\n        address resolver,\n        uint64 ttl\n    ) external;\n\n    function setSubnodeRecord(\n        bytes32 node,\n        bytes32 label,\n        address owner,\n        address resolver,\n        uint64 ttl\n    ) external;\n\n    function setSubnodeOwner(\n        bytes32 node,\n        bytes32 label,\n        address owner\n    ) external returns (bytes32);\n\n    function setResolver(bytes32 node, address resolver) external;\n\n    function setOwner(bytes32 node, address owner) external;\n\n    function setTTL(bytes32 node, uint64 ttl) external;\n\n    function setApprovalForAll(address operator, bool approved) external;\n\n    function owner(bytes32 node) external view returns (address);\n\n    function resolver(bytes32 node) external view returns (address);\n\n    function ttl(bytes32 node) external view returns (uint64);\n\n    function recordExists(bytes32 node) external view returns (bool);\n\n    function isApprovedForAll(address owner, address operator)\n        external\n        view\n        returns (bool);\n}\n"},"contracts/utils/ERC20Recoverable.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity >=0.8.17 <0.9.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n    @notice Contract is used to recover ERC20 tokens sent to the contract by mistake.\n */\n\ncontract ERC20Recoverable is Ownable {\n    /**\n    @notice Recover ERC20 tokens sent to the contract by mistake.\n    @dev The contract is Ownable and only the owner can call the recover function.\n    @param _to The address to send the tokens to.\n@param _token The address of the ERC20 token to recover\n    @param _amount The amount of tokens to recover.\n */\n    function recoverFunds(\n        address _token,\n        address _to,\n        uint256 _amount\n    ) external onlyOwner {\n        IERC20(_token).transfer(_to, _amount);\n    }\n}\n"},"contracts/wrapper/BytesUtils.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity ~0.8.17;\n\nlibrary BytesUtils {\n    /*\n     * @dev Returns the keccak-256 hash of a byte range.\n     * @param self The byte string to hash.\n     * @param offset The position to start hashing at.\n     * @param len The number of bytes to hash.\n     * @return The hash of the byte range.\n     */\n    function keccak(\n        bytes memory self,\n        uint256 offset,\n        uint256 len\n    ) internal pure returns (bytes32 ret) {\n        require(offset + len <= self.length);\n        assembly {\n            ret := keccak256(add(add(self, 32), offset), len)\n        }\n    }\n\n    /**\n     * @dev Returns the ENS namehash of a DNS-encoded name.\n     * @param self The DNS-encoded name to hash.\n     * @param offset The offset at which to start hashing.\n     * @return The namehash of the name.\n     */\n    function namehash(bytes memory self, uint256 offset)\n        internal\n        pure\n        returns (bytes32)\n    {\n        (bytes32 labelhash, uint256 newOffset) = readLabel(self, offset);\n        if (labelhash == bytes32(0)) {\n            require(offset == self.length - 1, \"namehash: Junk at end of name\");\n            return bytes32(0);\n        }\n        return\n            keccak256(abi.encodePacked(namehash(self, newOffset), labelhash));\n    }\n\n    /**\n     * @dev Returns the keccak-256 hash of a DNS-encoded label, and the offset to the start of the next label.\n     * @param self The byte string to read a label from.\n     * @param idx The index to read a label at.\n     * @return labelhash The hash of the label at the specified index, or 0 if it is the last label.\n     * @return newIdx The index of the start of the next label.\n     */\n    function readLabel(bytes memory self, uint256 idx)\n        internal\n        pure\n        returns (bytes32 labelhash, uint256 newIdx)\n    {\n        require(idx < self.length, \"readLabel: Index out of bounds\");\n        uint256 len = uint256(uint8(self[idx]));\n        if (len > 0) {\n            labelhash = keccak(self, idx + 1, len);\n        } else {\n            labelhash = bytes32(0);\n        }\n        newIdx = idx + len + 1;\n    }\n}\n"},"contracts/wrapper/Controllable.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity ~0.8.17;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Controllable is Ownable {\n    mapping(address => bool) public controllers;\n\n    event ControllerChanged(address indexed controller, bool active);\n\n    function setController(address controller, bool active) public onlyOwner {\n        controllers[controller] = active;\n        emit ControllerChanged(controller, active);\n    }\n\n    modifier onlyController() {\n        require(\n            controllers[msg.sender],\n            \"Controllable: Caller is not a controller\"\n        );\n        _;\n    }\n}\n"},"contracts/wrapper/ERC1155Fuse.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity ~0.8.17;\n\nimport \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\n\n/* This contract is a variation on ERC1155 with the additions of _setData, getData and _preTransferCheck and ownerOf. _setData and getData allows the use of the other 96 bits next to the address of the owner for extra data. We use this to store 'fuses' that control permissions that can be burnt. 32 bits are used for the fuses themselves and 64 bits are used for the expiry of the name. When a name has expired, its fuses will be be set back to 0 */\n\nabstract contract ERC1155Fuse is ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n    mapping(uint256 => uint256) public _tokens;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**************************************************************************\n     * ERC721 methods\n     *************************************************************************/\n\n    function ownerOf(uint256 id) public view virtual returns (address) {\n        (address owner, , ) = getData(id);\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(ERC165, IERC165)\n        returns (bool)\n    {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id)\n        public\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        require(\n            account != address(0),\n            \"ERC1155: balance query for the zero address\"\n        );\n        address owner = ownerOf(id);\n        if (owner == account) {\n            return 1;\n        }\n        return 0;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(\n            accounts.length == ids.length,\n            \"ERC1155: accounts and ids length mismatch\"\n        );\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved)\n        public\n        virtual\n        override\n    {\n        require(\n            msg.sender != operator,\n            \"ERC1155: setting approval status for self\"\n        );\n\n        _operatorApprovals[msg.sender][operator] = approved;\n        emit ApprovalForAll(msg.sender, operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator)\n        public\n        view\n        virtual\n        override\n        returns (bool)\n    {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev Returns the Name's owner address and fuses\n     */\n    function getData(uint256 tokenId)\n        public\n        view\n        virtual\n        returns (\n            address owner,\n            uint32 fuses,\n            uint64 expiry\n        )\n    {\n        uint256 t = _tokens[tokenId];\n        owner = address(uint160(t));\n        expiry = uint64(t >> 192);\n        fuses = uint32(t >> 160);\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n        require(\n            from == msg.sender || isApprovedForAll(from, msg.sender),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _transfer(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            ids.length == amounts.length,\n            \"ERC1155: ids and amounts length mismatch\"\n        );\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n        require(\n            from == msg.sender || isApprovedForAll(from, msg.sender),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            (address oldOwner, uint32 fuses, uint64 expiry) = getData(id);\n\n            _preTransferCheck(id, fuses, expiry);\n\n            require(\n                amount == 1 && oldOwner == from,\n                \"ERC1155: insufficient balance for transfer\"\n            );\n            _setData(id, to, fuses, expiry);\n        }\n\n        emit TransferBatch(msg.sender, from, to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(\n            msg.sender,\n            from,\n            to,\n            ids,\n            amounts,\n            data\n        );\n    }\n\n    /**************************************************************************\n     * Internal/private methods\n     *************************************************************************/\n\n    /**\n     * @dev Sets the Name's owner address and fuses\n     */\n    function _setData(\n        uint256 tokenId,\n        address owner,\n        uint32 fuses,\n        uint64 expiry\n    ) internal virtual {\n        _tokens[tokenId] =\n            uint256(uint160(owner)) |\n            (uint256(fuses) << 160) |\n            (uint256(expiry) << 192);\n    }\n\n    function _preTransferCheck(\n        uint256 id,\n        uint32 fuses,\n        uint64 expiry\n    ) internal virtual returns (bool);\n\n    function _clearOwnerAndFuses(\n        address owner,\n        uint32 fuses,\n        uint64 expiry\n    ) internal virtual returns (address, uint32);\n\n    function _mint(\n        bytes32 node,\n        address owner,\n        uint32 fuses,\n        uint64 expiry\n    ) internal virtual {\n        uint256 tokenId = uint256(node);\n        (address oldOwner, uint32 oldFuses, uint64 oldExpiry) = getData(\n            uint256(node)\n        );\n\n        uint32 parentControlledFuses = (uint32(type(uint16).max) << 16) &\n            oldFuses;\n\n        if (oldExpiry > expiry) {\n            expiry = oldExpiry;\n        }\n\n        if (oldExpiry >= block.timestamp) {\n            fuses = fuses | parentControlledFuses;\n        }\n\n        require(oldOwner == address(0), \"ERC1155: mint of existing token\");\n        require(owner != address(0), \"ERC1155: mint to the zero address\");\n        require(\n            owner != address(this),\n            \"ERC1155: newOwner cannot be the NameWrapper contract\"\n        );\n\n        _setData(tokenId, owner, fuses, expiry);\n        emit TransferSingle(msg.sender, address(0x0), owner, tokenId, 1);\n        _doSafeTransferAcceptanceCheck(\n            msg.sender,\n            address(0),\n            owner,\n            tokenId,\n            1,\n            \"\"\n        );\n    }\n\n    function _burn(uint256 tokenId) internal virtual {\n        (address oldOwner, uint32 fuses, uint64 expiry) = ERC1155Fuse.getData(\n            tokenId\n        );\n        (, fuses) = _clearOwnerAndFuses(oldOwner, fuses, expiry);\n        // Fuses and expiry are kept on burn\n        _setData(tokenId, address(0x0), fuses, expiry);\n        emit TransferSingle(msg.sender, oldOwner, address(0x0), tokenId, 1);\n    }\n\n    function _transfer(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal {\n        (address oldOwner, uint32 fuses, uint64 expiry) = getData(id);\n\n        _preTransferCheck(id, fuses, expiry);\n\n        require(\n            amount == 1 && oldOwner == from,\n            \"ERC1155: insufficient balance for transfer\"\n        );\n\n        if (oldOwner == to) {\n            return;\n        }\n\n        _setData(id, to, fuses, expiry);\n\n        emit TransferSingle(msg.sender, from, to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(msg.sender, from, to, id, amount, data);\n    }\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try\n                IERC1155Receiver(to).onERC1155Received(\n                    operator,\n                    from,\n                    id,\n                    amount,\n                    data\n                )\n            returns (bytes4 response) {\n                if (\n                    response != IERC1155Receiver(to).onERC1155Received.selector\n                ) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try\n                IERC1155Receiver(to).onERC1155BatchReceived(\n                    operator,\n                    from,\n                    ids,\n                    amounts,\n                    data\n                )\n            returns (bytes4 response) {\n                if (\n                    response !=\n                    IERC1155Receiver(to).onERC1155BatchReceived.selector\n                ) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n}\n"},"contracts/wrapper/IMetadataService.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity ~0.8.17;\n\ninterface IMetadataService {\n    function uri(uint256) external view returns (string memory);\n}\n"},"contracts/wrapper/INameWrapper.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity ~0.8.17;\n\nimport \"../registry/ENS.sol\";\nimport \"../ethregistrar/IBaseRegistrar.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\nimport \"./IMetadataService.sol\";\n\nuint32 constant CANNOT_UNWRAP = 1;\nuint32 constant CANNOT_BURN_FUSES = 2;\nuint32 constant CANNOT_TRANSFER = 4;\nuint32 constant CANNOT_SET_RESOLVER = 8;\nuint32 constant CANNOT_SET_TTL = 16;\nuint32 constant CANNOT_CREATE_SUBDOMAIN = 32;\n//uint16 reserved for parent controlled fuses from bit 17 to bit 32\nuint32 constant PARENT_CANNOT_CONTROL = 1 << 16;\nuint32 constant IS_DOT_ETH = 1 << 17;\nuint32 constant CAN_EXTEND_EXPIRY = 1 << 18;\nuint32 constant CAN_DO_EVERYTHING = 0;\nuint32 constant PARENT_CONTROLLED_FUSES = 0xFFFF0000;\n// all fuses apart from IS_DOT_ETH\nuint32 constant USER_SETTABLE_FUSES = 0xFFFDFFFF;\n\ninterface INameWrapper is IERC1155 {\n    event NameWrapped(\n        bytes32 indexed node,\n        bytes name,\n        address owner,\n        uint32 fuses,\n        uint64 expiry\n    );\n\n    event NameUnwrapped(bytes32 indexed node, address owner);\n\n    event FusesSet(bytes32 indexed node, uint32 fuses);\n    event ExpiryExtended(bytes32 indexed node, uint64 expiry);\n\n    function ens() external view returns (ENS);\n\n    function registrar() external view returns (IBaseRegistrar);\n\n    function metadataService() external view returns (IMetadataService);\n\n    function names(bytes32) external view returns (bytes memory);\n\n    function wrap(\n        bytes calldata name,\n        address wrappedOwner,\n        address resolver\n    ) external;\n\n    function wrapETH2LD(\n        string calldata label,\n        address wrappedOwner,\n        uint16 ownerControlledFuses,\n        address resolver\n    ) external;\n\n    function registerAndWrapETH2LD(\n        string calldata label,\n        address wrappedOwner,\n        uint256 duration,\n        address resolver,\n        uint16 ownerControlledFuses\n    ) external returns (uint256 registrarExpiry);\n\n    function renew(uint256 labelHash, uint256 duration)\n        external\n        returns (uint256 expires);\n\n    function unwrap(\n        bytes32 node,\n        bytes32 label,\n        address owner\n    ) external;\n\n    function unwrapETH2LD(\n        bytes32 label,\n        address newRegistrant,\n        address newController\n    ) external;\n\n    function setFuses(bytes32 node, uint16 ownerControlledFuses)\n        external\n        returns (uint32 newFuses);\n\n    function setChildFuses(\n        bytes32 parentNode,\n        bytes32 labelhash,\n        uint32 fuses,\n        uint64 expiry\n    ) external;\n\n    function setSubnodeRecord(\n        bytes32 node,\n        string calldata label,\n        address owner,\n        address resolver,\n        uint64 ttl,\n        uint32 fuses,\n        uint64 expiry\n    ) external returns (bytes32);\n\n    function setRecord(\n        bytes32 node,\n        address owner,\n        address resolver,\n        uint64 ttl\n    ) external;\n\n    function setSubnodeOwner(\n        bytes32 node,\n        string calldata label,\n        address newOwner,\n        uint32 fuses,\n        uint64 expiry\n    ) external returns (bytes32);\n\n    function extendExpiry(\n        bytes32 node,\n        bytes32 labelhash,\n        uint64 expiry\n    ) external returns (uint64);\n\n    function canModifyName(bytes32 node, address addr) external returns (bool);\n\n    function setResolver(bytes32 node, address resolver) external;\n\n    function setTTL(bytes32 node, uint64 ttl) external;\n\n    function ownerOf(uint256 id) external returns (address owner);\n\n    function getData(uint256 id)\n        external\n        returns (\n            address,\n            uint32,\n            uint64\n        );\n\n    function allFusesBurned(bytes32 node, uint32 fuseMask)\n        external\n        view\n        returns (bool);\n}\n"},"contracts/wrapper/INameWrapperUpgrade.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity ~0.8.17;\n\ninterface INameWrapperUpgrade {\n    function setSubnodeRecord(\n        bytes32 parentNode,\n        string calldata label,\n        address owner,\n        address resolver,\n        uint64 ttl,\n        uint32 fuses,\n        uint64 expiry\n    ) external;\n\n    function wrapETH2LD(\n        string calldata label,\n        address wrappedOwner,\n        uint32 fuses,\n        uint64 expiry,\n        address resolver\n    ) external;\n}\n"},"contracts/wrapper/NameWrapper.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity ~0.8.17;\n\nimport {ERC1155Fuse, IERC165} from \"./ERC1155Fuse.sol\";\nimport {Controllable} from \"./Controllable.sol\";\nimport {INameWrapper, CANNOT_UNWRAP, CANNOT_BURN_FUSES, CANNOT_TRANSFER, CANNOT_SET_RESOLVER, CANNOT_SET_TTL, CANNOT_CREATE_SUBDOMAIN, PARENT_CANNOT_CONTROL, CAN_DO_EVERYTHING, IS_DOT_ETH, CAN_EXTEND_EXPIRY, PARENT_CONTROLLED_FUSES, USER_SETTABLE_FUSES} from \"./INameWrapper.sol\";\nimport {INameWrapperUpgrade} from \"./INameWrapperUpgrade.sol\";\nimport {IMetadataService} from \"./IMetadataService.sol\";\nimport {ENS} from \"../registry/ENS.sol\";\nimport {IBaseRegistrar} from \"../ethregistrar/IBaseRegistrar.sol\";\nimport {IERC721Receiver} from \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {BytesUtils} from \"./BytesUtils.sol\";\nimport {ERC20Recoverable} from \"../utils/ERC20Recoverable.sol\";\n\nerror Unauthorised(bytes32 node, address addr);\nerror IncompatibleParent();\nerror IncorrectTokenType();\nerror LabelMismatch(bytes32 labelHash, bytes32 expectedLabelhash);\nerror LabelTooShort();\nerror LabelTooLong(string label);\nerror IncorrectTargetOwner(address owner);\nerror CannotUpgrade();\nerror OperationProhibited(bytes32 node);\nerror NameIsNotWrapped();\nerror NameIsStillExpired();\n\ncontract NameWrapper is\n    Ownable,\n    ERC1155Fuse,\n    INameWrapper,\n    Controllable,\n    IERC721Receiver,\n    ERC20Recoverable\n{\n    using BytesUtils for bytes;\n\n    ENS public immutable override ens;\n    IBaseRegistrar public immutable override registrar;\n    IMetadataService public override metadataService;\n    mapping(bytes32 => bytes) public override names;\n    string public constant name = \"NameWrapper\";\n\n    uint64 private constant GRACE_PERIOD = 90 days;\n    bytes32 private constant ETH_NODE =\n        0x93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae;\n    bytes32 private constant ETH_LABELHASH =\n        0x4f5b812789fc606be1b3b16908db13fc7a9adf7ca72641f84d75b47069d3d7f0;\n    bytes32 private constant ROOT_NODE =\n        0x0000000000000000000000000000000000000000000000000000000000000000;\n\n    INameWrapperUpgrade public upgradeContract;\n    uint64 private constant MAX_EXPIRY = type(uint64).max;\n\n    constructor(\n        ENS _ens,\n        IBaseRegistrar _registrar,\n        IMetadataService _metadataService\n    ) {\n        ens = _ens;\n        registrar = _registrar;\n        metadataService = _metadataService;\n\n        /* Burn PARENT_CANNOT_CONTROL and CANNOT_UNWRAP fuses for ROOT_NODE and ETH_NODE */\n\n        _setData(\n            uint256(ETH_NODE),\n            address(0),\n            uint32(PARENT_CANNOT_CONTROL | CANNOT_UNWRAP),\n            MAX_EXPIRY\n        );\n        _setData(\n            uint256(ROOT_NODE),\n            address(0),\n            uint32(PARENT_CANNOT_CONTROL | CANNOT_UNWRAP),\n            MAX_EXPIRY\n        );\n        names[ROOT_NODE] = \"\\x00\";\n        names[ETH_NODE] = \"\\x03eth\\x00\";\n    }\n\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(ERC1155Fuse, IERC165)\n        returns (bool)\n    {\n        return\n            interfaceId == type(INameWrapper).interfaceId ||\n            interfaceId == type(IERC721Receiver).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /* ERC1155 Fuse */\n\n    /**\n     * @notice Gets the owner of a name\n     * @param id Label as a string of the .eth domain to wrap\n     * @return owner The owner of the name\n     */\n\n    function ownerOf(uint256 id)\n        public\n        view\n        override(ERC1155Fuse, INameWrapper)\n        returns (address owner)\n    {\n        return super.ownerOf(id);\n    }\n\n    /**\n     * @notice Gets the data for a name\n     * @param id Namehash of the name\n     * @return owner Owner of the name\n     * @return fuses Fuses of the name\n     * @return expiry Expiry of the name\n     */\n\n    function getData(uint256 id)\n        public\n        view\n        override(ERC1155Fuse, INameWrapper)\n        returns (\n            address owner,\n            uint32 fuses,\n            uint64 expiry\n        )\n    {\n        (owner, fuses, expiry) = super.getData(id);\n\n        (owner, fuses) = _clearOwnerAndFuses(owner, fuses, expiry);\n    }\n\n    /* Metadata service */\n\n    /**\n     * @notice Set the metadata service. Only the owner can do this\n     * @param _metadataService The new metadata service\n     */\n\n    function setMetadataService(IMetadataService _metadataService)\n        public\n        onlyOwner\n    {\n        metadataService = _metadataService;\n    }\n\n    /**\n     * @notice Get the metadata uri\n     * @param tokenId The id of the token\n     * @return string uri of the metadata service\n     */\n\n    function uri(uint256 tokenId) public view override returns (string memory) {\n        return metadataService.uri(tokenId);\n    }\n\n    /**\n     * @notice Set the address of the upgradeContract of the contract. only admin can do this\n     * @dev The default value of upgradeContract is the 0 address. Use the 0 address at any time\n     * to make the contract not upgradable.\n     * @param _upgradeAddress address of an upgraded contract\n     */\n\n    function setUpgradeContract(INameWrapperUpgrade _upgradeAddress)\n        public\n        onlyOwner\n    {\n        if (address(upgradeContract) != address(0)) {\n            registrar.setApprovalForAll(address(upgradeContract), false);\n            ens.setApprovalForAll(address(upgradeContract), false);\n        }\n\n        upgradeContract = _upgradeAddress;\n\n        if (address(upgradeContract) != address(0)) {\n            registrar.setApprovalForAll(address(upgradeContract), true);\n            ens.setApprovalForAll(address(upgradeContract), true);\n        }\n    }\n\n    /**\n     * @notice Checks if msg.sender is the owner or approved by the owner of a name\n     * @param node namehash of the name to check\n     */\n\n    modifier onlyTokenOwner(bytes32 node) {\n        if (!canModifyName(node, msg.sender)) {\n            revert Unauthorised(node, msg.sender);\n        }\n\n        _;\n    }\n\n    /**\n     * @notice Checks if owner or approved by owner\n     * @param node namehash of the name to check\n     * @param addr which address to check permissions for\n     * @return whether or not is owner or approved\n     */\n\n    function canModifyName(bytes32 node, address addr)\n        public\n        view\n        override\n        returns (bool)\n    {\n        (address owner, uint32 fuses, uint64 expiry) = getData(uint256(node));\n        return\n            (owner == addr || isApprovedForAll(owner, addr)) &&\n            (fuses & IS_DOT_ETH == 0 ||\n                expiry - GRACE_PERIOD >= block.timestamp);\n    }\n\n    /**\n     * @notice Wraps a .eth domain, creating a new token and sending the original ERC721 token to this contract\n     * @dev Can be called by the owner of the name on the .eth registrar or an authorised caller on the registrar\n     * @param label Label as a string of the .eth domain to wrap\n     * @param wrappedOwner Owner of the name in this contract\n     * @param ownerControlledFuses Initial owner-controlled fuses to set\n     * @param resolver Resolver contract address\n     */\n\n    function wrapETH2LD(\n        string calldata label,\n        address wrappedOwner,\n        uint16 ownerControlledFuses,\n        address resolver\n    ) public override {\n        uint256 tokenId = uint256(keccak256(bytes(label)));\n        address registrant = registrar.ownerOf(tokenId);\n        if (\n            registrant != msg.sender &&\n            !registrar.isApprovedForAll(registrant, msg.sender)\n        ) {\n            revert Unauthorised(\n                _makeNode(ETH_NODE, bytes32(tokenId)),\n                msg.sender\n            );\n        }\n\n        // transfer the token from the user to this contract\n        registrar.transferFrom(registrant, address(this), tokenId);\n\n        // transfer the ens record back to the new owner (this contract)\n        registrar.reclaim(tokenId, address(this));\n\n        _wrapETH2LD(label, wrappedOwner, ownerControlledFuses, resolver);\n    }\n\n    /**\n     * @dev Registers a new .eth second-level domain and wraps it.\n     *      Only callable by authorised controllers.\n     * @param label The label to register (Eg, 'foo' for 'foo.eth').\n     * @param wrappedOwner The owner of the wrapped name.\n     * @param duration The duration, in seconds, to register the name for.\n     * @param resolver The resolver address to set on the ENS registry (optional).\n     * @param ownerControlledFuses Initial owner-controlled fuses to set\n     * @return registrarExpiry The expiry date of the new name on the .eth registrar, in seconds since the Unix epoch.\n     */\n\n    function registerAndWrapETH2LD(\n        string calldata label,\n        address wrappedOwner,\n        uint256 duration,\n        address resolver,\n        uint16 ownerControlledFuses\n    ) external override onlyController returns (uint256 registrarExpiry) {\n        uint256 tokenId = uint256(keccak256(bytes(label)));\n        registrarExpiry = registrar.register(tokenId, address(this), duration);\n        _wrapETH2LD(label, wrappedOwner, ownerControlledFuses, resolver);\n    }\n\n    /**\n     * @notice Renews a .eth second-level domain.\n     * @dev Only callable by authorised controllers.\n     * @param tokenId The hash of the label to register (eg, `keccak256('foo')`, for 'foo.eth').\n     * @param duration The number of seconds to renew the name for.\n     * @return expires The expiry date of the name on the .eth registrar, in seconds since the Unix epoch.\n     */\n\n    function renew(uint256 tokenId, uint256 duration)\n        external\n        override\n        onlyController\n        returns (uint256 expires)\n    {\n        bytes32 node = _makeNode(ETH_NODE, bytes32(tokenId));\n\n        uint256 registrarExpiry = registrar.renew(tokenId, duration);\n\n        // Do not set anything in wrapper if name is not wrapped\n        try registrar.ownerOf(tokenId) returns (address registrarOwner) {\n            if (\n                registrarOwner != address(this) ||\n                ens.owner(node) != address(this)\n            ) {\n                return registrarExpiry;\n            }\n        } catch {\n            return registrarExpiry;\n        }\n\n        // set expiry in Wrapper\n        uint64 expiry = uint64(registrarExpiry) + GRACE_PERIOD;\n\n        //use super to allow names expired on the wrapper, but not expired on the registrar to renew()\n        (address owner, uint32 fuses, ) = super.getData(uint256(node));\n        _setData(node, owner, fuses, expiry);\n\n        return registrarExpiry;\n    }\n\n    /**\n     * @notice Wraps a non .eth domain, of any kind. Could be a DNSSEC name vitalik.xyz or a subdomain\n     * @dev Can be called by the owner in the registry or an authorised caller in the registry\n     * @param name The name to wrap, in DNS format\n     * @param wrappedOwner Owner of the name in this contract\n     * @param resolver Resolver contract\n     */\n\n    function wrap(\n        bytes calldata name,\n        address wrappedOwner,\n        address resolver\n    ) public override {\n        (bytes32 labelhash, uint256 offset) = name.readLabel(0);\n        bytes32 parentNode = name.namehash(offset);\n        bytes32 node = _makeNode(parentNode, labelhash);\n\n        names[node] = name;\n\n        if (parentNode == ETH_NODE) {\n            revert IncompatibleParent();\n        }\n\n        address owner = ens.owner(node);\n\n        if (owner != msg.sender && !ens.isApprovedForAll(owner, msg.sender)) {\n            revert Unauthorised(node, msg.sender);\n        }\n\n        if (resolver != address(0)) {\n            ens.setResolver(node, resolver);\n        }\n\n        ens.setOwner(node, address(this));\n\n        _wrap(node, name, wrappedOwner, 0, 0);\n    }\n\n    /**\n     * @notice Unwraps a .eth domain. e.g. vitalik.eth\n     * @dev Can be called by the owner in the wrapper or an authorised caller in the wrapper\n     * @param labelhash Labelhash of the .eth domain\n     * @param registrant Sets the owner in the .eth registrar to this address\n     * @param controller Sets the owner in the registry to this address\n     */\n\n    function unwrapETH2LD(\n        bytes32 labelhash,\n        address registrant,\n        address controller\n    ) public override onlyTokenOwner(_makeNode(ETH_NODE, labelhash)) {\n        if (registrant == address(this)) {\n            revert IncorrectTargetOwner(registrant);\n        }\n        _unwrap(_makeNode(ETH_NODE, labelhash), controller);\n        registrar.safeTransferFrom(\n            address(this),\n            registrant,\n            uint256(labelhash)\n        );\n    }\n\n    /**\n     * @notice Unwraps a non .eth domain, of any kind. Could be a DNSSEC name vitalik.xyz or a subdomain\n     * @dev Can be called by the owner in the wrapper or an authorised caller in the wrapper\n     * @param parentNode Parent namehash of the name e.g. vitalik.xyz would be namehash('xyz')\n     * @param labelhash Labelhash of the name, e.g. vitalik.xyz would be keccak256('vitalik')\n     * @param controller Sets the owner in the registry to this address\n     */\n\n    function unwrap(\n        bytes32 parentNode,\n        bytes32 labelhash,\n        address controller\n    ) public override onlyTokenOwner(_makeNode(parentNode, labelhash)) {\n        if (parentNode == ETH_NODE) {\n            revert IncompatibleParent();\n        }\n        if (controller == address(0x0) || controller == address(this)) {\n            revert IncorrectTargetOwner(controller);\n        }\n        _unwrap(_makeNode(parentNode, labelhash), controller);\n    }\n\n    /**\n     * @notice Sets fuses of a name\n     * @param node Namehash of the name\n     * @param ownerControlledFuses Owner-controlled fuses to burn\n     * @return New fuses\n     */\n\n    function setFuses(bytes32 node, uint16 ownerControlledFuses)\n        public\n        onlyTokenOwner(node)\n        operationAllowed(node, CANNOT_BURN_FUSES)\n        returns (uint32)\n    {\n        // owner protected by onlyTokenOwner\n        (address owner, uint32 oldFuses, uint64 expiry) = getData(\n            uint256(node)\n        );\n        _setFuses(node, owner, ownerControlledFuses | oldFuses, expiry, expiry);\n        return ownerControlledFuses;\n    }\n\n    /**\n     * @notice Extends expiry for a name\n     * @param parentNode Parent namehash of the name e.g. vitalik.xyz would be namehash('xyz')\n     * @param labelhash Labelhash of the name, e.g. vitalik.xyz would be keccak256('vitalik')\n     * @param expiry When the name will expire in seconds since the Unix epoch\n     * @return New expiry\n     */\n\n    function extendExpiry(\n        bytes32 parentNode,\n        bytes32 labelhash,\n        uint64 expiry\n    ) public returns (uint64) {\n        bytes32 node = _makeNode(parentNode, labelhash);\n\n        // this flag is used later, when checking fuses\n        bool canModifyParentName = canModifyName(parentNode, msg.sender);\n        // only allow the owner of the name or owner of the parent name\n        if (!canModifyParentName && !canModifyName(node, msg.sender)) {\n            revert Unauthorised(node, msg.sender);\n        }\n\n        (address owner, uint32 fuses, uint64 oldExpiry) = getData(\n            uint256(node)\n        );\n\n        // Either CAN_EXTEND_EXPIRY must be set, or the caller must have permission to modify the parent name\n        if (!canModifyParentName && fuses & CAN_EXTEND_EXPIRY == 0) {\n            revert OperationProhibited(node);\n        }\n\n        // max expiry is set to the expiry of the parent\n        (, , uint64 maxExpiry) = getData(uint256(parentNode));\n        expiry = _normaliseExpiry(expiry, oldExpiry, maxExpiry);\n\n        _setData(node, owner, fuses, expiry);\n        emit ExpiryExtended(node, expiry);\n        return expiry;\n    }\n\n    /**\n     * @notice Upgrades a .eth wrapped domain by calling the wrapETH2LD function of the upgradeContract\n     *     and burning the token of this contract\n     * @dev Can be called by the owner of the name in this contract\n     * @param label Label as a string of the .eth name to upgrade\n     * @param wrappedOwner The owner of the wrapped name\n     */\n\n    function upgradeETH2LD(\n        string calldata label,\n        address wrappedOwner,\n        address resolver\n    ) public {\n        bytes32 labelhash = keccak256(bytes(label));\n        bytes32 node = _makeNode(ETH_NODE, labelhash);\n        (address currentOwner, uint32 fuses, uint64 expiry) = _prepareUpgrade(\n            node\n        );\n\n        if (wrappedOwner != currentOwner) {\n            _preTransferCheck(uint256(node), fuses, expiry);\n        }\n\n        upgradeContract.wrapETH2LD(\n            label,\n            wrappedOwner,\n            fuses,\n            expiry,\n            resolver\n        );\n    }\n\n    /**\n     * @notice Upgrades a non .eth domain of any kind. Could be a DNSSEC name vitalik.xyz or a subdomain\n     * @dev Can be called by the owner or an authorised caller\n     * Requires upgraded Namewrapper to permit old Namewrapper to call `setSubnodeRecord` for all names\n     * @param parentNode Namehash of the parent name\n     * @param label Label as a string of the name to upgrade\n     * @param wrappedOwner Owner of the name in this contract\n     * @param resolver Resolver contract for this name\n     */\n\n    function upgrade(\n        bytes32 parentNode,\n        string calldata label,\n        address wrappedOwner,\n        address resolver\n    ) public {\n        bytes32 labelhash = keccak256(bytes(label));\n        bytes32 node = _makeNode(parentNode, labelhash);\n        (address currentOwner, uint32 fuses, uint64 expiry) = _prepareUpgrade(\n            node\n        );\n\n        if (wrappedOwner != currentOwner) {\n            _preTransferCheck(uint256(node), fuses, expiry);\n        }\n\n        upgradeContract.setSubnodeRecord(\n            parentNode,\n            label,\n            wrappedOwner,\n            resolver,\n            0,\n            fuses,\n            expiry\n        );\n    }\n\n    /** \n    /* @notice Sets fuses of a name that you own the parent of. Can also be called by the owner of a .eth name\n     * @param parentNode Parent namehash of the name e.g. vitalik.xyz would be namehash('xyz')\n     * @param labelhash Labelhash of the name, e.g. vitalik.xyz would be keccak256('vitalik')\n     * @param fuses Fuses to burn\n     * @param expiry When the name will expire in seconds since the Unix epoch\n     */\n\n    function setChildFuses(\n        bytes32 parentNode,\n        bytes32 labelhash,\n        uint32 fuses,\n        uint64 expiry\n    ) public {\n        bytes32 node = _makeNode(parentNode, labelhash);\n        _checkFusesAreSettable(node, fuses);\n        (address owner, uint32 oldFuses, uint64 oldExpiry) = getData(\n            uint256(node)\n        );\n        if (owner == address(0) || ens.owner(node) != address(this)) {\n            revert NameIsNotWrapped();\n        }\n        // max expiry is set to the expiry of the parent\n        (, uint32 parentFuses, uint64 maxExpiry) = getData(uint256(parentNode));\n        if (parentNode == ROOT_NODE) {\n            if (!canModifyName(node, msg.sender)) {\n                revert Unauthorised(node, msg.sender);\n            }\n        } else {\n            if (!canModifyName(parentNode, msg.sender)) {\n                revert Unauthorised(node, msg.sender);\n            }\n        }\n\n        _checkParentFuses(node, fuses, parentFuses);\n\n        expiry = _normaliseExpiry(expiry, oldExpiry, maxExpiry);\n\n        // if PARENT_CANNOT_CONTROL has been burned and fuses have changed\n        if (\n            oldFuses & PARENT_CANNOT_CONTROL != 0 &&\n            oldFuses | fuses != oldFuses\n        ) {\n            revert OperationProhibited(node);\n        }\n        fuses |= oldFuses;\n        _setFuses(node, owner, fuses, oldExpiry, expiry);\n    }\n\n    /**\n     * @notice Sets the subdomain owner in the registry and then wraps the subdomain\n     * @param parentNode Parent namehash of the subdomain\n     * @param label Label of the subdomain as a string\n     * @param owner New owner in the wrapper\n     * @param fuses Initial fuses for the wrapped subdomain\n     * @param expiry When the name will expire in seconds since the Unix epoch\n     * @return node Namehash of the subdomain\n     */\n\n    function setSubnodeOwner(\n        bytes32 parentNode,\n        string calldata label,\n        address owner,\n        uint32 fuses,\n        uint64 expiry\n    ) public onlyTokenOwner(parentNode) returns (bytes32 node) {\n        bytes32 labelhash = keccak256(bytes(label));\n        node = _makeNode(parentNode, labelhash);\n        _checkCanCallSetSubnodeOwner(parentNode, node);\n        _checkFusesAreSettable(node, fuses);\n        bytes memory name = _saveLabel(parentNode, node, label);\n        expiry = _checkParentFusesAndExpiry(parentNode, node, fuses, expiry);\n\n        if (!isWrapped(node)) {\n            ens.setSubnodeOwner(parentNode, labelhash, address(this));\n            _wrap(node, name, owner, fuses, expiry);\n        } else {\n            _updateName(parentNode, node, label, owner, fuses, expiry);\n        }\n    }\n\n    /**\n     * @notice Sets the subdomain owner in the registry with records and then wraps the subdomain\n     * @param parentNode parent namehash of the subdomain\n     * @param label label of the subdomain as a string\n     * @param owner new owner in the wrapper\n     * @param resolver resolver contract in the registry\n     * @param ttl ttl in the registry\n     * @param fuses initial fuses for the wrapped subdomain\n     * @param expiry When the name will expire in seconds since the Unix epoch\n     * @return node Namehash of the subdomain\n     */\n\n    function setSubnodeRecord(\n        bytes32 parentNode,\n        string memory label,\n        address owner,\n        address resolver,\n        uint64 ttl,\n        uint32 fuses,\n        uint64 expiry\n    ) public onlyTokenOwner(parentNode) returns (bytes32 node) {\n        bytes32 labelhash = keccak256(bytes(label));\n        node = _makeNode(parentNode, labelhash);\n        _checkCanCallSetSubnodeOwner(parentNode, node);\n        _checkFusesAreSettable(node, fuses);\n        _saveLabel(parentNode, node, label);\n        expiry = _checkParentFusesAndExpiry(parentNode, node, fuses, expiry);\n        if (!isWrapped(node)) {\n            ens.setSubnodeRecord(\n                parentNode,\n                labelhash,\n                address(this),\n                resolver,\n                ttl\n            );\n            _storeNameAndWrap(parentNode, node, label, owner, fuses, expiry);\n        } else {\n            ens.setSubnodeRecord(\n                parentNode,\n                labelhash,\n                address(this),\n                resolver,\n                ttl\n            );\n            _updateName(parentNode, node, label, owner, fuses, expiry);\n        }\n    }\n\n    /**\n     * @notice Sets records for the name in the ENS Registry\n     * @param node Namehash of the name to set a record for\n     * @param owner New owner in the registry\n     * @param resolver Resolver contract\n     * @param ttl Time to live in the registry\n     */\n\n    function setRecord(\n        bytes32 node,\n        address owner,\n        address resolver,\n        uint64 ttl\n    )\n        public\n        override\n        onlyTokenOwner(node)\n        operationAllowed(\n            node,\n            CANNOT_TRANSFER | CANNOT_SET_RESOLVER | CANNOT_SET_TTL\n        )\n    {\n        ens.setRecord(node, address(this), resolver, ttl);\n        if (owner == address(0)) {\n            (, uint32 fuses, ) = getData(uint256(node));\n            if (fuses & IS_DOT_ETH == IS_DOT_ETH) {\n                revert IncorrectTargetOwner(owner);\n            }\n            _unwrap(node, address(0));\n        } else {\n            address oldOwner = ownerOf(uint256(node));\n            _transfer(oldOwner, owner, uint256(node), 1, \"\");\n        }\n    }\n\n    /**\n     * @notice Sets resolver contract in the registry\n     * @param node namehash of the name\n     * @param resolver the resolver contract\n     */\n\n    function setResolver(bytes32 node, address resolver)\n        public\n        override\n        onlyTokenOwner(node)\n        operationAllowed(node, CANNOT_SET_RESOLVER)\n    {\n        ens.setResolver(node, resolver);\n    }\n\n    /**\n     * @notice Sets TTL in the registry\n     * @param node Namehash of the name\n     * @param ttl TTL in the registry\n     */\n\n    function setTTL(bytes32 node, uint64 ttl)\n        public\n        override\n        onlyTokenOwner(node)\n        operationAllowed(node, CANNOT_SET_TTL)\n    {\n        ens.setTTL(node, ttl);\n    }\n\n    /**\n     * @dev Allows an operation only if none of the specified fuses are burned.\n     * @param node The namehash of the name to check fuses on.\n     * @param fuseMask A bitmask of fuses that must not be burned.\n     */\n\n    modifier operationAllowed(bytes32 node, uint32 fuseMask) {\n        (, uint32 fuses, ) = getData(uint256(node));\n        if (fuses & fuseMask != 0) {\n            revert OperationProhibited(node);\n        }\n        _;\n    }\n\n    /**\n     * @notice Check whether a name can call setSubnodeOwner/setSubnodeRecord\n     * @dev Checks both CANNOT_CREATE_SUBDOMAIN and PARENT_CANNOT_CONTROL and whether not they have been burnt\n     *      and checks whether the owner of the subdomain is 0x0 for creating or already exists for\n     *      replacing a subdomain. If either conditions are true, then it is possible to call\n     *      setSubnodeOwner\n     * @param parentNode Namehash of the parent name to check\n     * @param subnode Namehash of the subname to check\n     */\n\n    function _checkCanCallSetSubnodeOwner(bytes32 parentNode, bytes32 subnode)\n        internal\n        view\n    {\n        (\n            address subnodeOwner,\n            uint32 subnodeFuses,\n            uint64 subnodeExpiry\n        ) = getData(uint256(subnode));\n\n        // check if the registry owner is 0 and expired\n        // check if the wrapper owner is 0 and expired\n        // If either, then check parent fuses for CANNOT_CREATE_SUBDOMAIN\n        bool expired = subnodeExpiry < block.timestamp;\n        if (\n            expired &&\n            // protects a name that has been unwrapped with PCC and doesn't allow the parent to take control by recreating it if unexpired\n            (subnodeOwner == address(0) ||\n                // protects a name that has been burnt and doesn't allow the parent to take control by recreating it if unexpired\n                ens.owner(subnode) == address(0))\n        ) {\n            (, uint32 parentFuses, ) = getData(uint256(parentNode));\n            if (parentFuses & CANNOT_CREATE_SUBDOMAIN != 0) {\n                revert OperationProhibited(subnode);\n            }\n        } else {\n            if (subnodeFuses & PARENT_CANNOT_CONTROL != 0) {\n                revert OperationProhibited(subnode);\n            }\n        }\n    }\n\n    /**\n     * @notice Checks all Fuses in the mask are burned for the node\n     * @param node Namehash of the name\n     * @param fuseMask The fuses you want to check\n     * @return Boolean of whether or not all the selected fuses are burned\n     */\n\n    function allFusesBurned(bytes32 node, uint32 fuseMask)\n        public\n        view\n        override\n        returns (bool)\n    {\n        (, uint32 fuses, ) = getData(uint256(node));\n        return fuses & fuseMask == fuseMask;\n    }\n\n    function isWrapped(bytes32 node) public view returns (bool) {\n        return\n            ownerOf(uint256(node)) != address(0) &&\n            ens.owner(node) == address(this);\n    }\n\n    function onERC721Received(\n        address to,\n        address,\n        uint256 tokenId,\n        bytes calldata data\n    ) public override returns (bytes4) {\n        //check if it's the eth registrar ERC721\n        if (msg.sender != address(registrar)) {\n            revert IncorrectTokenType();\n        }\n\n        (\n            string memory label,\n            address owner,\n            uint16 ownerControlledFuses,\n            address resolver\n        ) = abi.decode(data, (string, address, uint16, address));\n\n        bytes32 labelhash = bytes32(tokenId);\n        bytes32 labelhashFromData = keccak256(bytes(label));\n\n        if (labelhashFromData != labelhash) {\n            revert LabelMismatch(labelhashFromData, labelhash);\n        }\n\n        // transfer the ens record back to the new owner (this contract)\n        registrar.reclaim(uint256(labelhash), address(this));\n\n        _wrapETH2LD(label, owner, ownerControlledFuses, resolver);\n\n        return IERC721Receiver(to).onERC721Received.selector;\n    }\n\n    /***** Internal functions */\n\n    function _preTransferCheck(\n        uint256 id,\n        uint32 fuses,\n        uint64 expiry\n    ) internal view override returns (bool) {\n        // For this check, treat .eth 2LDs as expiring at the start of the grace period.\n        if (fuses & IS_DOT_ETH == IS_DOT_ETH) {\n            expiry -= GRACE_PERIOD;\n        }\n\n        if (expiry < block.timestamp) {\n            // Transferable if the name was not emancipated\n            if (fuses & PARENT_CANNOT_CONTROL != 0) {\n                revert(\"ERC1155: insufficient balance for transfer\");\n            }\n        } else {\n            // Transferable if CANNOT_TRANSFER is unburned\n            if (fuses & CANNOT_TRANSFER != 0) {\n                revert OperationProhibited(bytes32(id));\n            }\n        }\n    }\n\n    function _clearOwnerAndFuses(\n        address owner,\n        uint32 fuses,\n        uint64 expiry\n    ) internal view override returns (address, uint32) {\n        if (expiry < block.timestamp) {\n            if (fuses & PARENT_CANNOT_CONTROL == PARENT_CANNOT_CONTROL) {\n                owner = address(0);\n            }\n            fuses = 0;\n        }\n\n        return (owner, fuses);\n    }\n\n    function _makeNode(bytes32 node, bytes32 labelhash)\n        private\n        pure\n        returns (bytes32)\n    {\n        return keccak256(abi.encodePacked(node, labelhash));\n    }\n\n    function _addLabel(string memory label, bytes memory name)\n        internal\n        pure\n        returns (bytes memory ret)\n    {\n        if (bytes(label).length < 1) {\n            revert LabelTooShort();\n        }\n        if (bytes(label).length > 255) {\n            revert LabelTooLong(label);\n        }\n        return abi.encodePacked(uint8(bytes(label).length), label, name);\n    }\n\n    function _mint(\n        bytes32 node,\n        address owner,\n        uint32 fuses,\n        uint64 expiry\n    ) internal override {\n        _canFusesBeBurned(node, fuses);\n        (address oldOwner, , ) = super.getData(uint256(node));\n        if (oldOwner != address(0)) {\n            // burn and unwrap old token of old owner\n            _burn(uint256(node));\n            emit NameUnwrapped(node, address(0));\n        }\n        super._mint(node, owner, fuses, expiry);\n    }\n\n    function _wrap(\n        bytes32 node,\n        bytes memory name,\n        address wrappedOwner,\n        uint32 fuses,\n        uint64 expiry\n    ) internal {\n        _mint(node, wrappedOwner, fuses, expiry);\n        emit NameWrapped(node, name, wrappedOwner, fuses, expiry);\n    }\n\n    function _storeNameAndWrap(\n        bytes32 parentNode,\n        bytes32 node,\n        string memory label,\n        address owner,\n        uint32 fuses,\n        uint64 expiry\n    ) internal {\n        bytes memory name = _addLabel(label, names[parentNode]);\n        _wrap(node, name, owner, fuses, expiry);\n    }\n\n    function _saveLabel(\n        bytes32 parentNode,\n        bytes32 node,\n        string memory label\n    ) internal returns (bytes memory) {\n        bytes memory name = _addLabel(label, names[parentNode]);\n        names[node] = name;\n        return name;\n    }\n\n    function _prepareUpgrade(bytes32 node)\n        private\n        returns (\n            address owner,\n            uint32 fuses,\n            uint64 expiry\n        )\n    {\n        if (address(upgradeContract) == address(0)) {\n            revert CannotUpgrade();\n        }\n\n        if (!canModifyName(node, msg.sender)) {\n            revert Unauthorised(node, msg.sender);\n        }\n\n        (owner, fuses, expiry) = getData(uint256(node));\n\n        _burn(uint256(node));\n    }\n\n    function _updateName(\n        bytes32 parentNode,\n        bytes32 node,\n        string memory label,\n        address owner,\n        uint32 fuses,\n        uint64 expiry\n    ) internal {\n        (address oldOwner, uint32 oldFuses, uint64 oldExpiry) = getData(\n            uint256(node)\n        );\n        bytes memory name = _addLabel(label, names[parentNode]);\n        if (names[node].length == 0) {\n            names[node] = name;\n        }\n        _setFuses(node, oldOwner, oldFuses | fuses, oldExpiry, expiry);\n        if (owner == address(0)) {\n            _unwrap(node, address(0));\n        } else {\n            _transfer(oldOwner, owner, uint256(node), 1, \"\");\n        }\n    }\n\n    // wrapper function for stack limit\n    function _checkParentFusesAndExpiry(\n        bytes32 parentNode,\n        bytes32 node,\n        uint32 fuses,\n        uint64 expiry\n    ) internal view returns (uint64) {\n        (, , uint64 oldExpiry) = getData(uint256(node));\n        (, uint32 parentFuses, uint64 maxExpiry) = getData(uint256(parentNode));\n        _checkParentFuses(node, fuses, parentFuses);\n        return _normaliseExpiry(expiry, oldExpiry, maxExpiry);\n    }\n\n    function _checkParentFuses(\n        bytes32 node,\n        uint32 fuses,\n        uint32 parentFuses\n    ) internal pure {\n        bool isBurningParentControlledFuses = fuses & PARENT_CONTROLLED_FUSES !=\n            0;\n\n        bool parentHasNotBurnedCU = parentFuses & CANNOT_UNWRAP == 0;\n\n        if (isBurningParentControlledFuses && parentHasNotBurnedCU) {\n            revert OperationProhibited(node);\n        }\n    }\n\n    function _normaliseExpiry(\n        uint64 expiry,\n        uint64 oldExpiry,\n        uint64 maxExpiry\n    ) internal pure returns (uint64) {\n        // Expiry cannot be more than maximum allowed\n        // .eth names will check registrar, non .eth check parent\n        if (expiry > maxExpiry) {\n            expiry = maxExpiry;\n        }\n        // Expiry cannot be less than old expiry\n        if (expiry < oldExpiry) {\n            expiry = oldExpiry;\n        }\n\n        return expiry;\n    }\n\n    function _wrapETH2LD(\n        string memory label,\n        address wrappedOwner,\n        uint16 ownerControlledFuses,\n        address resolver\n    ) private {\n        bytes32 labelhash = keccak256(bytes(label));\n        bytes32 node = _makeNode(ETH_NODE, labelhash);\n        // hardcode dns-encoded eth string for gas savings\n        bytes memory name = _addLabel(label, \"\\x03eth\\x00\");\n        names[node] = name;\n\n        uint64 expiry = uint64(registrar.nameExpires(uint256(labelhash))) +\n            GRACE_PERIOD;\n\n        _wrap(\n            node,\n            name,\n            wrappedOwner,\n            ownerControlledFuses | PARENT_CANNOT_CONTROL | IS_DOT_ETH,\n            expiry\n        );\n\n        if (resolver != address(0)) {\n            ens.setResolver(node, resolver);\n        }\n    }\n\n    function _unwrap(bytes32 node, address owner) private {\n        if (allFusesBurned(node, CANNOT_UNWRAP)) {\n            revert OperationProhibited(node);\n        }\n\n        // Burn token and fuse data\n        _burn(uint256(node));\n        ens.setOwner(node, owner);\n\n        emit NameUnwrapped(node, owner);\n    }\n\n    function _setFuses(\n        bytes32 node,\n        address owner,\n        uint32 fuses,\n        uint64 oldExpiry,\n        uint64 expiry\n    ) internal {\n        _setData(node, owner, fuses, expiry);\n        emit FusesSet(node, fuses);\n        if (expiry > oldExpiry) {\n            emit ExpiryExtended(node, expiry);\n        }\n    }\n\n    function _setData(\n        bytes32 node,\n        address owner,\n        uint32 fuses,\n        uint64 expiry\n    ) internal {\n        _canFusesBeBurned(node, fuses);\n        super._setData(uint256(node), owner, fuses, expiry);\n    }\n\n    function _canFusesBeBurned(bytes32 node, uint32 fuses) internal pure {\n        // If a non-parent controlled fuse is being burned, check PCC and CU are burnt\n        if (\n            fuses & ~PARENT_CONTROLLED_FUSES != 0 &&\n            fuses & (PARENT_CANNOT_CONTROL | CANNOT_UNWRAP) !=\n            (PARENT_CANNOT_CONTROL | CANNOT_UNWRAP)\n        ) {\n            revert OperationProhibited(node);\n        }\n    }\n\n    function _checkFusesAreSettable(bytes32 node, uint32 fuses) internal pure {\n        if (fuses | USER_SETTABLE_FUSES != USER_SETTABLE_FUSES) {\n            // Cannot directly burn other non-user settable fuses\n            revert OperationProhibited(node);\n        }\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":2500},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/ethregistrar/IBaseRegistrar.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/ethregistrar/IBaseRegistrar.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/registry/ENS.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/registry/ENS.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.17;\"\n--> contracts/ethregistrar/IBaseRegistrar.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.17;\"","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/ethregistrar/IBaseRegistrar.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/wrapper/NameWrapper.sol:324:9:\n    |\n324 |         bytes calldata name,\n    |         ^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/wrapper/NameWrapper.sol:42:5:\n   |\n42 |     string public constant name = \"NameWrapper\";\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":1745,"file":"contracts/wrapper/NameWrapper.sol","message":"The shadowed declaration is here:","start":1702}],"severity":"warning","sourceLocation":{"end":11033,"file":"contracts/wrapper/NameWrapper.sol","start":11014},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/wrapper/NameWrapper.sol:599:9:\n    |\n599 |         bytes memory name = _saveLabel(parentNode, node, label);\n    |         ^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/wrapper/NameWrapper.sol:42:5:\n   |\n42 |     string public constant name = \"NameWrapper\";\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":1745,"file":"contracts/wrapper/NameWrapper.sol","message":"The shadowed declaration is here:","start":1702}],"severity":"warning","sourceLocation":{"end":20660,"file":"contracts/wrapper/NameWrapper.sol","start":20643},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/wrapper/NameWrapper.sol:883:45:\n    |\n883 |     function _addLabel(string memory label, bytes memory name)\n    |                                             ^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/wrapper/NameWrapper.sol:42:5:\n   |\n42 |     string public constant name = \"NameWrapper\";\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":1745,"file":"contracts/wrapper/NameWrapper.sol","message":"The shadowed declaration is here:","start":1702}],"severity":"warning","sourceLocation":{"end":29936,"file":"contracts/wrapper/NameWrapper.sol","start":29919},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/wrapper/NameWrapper.sol:915:9:\n    |\n915 |         bytes memory name,\n    |         ^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/wrapper/NameWrapper.sol:42:5:\n   |\n42 |     string public constant name = \"NameWrapper\";\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":1745,"file":"contracts/wrapper/NameWrapper.sol","message":"The shadowed declaration is here:","start":1702}],"severity":"warning","sourceLocation":{"end":30813,"file":"contracts/wrapper/NameWrapper.sol","start":30796},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/wrapper/NameWrapper.sol:932:9:\n    |\n932 |         bytes memory name = _addLabel(label, names[parentNode]);\n    |         ^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/wrapper/NameWrapper.sol:42:5:\n   |\n42 |     string public constant name = \"NameWrapper\";\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":1745,"file":"contracts/wrapper/NameWrapper.sol","message":"The shadowed declaration is here:","start":1702}],"severity":"warning","sourceLocation":{"end":31250,"file":"contracts/wrapper/NameWrapper.sol","start":31233},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/wrapper/NameWrapper.sol:941:9:\n    |\n941 |         bytes memory name = _addLabel(label, names[parentNode]);\n    |         ^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/wrapper/NameWrapper.sol:42:5:\n   |\n42 |     string public constant name = \"NameWrapper\";\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":1745,"file":"contracts/wrapper/NameWrapper.sol","message":"The shadowed declaration is here:","start":1702}],"severity":"warning","sourceLocation":{"end":31514,"file":"contracts/wrapper/NameWrapper.sol","start":31497},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/wrapper/NameWrapper.sol:978:9:\n    |\n978 |         bytes memory name = _addLabel(label, names[parentNode]);\n    |         ^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/wrapper/NameWrapper.sol:42:5:\n   |\n42 |     string public constant name = \"NameWrapper\";\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":1745,"file":"contracts/wrapper/NameWrapper.sol","message":"The shadowed declaration is here:","start":1702}],"severity":"warning","sourceLocation":{"end":32412,"file":"contracts/wrapper/NameWrapper.sol","start":32395},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n    --> contracts/wrapper/NameWrapper.sol:1045:9:\n     |\n1045 |         bytes memory name = _addLabel(label, \"\\x03eth\\x00\");\n     |         ^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/wrapper/NameWrapper.sol:42:5:\n   |\n42 |     string public constant name = \"NameWrapper\";\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":1745,"file":"contracts/wrapper/NameWrapper.sol","message":"The shadowed declaration is here:","start":1702}],"severity":"warning","sourceLocation":{"end":34527,"file":"contracts/wrapper/NameWrapper.sol","start":34510},"type":"Warning"},{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> contracts/wrapper/NameWrapper.sol:841:39:\n    |\n841 |     ) internal view override returns (bool) {\n    |                                       ^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":28658,"file":"contracts/wrapper/NameWrapper.sol","start":28654},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[854],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":855,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,854],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1875:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nameLocation":"1840:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2141:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nameLocation":"2090:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0","usedErrors":[]}],"src":"102:2521:0"},"id":0},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[234],"IERC165":[890]},"id":235,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":235,"sourceUnit":891,"src":"135:47:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":117,"name":"IERC165","nameLocations":["372:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":890,"src":"372:7:1"},"id":118,"nodeType":"InheritanceSpecifier","src":"372:7:1"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"184:165:1","text":" @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"},"fullyImplemented":false,"id":234,"linearizedBaseContracts":[234,890],"name":"IERC1155","nameLocation":"360:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"386:121:1","text":" @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":131,"name":"TransferSingle","nameLocation":"518:14:1","nodeType":"EventDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"549:8:1","nodeType":"VariableDeclaration","scope":131,"src":"533:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"533:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":123,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"575:4:1","nodeType":"VariableDeclaration","scope":131,"src":"559:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":122,"name":"address","nodeType":"ElementaryTypeName","src":"559:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":125,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"597:2:1","nodeType":"VariableDeclaration","scope":131,"src":"581:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"581:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":127,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"609:2:1","nodeType":"VariableDeclaration","scope":131,"src":"601:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":129,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"621:5:1","nodeType":"VariableDeclaration","scope":131,"src":"613:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"532:95:1"},"src":"512:116:1"},{"anonymous":false,"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"634:144:1","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":146,"name":"TransferBatch","nameLocation":"789:13:1","nodeType":"EventDefinition","parameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"828:8:1","nodeType":"VariableDeclaration","scope":146,"src":"812:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"812:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":136,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"862:4:1","nodeType":"VariableDeclaration","scope":146,"src":"846:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":135,"name":"address","nodeType":"ElementaryTypeName","src":"846:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":138,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"892:2:1","nodeType":"VariableDeclaration","scope":146,"src":"876:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":137,"name":"address","nodeType":"ElementaryTypeName","src":"876:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":141,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"914:3:1","nodeType":"VariableDeclaration","scope":146,"src":"904:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":139,"name":"uint256","nodeType":"ElementaryTypeName","src":"904:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":140,"nodeType":"ArrayTypeName","src":"904:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":144,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"937:6:1","nodeType":"VariableDeclaration","scope":146,"src":"927:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":142,"name":"uint256","nodeType":"ElementaryTypeName","src":"927:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":143,"nodeType":"ArrayTypeName","src":"927:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"802:147:1"},"src":"783:167:1"},{"anonymous":false,"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"956:147:1","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":155,"name":"ApprovalForAll","nameLocation":"1114:14:1","nodeType":"EventDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1145:7:1","nodeType":"VariableDeclaration","scope":155,"src":"1129:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":148,"name":"address","nodeType":"ElementaryTypeName","src":"1129:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":151,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1170:8:1","nodeType":"VariableDeclaration","scope":155,"src":"1154:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"1154:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":153,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1185:8:1","nodeType":"VariableDeclaration","scope":155,"src":"1180:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":152,"name":"bool","nodeType":"ElementaryTypeName","src":"1180:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1128:66:1"},"src":"1108:87:1"},{"anonymous":false,"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"1201:343:1","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":162,"name":"URI","nameLocation":"1555:3:1","nodeType":"EventDefinition","parameters":{"id":161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1566:5:1","nodeType":"VariableDeclaration","scope":162,"src":"1559:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":157,"name":"string","nodeType":"ElementaryTypeName","src":"1559:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":160,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1589:2:1","nodeType":"VariableDeclaration","scope":162,"src":"1573:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":159,"name":"uint256","nodeType":"ElementaryTypeName","src":"1573:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1558:34:1"},"src":"1549:44:1"},{"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"1599:173:1","text":" @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":172,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1786:9:1","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"account","nameLocation":"1804:7:1","nodeType":"VariableDeclaration","scope":172,"src":"1796:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"1796:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":167,"mutability":"mutable","name":"id","nameLocation":"1821:2:1","nodeType":"VariableDeclaration","scope":172,"src":"1813:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1795:29:1"},"returnParameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":172,"src":"1848:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"1848:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1847:9:1"},"scope":234,"src":"1777:80:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":173,"nodeType":"StructuredDocumentation","src":"1863:188:1","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":185,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2065:14:1","nodeType":"FunctionDefinition","parameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"accounts","nameLocation":"2099:8:1","nodeType":"VariableDeclaration","scope":185,"src":"2080:27:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":174,"name":"address","nodeType":"ElementaryTypeName","src":"2080:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":175,"nodeType":"ArrayTypeName","src":"2080:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":179,"mutability":"mutable","name":"ids","nameLocation":"2128:3:1","nodeType":"VariableDeclaration","scope":185,"src":"2109:22:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"2109:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":178,"nodeType":"ArrayTypeName","src":"2109:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2079:53:1"},"returnParameters":{"id":184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":185,"src":"2180:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"2180:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":182,"nodeType":"ArrayTypeName","src":"2180:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2179:18:1"},"scope":234,"src":"2056:142:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":186,"nodeType":"StructuredDocumentation","src":"2204:248:1","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."},"functionSelector":"a22cb465","id":193,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2466:17:1","nodeType":"FunctionDefinition","parameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":188,"mutability":"mutable","name":"operator","nameLocation":"2492:8:1","nodeType":"VariableDeclaration","scope":193,"src":"2484:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":187,"name":"address","nodeType":"ElementaryTypeName","src":"2484:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":190,"mutability":"mutable","name":"approved","nameLocation":"2507:8:1","nodeType":"VariableDeclaration","scope":193,"src":"2502:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"2502:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2483:33:1"},"returnParameters":{"id":192,"nodeType":"ParameterList","parameters":[],"src":"2525:0:1"},"scope":234,"src":"2457:69:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":194,"nodeType":"StructuredDocumentation","src":"2532:135:1","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":203,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2681:16:1","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"account","nameLocation":"2706:7:1","nodeType":"VariableDeclaration","scope":203,"src":"2698:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":195,"name":"address","nodeType":"ElementaryTypeName","src":"2698:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":198,"mutability":"mutable","name":"operator","nameLocation":"2723:8:1","nodeType":"VariableDeclaration","scope":203,"src":"2715:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"2715:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2697:35:1"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":203,"src":"2756:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":200,"name":"bool","nodeType":"ElementaryTypeName","src":"2756:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2755:6:1"},"scope":234,"src":"2672:90:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"2768:556:1","text":" @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":217,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3338:16:1","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"from","nameLocation":"3372:4:1","nodeType":"VariableDeclaration","scope":217,"src":"3364:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"3364:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":208,"mutability":"mutable","name":"to","nameLocation":"3394:2:1","nodeType":"VariableDeclaration","scope":217,"src":"3386:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":207,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":210,"mutability":"mutable","name":"id","nameLocation":"3414:2:1","nodeType":"VariableDeclaration","scope":217,"src":"3406:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":209,"name":"uint256","nodeType":"ElementaryTypeName","src":"3406:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":212,"mutability":"mutable","name":"amount","nameLocation":"3434:6:1","nodeType":"VariableDeclaration","scope":217,"src":"3426:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"3426:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"data","nameLocation":"3465:4:1","nodeType":"VariableDeclaration","scope":217,"src":"3450:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":213,"name":"bytes","nodeType":"ElementaryTypeName","src":"3450:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3354:121:1"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"3484:0:1"},"scope":234,"src":"3329:156:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"3491:390:1","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":233,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"3895:21:1","nodeType":"FunctionDefinition","parameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"from","nameLocation":"3934:4:1","nodeType":"VariableDeclaration","scope":233,"src":"3926:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":219,"name":"address","nodeType":"ElementaryTypeName","src":"3926:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"to","nameLocation":"3956:2:1","nodeType":"VariableDeclaration","scope":233,"src":"3948:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3948:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"ids","nameLocation":"3987:3:1","nodeType":"VariableDeclaration","scope":233,"src":"3968:22:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3968:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":224,"nodeType":"ArrayTypeName","src":"3968:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"amounts","nameLocation":"4019:7:1","nodeType":"VariableDeclaration","scope":233,"src":"4000:26:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":226,"name":"uint256","nodeType":"ElementaryTypeName","src":"4000:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":227,"nodeType":"ArrayTypeName","src":"4000:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"data","nameLocation":"4051:4:1","nodeType":"VariableDeclaration","scope":233,"src":"4036:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":229,"name":"bytes","nodeType":"ElementaryTypeName","src":"4036:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3916:145:1"},"returnParameters":{"id":232,"nodeType":"ParameterList","parameters":[],"src":"4070:0:1"},"scope":234,"src":"3886:185:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":235,"src":"350:3723:1","usedErrors":[]}],"src":"110:3964:1"},"id":1},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[275],"IERC165":[890]},"id":276,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":236,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":276,"sourceUnit":891,"src":"143:47:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":239,"name":"IERC165","nameLocations":["262:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":890,"src":"262:7:2"},"id":240,"nodeType":"InheritanceSpecifier","src":"262:7:2"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"192:39:2","text":" @dev _Available since v3.1._"},"fullyImplemented":false,"id":275,"linearizedBaseContracts":[275,890],"name":"IERC1155Receiver","nameLocation":"242:16:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"276:826:2","text":" @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":256,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1116:17:2","nodeType":"FunctionDefinition","parameters":{"id":252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"operator","nameLocation":"1151:8:2","nodeType":"VariableDeclaration","scope":256,"src":"1143:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"1143:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"from","nameLocation":"1177:4:2","nodeType":"VariableDeclaration","scope":256,"src":"1169:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":244,"name":"address","nodeType":"ElementaryTypeName","src":"1169:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"id","nameLocation":"1199:2:2","nodeType":"VariableDeclaration","scope":256,"src":"1191:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"1191:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"value","nameLocation":"1219:5:2","nodeType":"VariableDeclaration","scope":256,"src":"1211:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":251,"mutability":"mutable","name":"data","nameLocation":"1249:4:2","nodeType":"VariableDeclaration","scope":256,"src":"1234:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":250,"name":"bytes","nodeType":"ElementaryTypeName","src":"1234:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1133:126:2"},"returnParameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"1278:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":253,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1278:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1277:8:2"},"scope":275,"src":"1107:179:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"1292:994:2","text":" @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":274,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2300:22:2","nodeType":"FunctionDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"operator","nameLocation":"2340:8:2","nodeType":"VariableDeclaration","scope":274,"src":"2332:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"2332:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"from","nameLocation":"2366:4:2","nodeType":"VariableDeclaration","scope":274,"src":"2358:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"2358:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"ids","nameLocation":"2399:3:2","nodeType":"VariableDeclaration","scope":274,"src":"2380:22:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":262,"name":"uint256","nodeType":"ElementaryTypeName","src":"2380:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":263,"nodeType":"ArrayTypeName","src":"2380:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"values","nameLocation":"2431:6:2","nodeType":"VariableDeclaration","scope":274,"src":"2412:25:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":265,"name":"uint256","nodeType":"ElementaryTypeName","src":"2412:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":266,"nodeType":"ArrayTypeName","src":"2412:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":269,"mutability":"mutable","name":"data","nameLocation":"2462:4:2","nodeType":"VariableDeclaration","scope":274,"src":"2447:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":268,"name":"bytes","nodeType":"ElementaryTypeName","src":"2447:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2322:150:2"},"returnParameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":274,"src":"2491:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":271,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2491:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2490:8:2"},"scope":275,"src":"2291:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":276,"src":"232:2269:2","usedErrors":[]}],"src":"118:2384:2"},"id":2},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[234],"IERC1155MetadataURI":[290],"IERC165":[890]},"id":291,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":277,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"117:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":278,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":291,"sourceUnit":235,"src":"142:25:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":280,"name":"IERC1155","nameLocations":["397:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":234,"src":"397:8:3"},"id":281,"nodeType":"InheritanceSpecifier","src":"397:8:3"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"169:194:3","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"},"fullyImplemented":false,"id":290,"linearizedBaseContracts":[290,234,890],"name":"IERC1155MetadataURI","nameLocation":"374:19:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"412:192:3","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":289,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"618:3:3","nodeType":"FunctionDefinition","parameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"id","nameLocation":"630:2:3","nodeType":"VariableDeclaration","scope":289,"src":"622:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":283,"name":"uint256","nodeType":"ElementaryTypeName","src":"622:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"621:12:3"},"returnParameters":{"id":288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":289,"src":"657:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":286,"name":"string","nodeType":"ElementaryTypeName","src":"657:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"656:15:3"},"scope":290,"src":"609:63:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":291,"src":"364:310:3","usedErrors":[]}],"src":"117:558:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[368]},"id":369,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":292,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":293,"nodeType":"StructuredDocumentation","src":"131:70:4","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":368,"linearizedBaseContracts":[368],"name":"IERC20","nameLocation":"212:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":294,"nodeType":"StructuredDocumentation","src":"225:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":302,"name":"Transfer","nameLocation":"394:8:4","nodeType":"EventDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":296,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:4","nodeType":"VariableDeclaration","scope":302,"src":"403:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":295,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":298,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:4","nodeType":"VariableDeclaration","scope":302,"src":"425:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":297,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":300,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:4","nodeType":"VariableDeclaration","scope":302,"src":"445:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":299,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:4"},"src":"388:72:4"},{"anonymous":false,"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"466:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":311,"name":"Approval","nameLocation":"625:8:4","nodeType":"EventDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:4","nodeType":"VariableDeclaration","scope":311,"src":"634:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":307,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:4","nodeType":"VariableDeclaration","scope":311,"src":"657:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:4","nodeType":"VariableDeclaration","scope":311,"src":"682:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:4"},"src":"619:78:4"},{"documentation":{"id":312,"nodeType":"StructuredDocumentation","src":"703:66:4","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":317,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:4","nodeType":"FunctionDefinition","parameters":{"id":313,"nodeType":"ParameterList","parameters":[],"src":"794:2:4"},"returnParameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":317,"src":"820:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:4"},"scope":368,"src":"774:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"835:72:4","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":325,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:4","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"account","nameLocation":"939:7:4","nodeType":"VariableDeclaration","scope":325,"src":"931:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:4"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":325,"src":"971:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:4"},"scope":368,"src":"912:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":326,"nodeType":"StructuredDocumentation","src":"986:202:4","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":335,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:4","nodeType":"FunctionDefinition","parameters":{"id":331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"to","nameLocation":"1219:2:4","nodeType":"VariableDeclaration","scope":335,"src":"1211:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":330,"mutability":"mutable","name":"amount","nameLocation":"1231:6:4","nodeType":"VariableDeclaration","scope":335,"src":"1223:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":329,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:4"},"returnParameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":335,"src":"1257:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":332,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:4"},"scope":368,"src":"1193:70:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1269:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:4","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"owner","nameLocation":"1565:5:4","nodeType":"VariableDeclaration","scope":345,"src":"1557:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"spender","nameLocation":"1580:7:4","nodeType":"VariableDeclaration","scope":345,"src":"1572:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:4"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1612:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":342,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:4"},"scope":368,"src":"1538:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1627:642:4","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":355,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:4","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"spender","nameLocation":"2299:7:4","nodeType":"VariableDeclaration","scope":355,"src":"2291:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":347,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"amount","nameLocation":"2316:6:4","nodeType":"VariableDeclaration","scope":355,"src":"2308:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":349,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:4"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":355,"src":"2342:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":352,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:4"},"scope":368,"src":"2274:74:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"2354:287:4","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":367,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:4","nodeType":"FunctionDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"from","nameLocation":"2685:4:4","nodeType":"VariableDeclaration","scope":367,"src":"2677:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":360,"mutability":"mutable","name":"to","nameLocation":"2707:2:4","nodeType":"VariableDeclaration","scope":367,"src":"2699:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":359,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"amount","nameLocation":"2727:6:4","nodeType":"VariableDeclaration","scope":367,"src":"2719:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":361,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:4"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":367,"src":"2758:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":364,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:4"},"scope":368,"src":"2646:118:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":369,"src":"202:2564:4","usedErrors":[]}],"src":"106:2661:4"},"id":4},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[890],"IERC721":[484]},"id":485,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":370,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":371,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":485,"sourceUnit":891,"src":"133:47:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":373,"name":"IERC165","nameLocations":["271:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":890,"src":"271:7:5"},"id":374,"nodeType":"InheritanceSpecifier","src":"271:7:5"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"182:67:5","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":484,"linearizedBaseContracts":[484,890],"name":"IERC721","nameLocation":"260:7:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":375,"nodeType":"StructuredDocumentation","src":"285:88:5","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":383,"name":"Transfer","nameLocation":"384:8:5","nodeType":"EventDefinition","parameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:5","nodeType":"VariableDeclaration","scope":383,"src":"393:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":376,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":379,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:5","nodeType":"VariableDeclaration","scope":383,"src":"415:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":381,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:5","nodeType":"VariableDeclaration","scope":383,"src":"435:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":380,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:5"},"src":"378:82:5"},{"anonymous":false,"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"466:94:5","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":392,"name":"Approval","nameLocation":"571:8:5","nodeType":"EventDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:5","nodeType":"VariableDeclaration","scope":392,"src":"580:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":388,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:5","nodeType":"VariableDeclaration","scope":392,"src":"603:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":390,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:5","nodeType":"VariableDeclaration","scope":392,"src":"629:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:5"},"src":"565:89:5"},{"anonymous":false,"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"660:117:5","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":401,"name":"ApprovalForAll","nameLocation":"788:14:5","nodeType":"EventDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:5","nodeType":"VariableDeclaration","scope":401,"src":"803:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":397,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:5","nodeType":"VariableDeclaration","scope":401,"src":"826:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":396,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":399,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:5","nodeType":"VariableDeclaration","scope":401,"src":"852:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":398,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:5"},"src":"782:85:5"},{"documentation":{"id":402,"nodeType":"StructuredDocumentation","src":"873:76:5","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":409,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:5","nodeType":"FunctionDefinition","parameters":{"id":405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":404,"mutability":"mutable","name":"owner","nameLocation":"981:5:5","nodeType":"VariableDeclaration","scope":409,"src":"973:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":403,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:5"},"returnParameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"balance","nameLocation":"1019:7:5","nodeType":"VariableDeclaration","scope":409,"src":"1011:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":406,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:5"},"scope":484,"src":"954:74:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"1034:131:5","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":417,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:5","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:5","nodeType":"VariableDeclaration","scope":417,"src":"1187:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":411,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:5"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"owner","nameLocation":"1235:5:5","nodeType":"VariableDeclaration","scope":417,"src":"1227:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":414,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:5"},"scope":484,"src":"1170:72:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":418,"nodeType":"StructuredDocumentation","src":"1248:556:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":429,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:5","nodeType":"FunctionDefinition","parameters":{"id":427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"from","nameLocation":"1852:4:5","nodeType":"VariableDeclaration","scope":429,"src":"1844:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":422,"mutability":"mutable","name":"to","nameLocation":"1874:2:5","nodeType":"VariableDeclaration","scope":429,"src":"1866:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":421,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":424,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:5","nodeType":"VariableDeclaration","scope":429,"src":"1886:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":423,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":426,"mutability":"mutable","name":"data","nameLocation":"1926:4:5","nodeType":"VariableDeclaration","scope":429,"src":"1911:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":425,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:5"},"returnParameters":{"id":428,"nodeType":"ParameterList","parameters":[],"src":"1945:0:5"},"scope":484,"src":"1809:137:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"1952:687:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":439,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:5","nodeType":"FunctionDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":432,"mutability":"mutable","name":"from","nameLocation":"2687:4:5","nodeType":"VariableDeclaration","scope":439,"src":"2679:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":434,"mutability":"mutable","name":"to","nameLocation":"2709:2:5","nodeType":"VariableDeclaration","scope":439,"src":"2701:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":433,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":436,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:5","nodeType":"VariableDeclaration","scope":439,"src":"2721:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":435,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:5"},"returnParameters":{"id":438,"nodeType":"ParameterList","parameters":[],"src":"2751:0:5"},"scope":484,"src":"2644:108:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":440,"nodeType":"StructuredDocumentation","src":"2758:732:5","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":449,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3504:12:5","nodeType":"FunctionDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"from","nameLocation":"3534:4:5","nodeType":"VariableDeclaration","scope":449,"src":"3526:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":441,"name":"address","nodeType":"ElementaryTypeName","src":"3526:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":444,"mutability":"mutable","name":"to","nameLocation":"3556:2:5","nodeType":"VariableDeclaration","scope":449,"src":"3548:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":443,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":446,"mutability":"mutable","name":"tokenId","nameLocation":"3576:7:5","nodeType":"VariableDeclaration","scope":449,"src":"3568:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"3568:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:73:5"},"returnParameters":{"id":448,"nodeType":"ParameterList","parameters":[],"src":"3598:0:5"},"scope":484,"src":"3495:104:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":450,"nodeType":"StructuredDocumentation","src":"3605:452:5","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":457,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4071:7:5","nodeType":"FunctionDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"to","nameLocation":"4087:2:5","nodeType":"VariableDeclaration","scope":457,"src":"4079:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":451,"name":"address","nodeType":"ElementaryTypeName","src":"4079:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"tokenId","nameLocation":"4099:7:5","nodeType":"VariableDeclaration","scope":457,"src":"4091:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4078:29:5"},"returnParameters":{"id":456,"nodeType":"ParameterList","parameters":[],"src":"4116:0:5"},"scope":484,"src":"4062:55:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"4123:309:5","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":465,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4446:17:5","nodeType":"FunctionDefinition","parameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"operator","nameLocation":"4472:8:5","nodeType":"VariableDeclaration","scope":465,"src":"4464:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"4464:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":462,"mutability":"mutable","name":"_approved","nameLocation":"4487:9:5","nodeType":"VariableDeclaration","scope":465,"src":"4482:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":461,"name":"bool","nodeType":"ElementaryTypeName","src":"4482:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4463:34:5"},"returnParameters":{"id":464,"nodeType":"ParameterList","parameters":[],"src":"4506:0:5"},"scope":484,"src":"4437:70:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":466,"nodeType":"StructuredDocumentation","src":"4513:139:5","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":473,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4666:11:5","nodeType":"FunctionDefinition","parameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"tokenId","nameLocation":"4686:7:5","nodeType":"VariableDeclaration","scope":473,"src":"4678:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":467,"name":"uint256","nodeType":"ElementaryTypeName","src":"4678:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4677:17:5"},"returnParameters":{"id":472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":471,"mutability":"mutable","name":"operator","nameLocation":"4726:8:5","nodeType":"VariableDeclaration","scope":473,"src":"4718:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"4718:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4717:18:5"},"scope":484,"src":"4657:79:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":474,"nodeType":"StructuredDocumentation","src":"4742:138:5","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":483,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4894:16:5","nodeType":"FunctionDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":476,"mutability":"mutable","name":"owner","nameLocation":"4919:5:5","nodeType":"VariableDeclaration","scope":483,"src":"4911:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"4911:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":478,"mutability":"mutable","name":"operator","nameLocation":"4934:8:5","nodeType":"VariableDeclaration","scope":483,"src":"4926:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"4926:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4910:33:5"},"returnParameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":483,"src":"4967:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":480,"name":"bool","nodeType":"ElementaryTypeName","src":"4967:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4966:6:5"},"scope":484,"src":"4885:88:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":485,"src":"250:4725:5","usedErrors":[]}],"src":"108:4868:5"},"id":5},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[502]},"id":503,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":486,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"141:152:6","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":502,"linearizedBaseContracts":[502],"name":"IERC721Receiver","nameLocation":"304:15:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"326:493:6","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":501,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:6","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"mutability":"mutable","name":"operator","nameLocation":"867:8:6","nodeType":"VariableDeclaration","scope":501,"src":"859:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":492,"mutability":"mutable","name":"from","nameLocation":"893:4:6","nodeType":"VariableDeclaration","scope":501,"src":"885:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":491,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":494,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:6","nodeType":"VariableDeclaration","scope":501,"src":"907:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"data","nameLocation":"947:4:6","nodeType":"VariableDeclaration","scope":501,"src":"932:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":495,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:6"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":501,"src":"976:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":498,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:6"},"scope":502,"src":"824:160:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":503,"src":"294:692:6","usedErrors":[]}],"src":"116:871:6"},"id":6},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[832]},"id":833,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":504,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"126:67:7","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":832,"linearizedBaseContracts":[832],"name":"Address","nameLocation":"202:7:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":519,"nodeType":"Block","src":"1241:254:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":513,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"1465:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1473:4:7","memberName":"code","nodeType":"MemberAccess","src":"1465:12:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1478:6:7","memberName":"length","nodeType":"MemberAccess","src":"1465:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":512,"id":518,"nodeType":"Return","src":"1458:30:7"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"216:954:7","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":520,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:7","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"account","nameLocation":"1203:7:7","nodeType":"VariableDeclaration","scope":520,"src":"1195:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:7"},"returnParameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":520,"src":"1235:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":510,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:7"},"scope":832,"src":"1175:320:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":553,"nodeType":"Block","src":"2483:241:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":531,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$832","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$832","typeString":"library Address"}],"id":530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":529,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:7","typeDescriptions":{}}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2501:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2515:7:7","memberName":"balance","nodeType":"MemberAccess","src":"2501:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":534,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2526:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":528,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"2493:73:7"},{"assignments":[540,null],"declarations":[{"constant":false,"id":540,"mutability":"mutable","name":"success","nameLocation":"2583:7:7","nodeType":"VariableDeclaration","scope":553,"src":"2578:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":539,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":547,"initialValue":{"arguments":[{"hexValue":"","id":545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":541,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"2596:9:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2606:4:7","memberName":"call","nodeType":"MemberAccess","src":"2596:14:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":543,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2618:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2596:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:7"},{"expression":{"arguments":[{"id":549,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"2647:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":548,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:78:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":552,"nodeType":"ExpressionStatement","src":"2639:78:7"}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"1501:906:7","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":554,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:7","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:7","nodeType":"VariableDeclaration","scope":554,"src":"2431:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"amount","nameLocation":"2466:6:7","nodeType":"VariableDeclaration","scope":554,"src":"2458:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":524,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:7"},"returnParameters":{"id":527,"nodeType":"ParameterList","parameters":[],"src":"2483:0:7"},"scope":832,"src":"2412:312:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":571,"nodeType":"Block","src":"3555:96:7","statements":[{"expression":{"arguments":[{"id":565,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"3594:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":566,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"3602:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":564,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[612,656],"referencedDeclaration":656,"src":"3572:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:72:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":563,"id":570,"nodeType":"Return","src":"3565:79:7"}]},"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"2730:731:7","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":572,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:7","nodeType":"FunctionDefinition","parameters":{"id":560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"target","nameLocation":"3496:6:7","nodeType":"VariableDeclaration","scope":572,"src":"3488:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"data","nameLocation":"3517:4:7","nodeType":"VariableDeclaration","scope":572,"src":"3504:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":558,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:7"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":572,"src":"3541:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":561,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:7"},"scope":832,"src":"3466:185:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":591,"nodeType":"Block","src":"4020:76:7","statements":[{"expression":{"arguments":[{"id":585,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"4059:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":586,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"4067:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":588,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4076:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":584,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[612,656],"referencedDeclaration":656,"src":"4037:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4037:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":583,"id":590,"nodeType":"Return","src":"4030:59:7"}]},"documentation":{"id":573,"nodeType":"StructuredDocumentation","src":"3657:211:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":592,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:7","nodeType":"FunctionDefinition","parameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"target","nameLocation":"3912:6:7","nodeType":"VariableDeclaration","scope":592,"src":"3904:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":574,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":577,"mutability":"mutable","name":"data","nameLocation":"3941:4:7","nodeType":"VariableDeclaration","scope":592,"src":"3928:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":576,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:7","nodeType":"VariableDeclaration","scope":592,"src":"3955:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":578,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:7"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":592,"src":"4006:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":581,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:7"},"scope":832,"src":"3873:223:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":611,"nodeType":"Block","src":"4601:111:7","statements":[{"expression":{"arguments":[{"id":605,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"4640:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":606,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"4648:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"4654:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":604,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[612,656],"referencedDeclaration":656,"src":"4618:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4618:87:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":603,"id":610,"nodeType":"Return","src":"4611:94:7"}]},"documentation":{"id":593,"nodeType":"StructuredDocumentation","src":"4102:351:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":612,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:7","nodeType":"FunctionDefinition","parameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"target","nameLocation":"4506:6:7","nodeType":"VariableDeclaration","scope":612,"src":"4498:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"data","nameLocation":"4535:4:7","nodeType":"VariableDeclaration","scope":612,"src":"4522:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":596,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":599,"mutability":"mutable","name":"value","nameLocation":"4557:5:7","nodeType":"VariableDeclaration","scope":612,"src":"4549:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":598,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:7"},"returnParameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":612,"src":"4587:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":601,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:7"},"scope":832,"src":"4458:254:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":655,"nodeType":"Block","src":"5139:267:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":629,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$832","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$832","typeString":"library Address"}],"id":628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":627,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:7","typeDescriptions":{}}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5157:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5171:7:7","memberName":"balance","nodeType":"MemberAccess","src":"5157:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"5182:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":626,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5149:81:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":636,"nodeType":"ExpressionStatement","src":"5149:81:7"},{"assignments":[638,640],"declarations":[{"constant":false,"id":638,"mutability":"mutable","name":"success","nameLocation":"5246:7:7","nodeType":"VariableDeclaration","scope":655,"src":"5241:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":637,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:7","nodeType":"VariableDeclaration","scope":655,"src":"5255:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":639,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":647,"initialValue":{"arguments":[{"id":645,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"5308:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":641,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"5282:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5289:4:7","memberName":"call","nodeType":"MemberAccess","src":"5282:11:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"5301:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5282:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:7"},{"expression":{"arguments":[{"id":649,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"5357:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":650,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"5365:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":651,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"5374:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":652,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"5386:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":648,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"5330:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5330:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":625,"id":654,"nodeType":"Return","src":"5323:76:7"}]},"documentation":{"id":613,"nodeType":"StructuredDocumentation","src":"4718:237:7","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":656,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:7","nodeType":"FunctionDefinition","parameters":{"id":622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"target","nameLocation":"5008:6:7","nodeType":"VariableDeclaration","scope":656,"src":"5000:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":617,"mutability":"mutable","name":"data","nameLocation":"5037:4:7","nodeType":"VariableDeclaration","scope":656,"src":"5024:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":616,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":619,"mutability":"mutable","name":"value","nameLocation":"5059:5:7","nodeType":"VariableDeclaration","scope":656,"src":"5051:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":621,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:7","nodeType":"VariableDeclaration","scope":656,"src":"5074:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":620,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:7"},"returnParameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":656,"src":"5125:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":623,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:7"},"scope":832,"src":"4960:446:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":672,"nodeType":"Block","src":"5683:97:7","statements":[{"expression":{"arguments":[{"id":667,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"5719:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":668,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"5727:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":666,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[673,702],"referencedDeclaration":702,"src":"5700:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5700:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":665,"id":671,"nodeType":"Return","src":"5693:80:7"}]},"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"5412:166:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":673,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:7","nodeType":"FunctionDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"mutability":"mutable","name":"target","nameLocation":"5619:6:7","nodeType":"VariableDeclaration","scope":673,"src":"5611:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"data","nameLocation":"5640:4:7","nodeType":"VariableDeclaration","scope":673,"src":"5627:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":660,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:7"},"returnParameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":673,"src":"5669:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":663,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:7"},"scope":832,"src":"5583:197:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":701,"nodeType":"Block","src":"6122:168:7","statements":[{"assignments":[686,688],"declarations":[{"constant":false,"id":686,"mutability":"mutable","name":"success","nameLocation":"6138:7:7","nodeType":"VariableDeclaration","scope":701,"src":"6133:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":685,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":688,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:7","nodeType":"VariableDeclaration","scope":701,"src":"6147:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":687,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":693,"initialValue":{"arguments":[{"id":691,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6192:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":689,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"6174:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:10:7","memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:7","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:7"},{"expression":{"arguments":[{"id":695,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"6241:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":696,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"6249:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":697,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"6258:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":698,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6270:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":694,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"6214:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6214:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":684,"id":700,"nodeType":"Return","src":"6207:76:7"}]},"documentation":{"id":674,"nodeType":"StructuredDocumentation","src":"5786:173:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":702,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:7","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"target","nameLocation":"6009:6:7","nodeType":"VariableDeclaration","scope":702,"src":"6001:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":675,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":678,"mutability":"mutable","name":"data","nameLocation":"6038:4:7","nodeType":"VariableDeclaration","scope":702,"src":"6025:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":677,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:7","nodeType":"VariableDeclaration","scope":702,"src":"6052:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":679,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:7"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":702,"src":"6108:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":682,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:7"},"scope":832,"src":"5964:326:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":718,"nodeType":"Block","src":"6566:101:7","statements":[{"expression":{"arguments":[{"id":713,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"6604:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":714,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"6612:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":712,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[719,748],"referencedDeclaration":748,"src":"6583:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6583:77:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":711,"id":717,"nodeType":"Return","src":"6576:84:7"}]},"documentation":{"id":703,"nodeType":"StructuredDocumentation","src":"6296:168:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":719,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:7","nodeType":"FunctionDefinition","parameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"mutability":"mutable","name":"target","nameLocation":"6507:6:7","nodeType":"VariableDeclaration","scope":719,"src":"6499:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":707,"mutability":"mutable","name":"data","nameLocation":"6528:4:7","nodeType":"VariableDeclaration","scope":719,"src":"6515:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":706,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:7"},"returnParameters":{"id":711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":719,"src":"6552:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":709,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:7"},"scope":832,"src":"6469:198:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":747,"nodeType":"Block","src":"7008:170:7","statements":[{"assignments":[732,734],"declarations":[{"constant":false,"id":732,"mutability":"mutable","name":"success","nameLocation":"7024:7:7","nodeType":"VariableDeclaration","scope":747,"src":"7019:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":731,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":734,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:7","nodeType":"VariableDeclaration","scope":747,"src":"7033:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":733,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":739,"initialValue":{"arguments":[{"id":737,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"7080:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":735,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"7060:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7067:12:7","memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:7","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7060:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:7"},{"expression":{"arguments":[{"id":741,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"7129:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":742,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"7137:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":743,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"7146:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":744,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"7158:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":740,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"7102:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7102:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":730,"id":746,"nodeType":"Return","src":"7095:76:7"}]},"documentation":{"id":720,"nodeType":"StructuredDocumentation","src":"6673:175:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":748,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:7","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"target","nameLocation":"6900:6:7","nodeType":"VariableDeclaration","scope":748,"src":"6892:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":721,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"data","nameLocation":"6929:4:7","nodeType":"VariableDeclaration","scope":748,"src":"6916:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":723,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:7","nodeType":"VariableDeclaration","scope":748,"src":"6943:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":725,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:7"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":748,"src":"6994:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":728,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:7"},"scope":832,"src":"6853:325:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":786,"nodeType":"Block","src":"7660:434:7","statements":[{"condition":{"id":762,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7674:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":784,"nodeType":"Block","src":"8030:58:7","statements":[{"expression":{"arguments":[{"id":780,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"8052:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":781,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"8064:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":779,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"8044:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8044:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":783,"nodeType":"ExpressionStatement","src":"8044:33:7"}]},"id":785,"nodeType":"IfStatement","src":"7670:418:7","trueBody":{"id":778,"nodeType":"Block","src":"7683:341:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":763,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7701:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7712:6:7","memberName":"length","nodeType":"MemberAccess","src":"7701:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":775,"nodeType":"IfStatement","src":"7697:286:7","trueBody":{"id":774,"nodeType":"Block","src":"7725:258:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":769,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"7927:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":768,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"7916:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7916:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":767,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":773,"nodeType":"ExpressionStatement","src":"7908:60:7"}]}},{"expression":{"id":776,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"8003:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":761,"id":777,"nodeType":"Return","src":"7996:17:7"}]}}]},"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"7184:277:7","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":787,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:7","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"target","nameLocation":"7519:6:7","nodeType":"VariableDeclaration","scope":787,"src":"7511:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":753,"mutability":"mutable","name":"success","nameLocation":"7540:7:7","nodeType":"VariableDeclaration","scope":787,"src":"7535:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":752,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:7","nodeType":"VariableDeclaration","scope":787,"src":"7557:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":754,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:7","nodeType":"VariableDeclaration","scope":787,"src":"7590:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":756,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:7"},"returnParameters":{"id":761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":787,"src":"7646:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":759,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:7"},"scope":832,"src":"7466:628:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":810,"nodeType":"Block","src":"8475:135:7","statements":[{"condition":{"id":799,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"8489:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":808,"nodeType":"Block","src":"8546:58:7","statements":[{"expression":{"arguments":[{"id":804,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"8568:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":805,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"8580:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":803,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"8560:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":807,"nodeType":"ExpressionStatement","src":"8560:33:7"}]},"id":809,"nodeType":"IfStatement","src":"8485:119:7","trueBody":{"id":802,"nodeType":"Block","src":"8498:42:7","statements":[{"expression":{"id":800,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"8519:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":798,"id":801,"nodeType":"Return","src":"8512:17:7"}]}}]},"documentation":{"id":788,"nodeType":"StructuredDocumentation","src":"8100:210:7","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":811,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:7","nodeType":"FunctionDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":790,"mutability":"mutable","name":"success","nameLocation":"8355:7:7","nodeType":"VariableDeclaration","scope":811,"src":"8350:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":789,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":792,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:7","nodeType":"VariableDeclaration","scope":811,"src":"8372:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":791,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:7","nodeType":"VariableDeclaration","scope":811,"src":"8405:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":793,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:7"},"returnParameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":811,"src":"8461:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":796,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:7"},"scope":832,"src":"8315:295:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":830,"nodeType":"Block","src":"8699:457:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":818,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"8775:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8786:6:7","memberName":"length","nodeType":"MemberAccess","src":"8775:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":828,"nodeType":"Block","src":"9105:45:7","statements":[{"expression":{"arguments":[{"id":825,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"9126:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":824,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9119:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":827,"nodeType":"ExpressionStatement","src":"9119:20:7"}]},"id":829,"nodeType":"IfStatement","src":"8771:379:7","trueBody":{"id":823,"nodeType":"Block","src":"8798:301:7","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:7","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:7","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:7"},"nodeType":"YulFunctionCall","src":"8997:17:7"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:7","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:7","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:7"},"nodeType":"YulFunctionCall","src":"9038:19:7"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:7"},"nodeType":"YulFunctionCall","src":"9031:44:7"},"nodeType":"YulExpressionStatement","src":"9031:44:7"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":813,"isOffset":false,"isSlot":false,"src":"9003:10:7","valueSize":1},{"declaration":813,"isOffset":false,"isSlot":false,"src":"9046:10:7","valueSize":1}],"id":822,"nodeType":"InlineAssembly","src":"8947:142:7"}]}}]},"id":831,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:7","nodeType":"FunctionDefinition","parameters":{"id":816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":813,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:7","nodeType":"VariableDeclaration","scope":831,"src":"8633:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":812,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":815,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:7","nodeType":"VariableDeclaration","scope":831,"src":"8658:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":814,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:7"},"returnParameters":{"id":817,"nodeType":"ParameterList","parameters":[],"src":"8699:0:7"},"scope":832,"src":"8616:540:7","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":833,"src":"194:8964:7","usedErrors":[]}],"src":"101:9058:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[854]},"id":855,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":834,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"111:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":854,"linearizedBaseContracts":[854],"name":"Context","nameLocation":"626:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":843,"nodeType":"Block","src":"702:34:8","statements":[{"expression":{"expression":{"id":840,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:8","memberName":"sender","nodeType":"MemberAccess","src":"719:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":839,"id":842,"nodeType":"Return","src":"712:17:8"}]},"id":844,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:8","nodeType":"FunctionDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[],"src":"659:2:8"},"returnParameters":{"id":839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":844,"src":"693:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":837,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:8"},"scope":854,"src":"640:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":852,"nodeType":"Block","src":"809:32:8","statements":[{"expression":{"expression":{"id":849,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:8","memberName":"data","nodeType":"MemberAccess","src":"826:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":848,"id":851,"nodeType":"Return","src":"819:15:8"}]},"id":853,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:8","nodeType":"FunctionDefinition","parameters":{"id":845,"nodeType":"ParameterList","parameters":[],"src":"759:2:8"},"returnParameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":853,"src":"793:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":846,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:8"},"scope":854,"src":"742:99:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":855,"src":"608:235:8","usedErrors":[]}],"src":"86:758:8"},"id":8},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[878],"IERC165":[890]},"id":879,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":856,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:9"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":857,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":879,"sourceUnit":891,"src":"124:23:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":859,"name":"IERC165","nameLocations":["754:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":890,"src":"754:7:9"},"id":860,"nodeType":"InheritanceSpecifier","src":"754:7:9"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":858,"nodeType":"StructuredDocumentation","src":"149:576:9","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":878,"linearizedBaseContracts":[878,890],"name":"ERC165","nameLocation":"744:6:9","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[889],"body":{"id":876,"nodeType":"Block","src":"920:64:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":869,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"937:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":871,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"957:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$890_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$890_$","typeString":"type(contract IERC165)"}],"id":870,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$890","typeString":"type(contract IERC165)"}},"id":873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:9","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":868,"id":875,"nodeType":"Return","src":"930:47:9"}]},"documentation":{"id":861,"nodeType":"StructuredDocumentation","src":"768:56:9","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":877,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:9","nodeType":"FunctionDefinition","overrides":{"id":865,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:9"},"parameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:9","nodeType":"VariableDeclaration","scope":877,"src":"856:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":862,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:9"},"returnParameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":877,"src":"914:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":866,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:9"},"scope":878,"src":"829:155:9","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":879,"src":"726:260:9","usedErrors":[]}],"src":"99:888:9"},"id":9},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[890]},"id":891,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":880,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"125:279:10","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":890,"linearizedBaseContracts":[890],"name":"IERC165","nameLocation":"415:7:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":882,"nodeType":"StructuredDocumentation","src":"429:340:10","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":889,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:10","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:10","nodeType":"VariableDeclaration","scope":889,"src":"801:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":883,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:10"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":889,"src":"844:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":886,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:10"},"scope":890,"src":"774:76:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":891,"src":"405:447:10","usedErrors":[]}],"src":"100:753:10"},"id":10},"contracts/ethregistrar/IBaseRegistrar.sol":{"ast":{"absolutePath":"contracts/ethregistrar/IBaseRegistrar.sol","exportedSymbols":{"ENS":[1122],"IBaseRegistrar":[985],"IERC165":[890],"IERC721":[484]},"id":986,"nodeType":"SourceUnit","nodes":[{"absolutePath":"contracts/registry/ENS.sol","file":"../registry/ENS.sol","id":892,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":986,"sourceUnit":1123,"src":"0:29:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ethregistrar/IBaseRegistrar.sol","file":"./IBaseRegistrar.sol","id":893,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":986,"sourceUnit":986,"src":"30:30:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":894,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":986,"sourceUnit":485,"src":"61:58:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":895,"name":"IERC721","nameLocations":["149:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":484,"src":"149:7:11"},"id":896,"nodeType":"InheritanceSpecifier","src":"149:7:11"}],"canonicalName":"IBaseRegistrar","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":985,"linearizedBaseContracts":[985,484,890],"name":"IBaseRegistrar","nameLocation":"131:14:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"0a8bb31534c0ed46f380cb867bd5c803a189ced9a764e30b3a4991a9901d7474","id":900,"name":"ControllerAdded","nameLocation":"169:15:11","nodeType":"EventDefinition","parameters":{"id":899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":898,"indexed":true,"mutability":"mutable","name":"controller","nameLocation":"201:10:11","nodeType":"VariableDeclaration","scope":900,"src":"185:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":897,"name":"address","nodeType":"ElementaryTypeName","src":"185:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"184:28:11"},"src":"163:50:11"},{"anonymous":false,"eventSelector":"33d83959be2573f5453b12eb9d43b3499bc57d96bd2f067ba44803c859e81113","id":904,"name":"ControllerRemoved","nameLocation":"224:17:11","nodeType":"EventDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"indexed":true,"mutability":"mutable","name":"controller","nameLocation":"258:10:11","nodeType":"VariableDeclaration","scope":904,"src":"242:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"242:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"241:28:11"},"src":"218:52:11"},{"anonymous":false,"eventSelector":"ea3d7e1195a15d2ddcd859b01abd4c6b960fa9f9264e499a70a90c7f0c64b717","id":912,"name":"NameMigrated","nameLocation":"281:12:11","nodeType":"EventDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"319:2:11","nodeType":"VariableDeclaration","scope":912,"src":"303:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"303:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":908,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"347:5:11","nodeType":"VariableDeclaration","scope":912,"src":"331:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":907,"name":"address","nodeType":"ElementaryTypeName","src":"331:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":910,"indexed":false,"mutability":"mutable","name":"expires","nameLocation":"370:7:11","nodeType":"VariableDeclaration","scope":912,"src":"362:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":909,"name":"uint256","nodeType":"ElementaryTypeName","src":"362:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"293:90:11"},"src":"275:109:11"},{"anonymous":false,"eventSelector":"b3d987963d01b2f68493b4bdb130988f157ea43070d4ad840fee0466ed9370d9","id":920,"name":"NameRegistered","nameLocation":"395:14:11","nodeType":"EventDefinition","parameters":{"id":919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"435:2:11","nodeType":"VariableDeclaration","scope":920,"src":"419:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"419:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":916,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"463:5:11","nodeType":"VariableDeclaration","scope":920,"src":"447:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":915,"name":"address","nodeType":"ElementaryTypeName","src":"447:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":918,"indexed":false,"mutability":"mutable","name":"expires","nameLocation":"486:7:11","nodeType":"VariableDeclaration","scope":920,"src":"478:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":917,"name":"uint256","nodeType":"ElementaryTypeName","src":"478:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:90:11"},"src":"389:111:11"},{"anonymous":false,"eventSelector":"9b87a00e30f1ac65d898f070f8a3488fe60517182d0a2098e1b4b93a54aa9bd6","id":926,"name":"NameRenewed","nameLocation":"511:11:11","nodeType":"EventDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"539:2:11","nodeType":"VariableDeclaration","scope":926,"src":"523:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"523:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":924,"indexed":false,"mutability":"mutable","name":"expires","nameLocation":"551:7:11","nodeType":"VariableDeclaration","scope":926,"src":"543:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"543:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"522:37:11"},"src":"505:55:11"},{"functionSelector":"a7fc7a07","id":931,"implemented":false,"kind":"function","modifiers":[],"name":"addController","nameLocation":"643:13:11","nodeType":"FunctionDefinition","parameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":928,"mutability":"mutable","name":"controller","nameLocation":"665:10:11","nodeType":"VariableDeclaration","scope":931,"src":"657:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":927,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"656:20:11"},"returnParameters":{"id":930,"nodeType":"ParameterList","parameters":[],"src":"685:0:11"},"scope":985,"src":"634:52:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f6a74ed7","id":936,"implemented":false,"kind":"function","modifiers":[],"name":"removeController","nameLocation":"753:16:11","nodeType":"FunctionDefinition","parameters":{"id":934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"controller","nameLocation":"778:10:11","nodeType":"VariableDeclaration","scope":936,"src":"770:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"770:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"769:20:11"},"returnParameters":{"id":935,"nodeType":"ParameterList","parameters":[],"src":"798:0:11"},"scope":985,"src":"744:55:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4e543b26","id":941,"implemented":false,"kind":"function","modifiers":[],"name":"setResolver","nameLocation":"874:11:11","nodeType":"FunctionDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"resolver","nameLocation":"894:8:11","nodeType":"VariableDeclaration","scope":941,"src":"886:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"886:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"885:18:11"},"returnParameters":{"id":940,"nodeType":"ParameterList","parameters":[],"src":"912:0:11"},"scope":985,"src":"865:48:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d6e4fa86","id":948,"implemented":false,"kind":"function","modifiers":[],"name":"nameExpires","nameLocation":"997:11:11","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"id","nameLocation":"1017:2:11","nodeType":"VariableDeclaration","scope":948,"src":"1009:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":942,"name":"uint256","nodeType":"ElementaryTypeName","src":"1009:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1008:12:11"},"returnParameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":948,"src":"1044:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":945,"name":"uint256","nodeType":"ElementaryTypeName","src":"1044:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1043:9:11"},"scope":985,"src":"988:65:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"96e494e8","id":955,"implemented":false,"kind":"function","modifiers":[],"name":"available","nameLocation":"1142:9:11","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"id","nameLocation":"1160:2:11","nodeType":"VariableDeclaration","scope":955,"src":"1152:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":949,"name":"uint256","nodeType":"ElementaryTypeName","src":"1152:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1151:12:11"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":955,"src":"1187:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":952,"name":"bool","nodeType":"ElementaryTypeName","src":"1187:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1186:6:11"},"scope":985,"src":"1133:60:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":956,"nodeType":"StructuredDocumentation","src":"1199:40:11","text":" @dev Register a name."},"functionSelector":"fca247ac","id":967,"implemented":false,"kind":"function","modifiers":[],"name":"register","nameLocation":"1253:8:11","nodeType":"FunctionDefinition","parameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"id","nameLocation":"1279:2:11","nodeType":"VariableDeclaration","scope":967,"src":"1271:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"owner","nameLocation":"1299:5:11","nodeType":"VariableDeclaration","scope":967,"src":"1291:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"duration","nameLocation":"1322:8:11","nodeType":"VariableDeclaration","scope":967,"src":"1314:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"1314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1261:75:11"},"returnParameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":967,"src":"1355:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:9:11"},"scope":985,"src":"1244:120:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c475abff","id":976,"implemented":false,"kind":"function","modifiers":[],"name":"renew","nameLocation":"1379:5:11","nodeType":"FunctionDefinition","parameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":969,"mutability":"mutable","name":"id","nameLocation":"1393:2:11","nodeType":"VariableDeclaration","scope":976,"src":"1385:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"1385:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"duration","nameLocation":"1405:8:11","nodeType":"VariableDeclaration","scope":976,"src":"1397:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":970,"name":"uint256","nodeType":"ElementaryTypeName","src":"1397:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1384:30:11"},"returnParameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":976,"src":"1433:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"1433:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1432:9:11"},"scope":985,"src":"1370:72:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":977,"nodeType":"StructuredDocumentation","src":"1448:91:11","text":" @dev Reclaim ownership of a name in ENS, if you own it in the registrar."},"functionSelector":"28ed4f6c","id":984,"implemented":false,"kind":"function","modifiers":[],"name":"reclaim","nameLocation":"1553:7:11","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"mutability":"mutable","name":"id","nameLocation":"1569:2:11","nodeType":"VariableDeclaration","scope":984,"src":"1561:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":978,"name":"uint256","nodeType":"ElementaryTypeName","src":"1561:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"owner","nameLocation":"1581:5:11","nodeType":"VariableDeclaration","scope":984,"src":"1573:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"1573:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1560:27:11"},"returnParameters":{"id":983,"nodeType":"ParameterList","parameters":[],"src":"1596:0:11"},"scope":985,"src":"1544:53:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":986,"src":"121:1478:11","usedErrors":[]}],"src":"0:1600:11"},"id":11},"contracts/registry/ENS.sol":{"ast":{"absolutePath":"contracts/registry/ENS.sol","exportedSymbols":{"ENS":[1122]},"id":1123,"nodeType":"SourceUnit","nodes":[{"id":987,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"0:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"ENS","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1122,"linearizedBaseContracts":[1122],"name":"ENS","nameLocation":"36:3:12","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"ce0457fe73731f824cc272376169235128c118b49d344817417c6d108d155e82","id":995,"name":"NewOwner","nameLocation":"125:8:12","nodeType":"EventDefinition","parameters":{"id":994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":989,"indexed":true,"mutability":"mutable","name":"node","nameLocation":"150:4:12","nodeType":"VariableDeclaration","scope":995,"src":"134:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":988,"name":"bytes32","nodeType":"ElementaryTypeName","src":"134:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":991,"indexed":true,"mutability":"mutable","name":"label","nameLocation":"172:5:12","nodeType":"VariableDeclaration","scope":995,"src":"156:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"156:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":993,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"187:5:12","nodeType":"VariableDeclaration","scope":995,"src":"179:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":992,"name":"address","nodeType":"ElementaryTypeName","src":"179:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"133:60:12"},"src":"119:75:12"},{"anonymous":false,"eventSelector":"d4735d920b0f87494915f556dd9b54c8f309026070caea5c737245152564d266","id":1001,"name":"Transfer","nameLocation":"283:8:12","nodeType":"EventDefinition","parameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":997,"indexed":true,"mutability":"mutable","name":"node","nameLocation":"308:4:12","nodeType":"VariableDeclaration","scope":1001,"src":"292:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":996,"name":"bytes32","nodeType":"ElementaryTypeName","src":"292:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":999,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"322:5:12","nodeType":"VariableDeclaration","scope":1001,"src":"314:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":998,"name":"address","nodeType":"ElementaryTypeName","src":"314:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"291:37:12"},"src":"277:52:12"},{"anonymous":false,"eventSelector":"335721b01866dc23fbee8b6b2c7b1e14d6f05c28cd35a2c934239f94095602a0","id":1007,"name":"NewResolver","nameLocation":"393:11:12","nodeType":"EventDefinition","parameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"indexed":true,"mutability":"mutable","name":"node","nameLocation":"421:4:12","nodeType":"VariableDeclaration","scope":1007,"src":"405:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"405:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1005,"indexed":false,"mutability":"mutable","name":"resolver","nameLocation":"435:8:12","nodeType":"VariableDeclaration","scope":1007,"src":"427:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"404:40:12"},"src":"387:58:12"},{"anonymous":false,"eventSelector":"1d4f9bbfc9cab89d66e1a1562f2233ccbf1308cb4f63de2ead5787adddb8fa68","id":1013,"name":"NewTTL","nameLocation":"502:6:12","nodeType":"EventDefinition","parameters":{"id":1012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"indexed":true,"mutability":"mutable","name":"node","nameLocation":"525:4:12","nodeType":"VariableDeclaration","scope":1013,"src":"509:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1008,"name":"bytes32","nodeType":"ElementaryTypeName","src":"509:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1011,"indexed":false,"mutability":"mutable","name":"ttl","nameLocation":"538:3:12","nodeType":"VariableDeclaration","scope":1013,"src":"531:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1010,"name":"uint64","nodeType":"ElementaryTypeName","src":"531:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"508:34:12"},"src":"496:47:12"},{"anonymous":false,"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1021,"name":"ApprovalForAll","nameLocation":"607:14:12","nodeType":"EventDefinition","parameters":{"id":1020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1015,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"647:5:12","nodeType":"VariableDeclaration","scope":1021,"src":"631:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1014,"name":"address","nodeType":"ElementaryTypeName","src":"631:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1017,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"678:8:12","nodeType":"VariableDeclaration","scope":1021,"src":"662:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"662:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1019,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"701:8:12","nodeType":"VariableDeclaration","scope":1021,"src":"696:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1018,"name":"bool","nodeType":"ElementaryTypeName","src":"696:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"621:94:12"},"src":"601:115:12"},{"functionSelector":"cf408823","id":1032,"implemented":false,"kind":"function","modifiers":[],"name":"setRecord","nameLocation":"731:9:12","nodeType":"FunctionDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1023,"mutability":"mutable","name":"node","nameLocation":"758:4:12","nodeType":"VariableDeclaration","scope":1032,"src":"750:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1022,"name":"bytes32","nodeType":"ElementaryTypeName","src":"750:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"owner","nameLocation":"780:5:12","nodeType":"VariableDeclaration","scope":1032,"src":"772:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"772:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"resolver","nameLocation":"803:8:12","nodeType":"VariableDeclaration","scope":1032,"src":"795:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"795:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1029,"mutability":"mutable","name":"ttl","nameLocation":"828:3:12","nodeType":"VariableDeclaration","scope":1032,"src":"821:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1028,"name":"uint64","nodeType":"ElementaryTypeName","src":"821:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"740:97:12"},"returnParameters":{"id":1031,"nodeType":"ParameterList","parameters":[],"src":"846:0:12"},"scope":1122,"src":"722:125:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5ef2c7f0","id":1045,"implemented":false,"kind":"function","modifiers":[],"name":"setSubnodeRecord","nameLocation":"862:16:12","nodeType":"FunctionDefinition","parameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1034,"mutability":"mutable","name":"node","nameLocation":"896:4:12","nodeType":"VariableDeclaration","scope":1045,"src":"888:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1036,"mutability":"mutable","name":"label","nameLocation":"918:5:12","nodeType":"VariableDeclaration","scope":1045,"src":"910:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1035,"name":"bytes32","nodeType":"ElementaryTypeName","src":"910:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1038,"mutability":"mutable","name":"owner","nameLocation":"941:5:12","nodeType":"VariableDeclaration","scope":1045,"src":"933:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"933:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"resolver","nameLocation":"964:8:12","nodeType":"VariableDeclaration","scope":1045,"src":"956:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1039,"name":"address","nodeType":"ElementaryTypeName","src":"956:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1042,"mutability":"mutable","name":"ttl","nameLocation":"989:3:12","nodeType":"VariableDeclaration","scope":1045,"src":"982:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1041,"name":"uint64","nodeType":"ElementaryTypeName","src":"982:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"878:120:12"},"returnParameters":{"id":1044,"nodeType":"ParameterList","parameters":[],"src":"1007:0:12"},"scope":1122,"src":"853:155:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"06ab5923","id":1056,"implemented":false,"kind":"function","modifiers":[],"name":"setSubnodeOwner","nameLocation":"1023:15:12","nodeType":"FunctionDefinition","parameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"mutability":"mutable","name":"node","nameLocation":"1056:4:12","nodeType":"VariableDeclaration","scope":1056,"src":"1048:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1046,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1048:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"label","nameLocation":"1078:5:12","nodeType":"VariableDeclaration","scope":1056,"src":"1070:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1070:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"owner","nameLocation":"1101:5:12","nodeType":"VariableDeclaration","scope":1056,"src":"1093:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1050,"name":"address","nodeType":"ElementaryTypeName","src":"1093:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1038:74:12"},"returnParameters":{"id":1055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1056,"src":"1131:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1053,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1131:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1130:9:12"},"scope":1122,"src":"1014:126:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1896f70a","id":1063,"implemented":false,"kind":"function","modifiers":[],"name":"setResolver","nameLocation":"1155:11:12","nodeType":"FunctionDefinition","parameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1058,"mutability":"mutable","name":"node","nameLocation":"1175:4:12","nodeType":"VariableDeclaration","scope":1063,"src":"1167:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1057,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1167:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"resolver","nameLocation":"1189:8:12","nodeType":"VariableDeclaration","scope":1063,"src":"1181:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1059,"name":"address","nodeType":"ElementaryTypeName","src":"1181:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1166:32:12"},"returnParameters":{"id":1062,"nodeType":"ParameterList","parameters":[],"src":"1207:0:12"},"scope":1122,"src":"1146:62:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5b0fc9c3","id":1070,"implemented":false,"kind":"function","modifiers":[],"name":"setOwner","nameLocation":"1223:8:12","nodeType":"FunctionDefinition","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"node","nameLocation":"1240:4:12","nodeType":"VariableDeclaration","scope":1070,"src":"1232:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1064,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1232:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"owner","nameLocation":"1254:5:12","nodeType":"VariableDeclaration","scope":1070,"src":"1246:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"1246:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1231:29:12"},"returnParameters":{"id":1069,"nodeType":"ParameterList","parameters":[],"src":"1269:0:12"},"scope":1122,"src":"1214:56:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"14ab9038","id":1077,"implemented":false,"kind":"function","modifiers":[],"name":"setTTL","nameLocation":"1285:6:12","nodeType":"FunctionDefinition","parameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1072,"mutability":"mutable","name":"node","nameLocation":"1300:4:12","nodeType":"VariableDeclaration","scope":1077,"src":"1292:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1292:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1074,"mutability":"mutable","name":"ttl","nameLocation":"1313:3:12","nodeType":"VariableDeclaration","scope":1077,"src":"1306:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1073,"name":"uint64","nodeType":"ElementaryTypeName","src":"1306:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1291:26:12"},"returnParameters":{"id":1076,"nodeType":"ParameterList","parameters":[],"src":"1326:0:12"},"scope":1122,"src":"1276:51:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a22cb465","id":1084,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"1342:17:12","nodeType":"FunctionDefinition","parameters":{"id":1082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"operator","nameLocation":"1368:8:12","nodeType":"VariableDeclaration","scope":1084,"src":"1360:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1078,"name":"address","nodeType":"ElementaryTypeName","src":"1360:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1081,"mutability":"mutable","name":"approved","nameLocation":"1383:8:12","nodeType":"VariableDeclaration","scope":1084,"src":"1378:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1080,"name":"bool","nodeType":"ElementaryTypeName","src":"1378:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1359:33:12"},"returnParameters":{"id":1083,"nodeType":"ParameterList","parameters":[],"src":"1401:0:12"},"scope":1122,"src":"1333:69:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"02571be3","id":1091,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1417:5:12","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1086,"mutability":"mutable","name":"node","nameLocation":"1431:4:12","nodeType":"VariableDeclaration","scope":1091,"src":"1423:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1085,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1423:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1422:14:12"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1091,"src":"1460:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"1460:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1459:9:12"},"scope":1122,"src":"1408:61:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0178b8bf","id":1098,"implemented":false,"kind":"function","modifiers":[],"name":"resolver","nameLocation":"1484:8:12","nodeType":"FunctionDefinition","parameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"node","nameLocation":"1501:4:12","nodeType":"VariableDeclaration","scope":1098,"src":"1493:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1092,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1493:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1492:14:12"},"returnParameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1098,"src":"1530:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"1530:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1529:9:12"},"scope":1122,"src":"1475:64:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"16a25cbd","id":1105,"implemented":false,"kind":"function","modifiers":[],"name":"ttl","nameLocation":"1554:3:12","nodeType":"FunctionDefinition","parameters":{"id":1101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1100,"mutability":"mutable","name":"node","nameLocation":"1566:4:12","nodeType":"VariableDeclaration","scope":1105,"src":"1558:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1099,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1558:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1557:14:12"},"returnParameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1105,"src":"1595:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1102,"name":"uint64","nodeType":"ElementaryTypeName","src":"1595:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1594:8:12"},"scope":1122,"src":"1545:58:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f79fe538","id":1112,"implemented":false,"kind":"function","modifiers":[],"name":"recordExists","nameLocation":"1618:12:12","nodeType":"FunctionDefinition","parameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1107,"mutability":"mutable","name":"node","nameLocation":"1639:4:12","nodeType":"VariableDeclaration","scope":1112,"src":"1631:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1106,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1631:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1630:14:12"},"returnParameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1112,"src":"1668:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1109,"name":"bool","nodeType":"ElementaryTypeName","src":"1668:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1667:6:12"},"scope":1122,"src":"1609:65:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e985e9c5","id":1121,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"1689:16:12","nodeType":"FunctionDefinition","parameters":{"id":1117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"owner","nameLocation":"1714:5:12","nodeType":"VariableDeclaration","scope":1121,"src":"1706:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1113,"name":"address","nodeType":"ElementaryTypeName","src":"1706:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1116,"mutability":"mutable","name":"operator","nameLocation":"1729:8:12","nodeType":"VariableDeclaration","scope":1121,"src":"1721:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1115,"name":"address","nodeType":"ElementaryTypeName","src":"1721:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1705:33:12"},"returnParameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1121,"src":"1786:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1118,"name":"bool","nodeType":"ElementaryTypeName","src":"1786:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1785:6:12"},"scope":1122,"src":"1680:112:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1123,"src":"26:1768:12","usedErrors":[]}],"src":"0:1795:12"},"id":12},"contracts/utils/ERC20Recoverable.sol":{"ast":{"absolutePath":"contracts/utils/ERC20Recoverable.sol","exportedSymbols":{"Context":[854],"ERC20Recoverable":[1151],"IERC20":[368],"Ownable":[112]},"id":1152,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1124,"literals":["solidity",">=","0.8",".17","<","0.9",".0"],"nodeType":"PragmaDirective","src":"31:32:13"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1125,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1152,"sourceUnit":113,"src":"65:52:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1126,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1152,"sourceUnit":369,"src":"118:56:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1128,"name":"Ownable","nameLocations":["300:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"300:7:13"},"id":1129,"nodeType":"InheritanceSpecifier","src":"300:7:13"}],"canonicalName":"ERC20Recoverable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"176:93:13","text":"@notice Contract is used to recover ERC20 tokens sent to the contract by mistake."},"fullyImplemented":true,"id":1151,"linearizedBaseContracts":[1151,112,854],"name":"ERC20Recoverable","nameLocation":"280:16:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":1149,"nodeType":"Block","src":"750:54:13","statements":[{"expression":{"arguments":[{"id":1145,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"784:3:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1146,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"789:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1142,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"767:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1141,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"760:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$368_$","typeString":"type(contract IERC20)"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"760:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$368","typeString":"contract IERC20"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"775:8:13","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":335,"src":"760:23:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"760:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1148,"nodeType":"ExpressionStatement","src":"760:37:13"}]},"documentation":{"id":1130,"nodeType":"StructuredDocumentation","src":"314:314:13","text":"@notice Recover ERC20 tokens sent to the contract by mistake.\n@dev The contract is Ownable and only the owner can call the recover function.\n@param _to The address to send the tokens to.\n@param _token The address of the ERC20 token to recover\n@param _amount The amount of tokens to recover."},"functionSelector":"5d3590d5","id":1150,"implemented":true,"kind":"function","modifiers":[{"id":1139,"kind":"modifierInvocation","modifierName":{"id":1138,"name":"onlyOwner","nameLocations":["740:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"740:9:13"},"nodeType":"ModifierInvocation","src":"740:9:13"}],"name":"recoverFunds","nameLocation":"642:12:13","nodeType":"FunctionDefinition","parameters":{"id":1137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"_token","nameLocation":"672:6:13","nodeType":"VariableDeclaration","scope":1150,"src":"664:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1131,"name":"address","nodeType":"ElementaryTypeName","src":"664:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1134,"mutability":"mutable","name":"_to","nameLocation":"696:3:13","nodeType":"VariableDeclaration","scope":1150,"src":"688:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1133,"name":"address","nodeType":"ElementaryTypeName","src":"688:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1136,"mutability":"mutable","name":"_amount","nameLocation":"717:7:13","nodeType":"VariableDeclaration","scope":1150,"src":"709:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1135,"name":"uint256","nodeType":"ElementaryTypeName","src":"709:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:76:13"},"returnParameters":{"id":1140,"nodeType":"ParameterList","parameters":[],"src":"750:0:13"},"scope":1151,"src":"633:171:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1152,"src":"271:535:13","usedErrors":[]}],"src":"31:776:13"},"id":13},"contracts/wrapper/BytesUtils.sol":{"ast":{"absolutePath":"contracts/wrapper/BytesUtils.sol","exportedSymbols":{"BytesUtils":[1294]},"id":1295,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1153,"literals":["solidity","~","0.8",".17"],"nodeType":"PragmaDirective","src":"31:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"BytesUtils","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":1294,"linearizedBaseContracts":[1294],"name":"BytesUtils","nameLocation":"65:10:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":1174,"nodeType":"Block","src":"473:144:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1165,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"491:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1166,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"500:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"491:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1168,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"507:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"512:6:14","memberName":"length","nodeType":"MemberAccess","src":"507:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"491:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1164,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"483:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"483:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1172,"nodeType":"ExpressionStatement","src":"483:36:14"},{"AST":{"nodeType":"YulBlock","src":"538:73:14","statements":[{"nodeType":"YulAssignment","src":"552:49:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"self","nodeType":"YulIdentifier","src":"577:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"583:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"573:3:14"},"nodeType":"YulFunctionCall","src":"573:13:14"},{"name":"offset","nodeType":"YulIdentifier","src":"588:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"569:3:14"},"nodeType":"YulFunctionCall","src":"569:26:14"},{"name":"len","nodeType":"YulIdentifier","src":"597:3:14"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"559:9:14"},"nodeType":"YulFunctionCall","src":"559:42:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"552:3:14"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1159,"isOffset":false,"isSlot":false,"src":"597:3:14","valueSize":1},{"declaration":1157,"isOffset":false,"isSlot":false,"src":"588:6:14","valueSize":1},{"declaration":1162,"isOffset":false,"isSlot":false,"src":"552:3:14","valueSize":1},{"declaration":1155,"isOffset":false,"isSlot":false,"src":"577:4:14","valueSize":1}],"id":1173,"nodeType":"InlineAssembly","src":"529:82:14"}]},"id":1175,"implemented":true,"kind":"function","modifiers":[],"name":"keccak","nameLocation":"352:6:14","nodeType":"FunctionDefinition","parameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"mutability":"mutable","name":"self","nameLocation":"381:4:14","nodeType":"VariableDeclaration","scope":1175,"src":"368:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1154,"name":"bytes","nodeType":"ElementaryTypeName","src":"368:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"offset","nameLocation":"403:6:14","nodeType":"VariableDeclaration","scope":1175,"src":"395:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"395:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"len","nameLocation":"427:3:14","nodeType":"VariableDeclaration","scope":1175,"src":"419:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1158,"name":"uint256","nodeType":"ElementaryTypeName","src":"419:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"358:78:14"},"returnParameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"ret","nameLocation":"468:3:14","nodeType":"VariableDeclaration","scope":1175,"src":"460:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"460:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"459:13:14"},"scope":1294,"src":"343:274:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1228,"nodeType":"Block","src":"961:336:14","statements":[{"assignments":[1186,1188],"declarations":[{"constant":false,"id":1186,"mutability":"mutable","name":"labelhash","nameLocation":"980:9:14","nodeType":"VariableDeclaration","scope":1228,"src":"972:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"972:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1188,"mutability":"mutable","name":"newOffset","nameLocation":"999:9:14","nodeType":"VariableDeclaration","scope":1228,"src":"991:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1187,"name":"uint256","nodeType":"ElementaryTypeName","src":"991:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1193,"initialValue":{"arguments":[{"id":1190,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"1022:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1191,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"1028:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1189,"name":"readLabel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"1012:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$_t_uint256_$","typeString":"function (bytes memory,uint256) pure returns (bytes32,uint256)"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1012:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_uint256_$","typeString":"tuple(bytes32,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"971:64:14"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1194,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"1049:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1070:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1062:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1062:7:14","typeDescriptions":{}}},"id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1062:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1049:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1216,"nodeType":"IfStatement","src":"1045:152:14","trueBody":{"id":1215,"nodeType":"Block","src":"1074:123:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1201,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"1096:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1202,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"1106:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1111:6:14","memberName":"length","nodeType":"MemberAccess","src":"1106:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1120:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1106:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1096:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6e616d65686173683a204a756e6b20617420656e64206f66206e616d65","id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1123:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_912cb3202b125350fc41f3ab0d7246878642a776f73877d55ca2cfbcec1f2142","typeString":"literal_string \"namehash: Junk at end of name\""},"value":"namehash: Junk at end of name"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_912cb3202b125350fc41f3ab0d7246878642a776f73877d55ca2cfbcec1f2142","typeString":"literal_string \"namehash: Junk at end of name\""}],"id":1200,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1088:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1088:67:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1209,"nodeType":"ExpressionStatement","src":"1088:67:14"},{"expression":{"arguments":[{"hexValue":"30","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1184:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1176:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1210,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1176:7:14","typeDescriptions":{}}},"id":1213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1176:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1184,"id":1214,"nodeType":"Return","src":"1169:17:14"}]}},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1221,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"1261:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1222,"name":"newOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"1267:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1220,"name":"namehash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"1252:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1252:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1224,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"1279:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1218,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1235:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1239:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"1235:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1235:54:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1217,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1225:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1225:65:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1184,"id":1227,"nodeType":"Return","src":"1206:84:14"}]},"documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"623:220:14","text":" @dev Returns the ENS namehash of a DNS-encoded name.\n @param self The DNS-encoded name to hash.\n @param offset The offset at which to start hashing.\n @return The namehash of the name."},"id":1229,"implemented":true,"kind":"function","modifiers":[],"name":"namehash","nameLocation":"857:8:14","nodeType":"FunctionDefinition","parameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"self","nameLocation":"879:4:14","nodeType":"VariableDeclaration","scope":1229,"src":"866:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1177,"name":"bytes","nodeType":"ElementaryTypeName","src":"866:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1180,"mutability":"mutable","name":"offset","nameLocation":"893:6:14","nodeType":"VariableDeclaration","scope":1229,"src":"885:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1179,"name":"uint256","nodeType":"ElementaryTypeName","src":"885:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"865:35:14"},"returnParameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1229,"src":"948:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1182,"name":"bytes32","nodeType":"ElementaryTypeName","src":"948:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"947:9:14"},"scope":1294,"src":"848:449:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1292,"nodeType":"Block","src":"1837:296:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1242,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"1855:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1243,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"1861:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1866:6:14","memberName":"length","nodeType":"MemberAccess","src":"1861:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1855:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"726561644c6162656c3a20496e646578206f7574206f6620626f756e6473","id":1246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1874:32:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_723ef06cf58e92d84b8ad4ad83db034cb099b69c213da6595a1e7ca6ebe51535","typeString":"literal_string \"readLabel: Index out of bounds\""},"value":"readLabel: Index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_723ef06cf58e92d84b8ad4ad83db034cb099b69c213da6595a1e7ca6ebe51535","typeString":"literal_string \"readLabel: Index out of bounds\""}],"id":1241,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1847:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1847:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1248,"nodeType":"ExpressionStatement","src":"1847:60:14"},{"assignments":[1250],"declarations":[{"constant":false,"id":1250,"mutability":"mutable","name":"len","nameLocation":"1925:3:14","nodeType":"VariableDeclaration","scope":1292,"src":"1917:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1917:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1260,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":1255,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"1945:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1257,"indexExpression":{"id":1256,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"1950:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1945:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1939:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1253,"name":"uint8","nodeType":"ElementaryTypeName","src":"1939:5:14","typeDescriptions":{}}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1939:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1931:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1251,"name":"uint256","nodeType":"ElementaryTypeName","src":"1931:7:14","typeDescriptions":{}}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1931:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1917:39:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1261,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"1970:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1976:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1970:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1282,"nodeType":"Block","src":"2048:47:14","statements":[{"expression":{"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1275,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"2062:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2082:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2074:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1276,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2074:7:14","typeDescriptions":{}}},"id":1279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2074:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2062:22:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1281,"nodeType":"ExpressionStatement","src":"2062:22:14"}]},"id":1283,"nodeType":"IfStatement","src":"1966:129:14","trueBody":{"id":1274,"nodeType":"Block","src":"1979:63:14","statements":[{"expression":{"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1264,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"1993:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1266,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"2012:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1267,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"2018:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2024:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2018:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1270,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"2027:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1265,"name":"keccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"2005:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256,uint256) pure returns (bytes32)"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2005:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1993:38:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1273,"nodeType":"ExpressionStatement","src":"1993:38:14"}]}},{"expression":{"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1284,"name":"newIdx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"2104:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1285,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"2113:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1286,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"2119:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2113:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2125:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2113:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2104:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1291,"nodeType":"ExpressionStatement","src":"2104:22:14"}]},"documentation":{"id":1230,"nodeType":"StructuredDocumentation","src":"1303:392:14","text":" @dev Returns the keccak-256 hash of a DNS-encoded label, and the offset to the start of the next label.\n @param self The byte string to read a label from.\n @param idx The index to read a label at.\n @return labelhash The hash of the label at the specified index, or 0 if it is the last label.\n @return newIdx The index of the start of the next label."},"id":1293,"implemented":true,"kind":"function","modifiers":[],"name":"readLabel","nameLocation":"1709:9:14","nodeType":"FunctionDefinition","parameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"self","nameLocation":"1732:4:14","nodeType":"VariableDeclaration","scope":1293,"src":"1719:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1231,"name":"bytes","nodeType":"ElementaryTypeName","src":"1719:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1234,"mutability":"mutable","name":"idx","nameLocation":"1746:3:14","nodeType":"VariableDeclaration","scope":1293,"src":"1738:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"1738:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1718:32:14"},"returnParameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"labelhash","nameLocation":"1806:9:14","nodeType":"VariableDeclaration","scope":1293,"src":"1798:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1798:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1239,"mutability":"mutable","name":"newIdx","nameLocation":"1825:6:14","nodeType":"VariableDeclaration","scope":1293,"src":"1817:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1817:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1797:35:14"},"scope":1294,"src":"1700:433:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1295,"src":"57:2078:14","usedErrors":[]}],"src":"31:2105:14"},"id":14},"contracts/wrapper/Controllable.sol":{"ast":{"absolutePath":"contracts/wrapper/Controllable.sol","exportedSymbols":{"Context":[854],"Controllable":[1343],"Ownable":[112]},"id":1344,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1296,"literals":["solidity","~","0.8",".17"],"nodeType":"PragmaDirective","src":"31:24:15"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1297,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1344,"sourceUnit":113,"src":"57:52:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1298,"name":"Ownable","nameLocations":["136:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"136:7:15"},"id":1299,"nodeType":"InheritanceSpecifier","src":"136:7:15"}],"canonicalName":"Controllable","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1343,"linearizedBaseContracts":[1343,112,854],"name":"Controllable","nameLocation":"120:12:15","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"da8c229e","id":1303,"mutability":"mutable","name":"controllers","nameLocation":"182:11:15","nodeType":"VariableDeclaration","scope":1343,"src":"150:43:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1302,"keyType":{"id":1300,"name":"address","nodeType":"ElementaryTypeName","src":"158:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"150:24:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1301,"name":"bool","nodeType":"ElementaryTypeName","src":"169:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf87","id":1309,"name":"ControllerChanged","nameLocation":"206:17:15","nodeType":"EventDefinition","parameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"indexed":true,"mutability":"mutable","name":"controller","nameLocation":"240:10:15","nodeType":"VariableDeclaration","scope":1309,"src":"224:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"224:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1307,"indexed":false,"mutability":"mutable","name":"active","nameLocation":"257:6:15","nodeType":"VariableDeclaration","scope":1309,"src":"252:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1306,"name":"bool","nodeType":"ElementaryTypeName","src":"252:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"223:41:15"},"src":"200:65:15"},{"body":{"id":1329,"nodeType":"Block","src":"344:101:15","statements":[{"expression":{"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1318,"name":"controllers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"354:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1320,"indexExpression":{"id":1319,"name":"controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"366:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"354:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1321,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"380:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"354:32:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1323,"nodeType":"ExpressionStatement","src":"354:32:15"},{"eventCall":{"arguments":[{"id":1325,"name":"controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"419:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1326,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"431:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1324,"name":"ControllerChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"401:17:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"401:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1328,"nodeType":"EmitStatement","src":"396:42:15"}]},"functionSelector":"e0dba60f","id":1330,"implemented":true,"kind":"function","modifiers":[{"id":1316,"kind":"modifierInvocation","modifierName":{"id":1315,"name":"onlyOwner","nameLocations":["334:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"334:9:15"},"nodeType":"ModifierInvocation","src":"334:9:15"}],"name":"setController","nameLocation":"280:13:15","nodeType":"FunctionDefinition","parameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"mutability":"mutable","name":"controller","nameLocation":"302:10:15","nodeType":"VariableDeclaration","scope":1330,"src":"294:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1310,"name":"address","nodeType":"ElementaryTypeName","src":"294:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1313,"mutability":"mutable","name":"active","nameLocation":"319:6:15","nodeType":"VariableDeclaration","scope":1330,"src":"314:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1312,"name":"bool","nodeType":"ElementaryTypeName","src":"314:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"293:33:15"},"returnParameters":{"id":1317,"nodeType":"ParameterList","parameters":[],"src":"344:0:15"},"scope":1343,"src":"271:174:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1341,"nodeType":"Block","src":"477:138:15","statements":[{"expression":{"arguments":[{"baseExpression":{"id":1333,"name":"controllers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"508:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1336,"indexExpression":{"expression":{"id":1334,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"520:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"524:6:15","memberName":"sender","nodeType":"MemberAccess","src":"520:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"508:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e74726f6c6c61626c653a2043616c6c6572206973206e6f74206120636f6e74726f6c6c6572","id":1337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"545:42:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_3a494915be969f0305371ebdb09944c6f39346fa8227994f38a7231f6aafbd7b","typeString":"literal_string \"Controllable: Caller is not a controller\""},"value":"Controllable: Caller is not a controller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3a494915be969f0305371ebdb09944c6f39346fa8227994f38a7231f6aafbd7b","typeString":"literal_string \"Controllable: Caller is not a controller\""}],"id":1332,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"487:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"487:110:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1339,"nodeType":"ExpressionStatement","src":"487:110:15"},{"id":1340,"nodeType":"PlaceholderStatement","src":"607:1:15"}]},"id":1342,"name":"onlyController","nameLocation":"460:14:15","nodeType":"ModifierDefinition","parameters":{"id":1331,"nodeType":"ParameterList","parameters":[],"src":"474:2:15"},"src":"451:164:15","virtual":false,"visibility":"internal"}],"scope":1344,"src":"111:506:15","usedErrors":[]}],"src":"31:587:15"},"id":15},"contracts/wrapper/ERC1155Fuse.sol":{"ast":{"absolutePath":"contracts/wrapper/ERC1155Fuse.sol","exportedSymbols":{"Address":[832],"ERC1155Fuse":[2243],"ERC165":[878],"IERC1155":[234],"IERC1155MetadataURI":[290],"IERC1155Receiver":[275],"IERC165":[890]},"id":2244,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1345,"literals":["solidity","~","0.8",".17"],"nodeType":"PragmaDirective","src":"31:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":1346,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2244,"sourceUnit":879,"src":"57:64:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","id":1347,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2244,"sourceUnit":276,"src":"122:68:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","id":1348,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2244,"sourceUnit":235,"src":"191:60:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","id":1349,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2244,"sourceUnit":291,"src":"252:82:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":1350,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2244,"sourceUnit":833,"src":"335:51:16","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1351,"name":"ERC165","nameLocations":["873:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":878,"src":"873:6:16"},"id":1352,"nodeType":"InheritanceSpecifier","src":"873:6:16"},{"baseName":{"id":1353,"name":"IERC1155","nameLocations":["881:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":234,"src":"881:8:16"},"id":1354,"nodeType":"InheritanceSpecifier","src":"881:8:16"},{"baseName":{"id":1355,"name":"IERC1155MetadataURI","nameLocations":["891:19:16"],"nodeType":"IdentifierPath","referencedDeclaration":290,"src":"891:19:16"},"id":1356,"nodeType":"InheritanceSpecifier","src":"891:19:16"}],"canonicalName":"ERC1155Fuse","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":2243,"linearizedBaseContracts":[2243,290,234,878,890],"name":"ERC1155Fuse","nameLocation":"858:11:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1359,"libraryName":{"id":1357,"name":"Address","nameLocations":["923:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":832,"src":"923:7:16"},"nodeType":"UsingForDirective","src":"917:26:16","typeName":{"id":1358,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"constant":false,"functionSelector":"ed70554d","id":1363,"mutability":"mutable","name":"_tokens","nameLocation":"983:7:16","nodeType":"VariableDeclaration","scope":2243,"src":"948:42:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1362,"keyType":{"id":1360,"name":"uint256","nodeType":"ElementaryTypeName","src":"956:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"948:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":1361,"name":"uint256","nodeType":"ElementaryTypeName","src":"967:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"id":1369,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1098:18:16","nodeType":"VariableDeclaration","scope":2243,"src":"1045:71:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1368,"keyType":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1045:44:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":1367,"keyType":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"1072:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1064:24:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1366,"name":"bool","nodeType":"ElementaryTypeName","src":"1083:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1384,"nodeType":"Block","src":"1373:72:16","statements":[{"assignments":[1377,null,null],"declarations":[{"constant":false,"id":1377,"mutability":"mutable","name":"owner","nameLocation":"1392:5:16","nodeType":"VariableDeclaration","scope":1384,"src":"1384:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1376,"name":"address","nodeType":"ElementaryTypeName","src":"1384:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},null,null],"id":1381,"initialValue":{"arguments":[{"id":1379,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"1413:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1378,"name":"getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"1405:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (uint256) view returns (address,uint32,uint64)"}},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1405:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"1383:33:16"},{"expression":{"id":1382,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"1433:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1375,"id":1383,"nodeType":"Return","src":"1426:12:16"}]},"functionSelector":"6352211e","id":1385,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1315:7:16","nodeType":"FunctionDefinition","parameters":{"id":1372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1371,"mutability":"mutable","name":"id","nameLocation":"1331:2:16","nodeType":"VariableDeclaration","scope":1385,"src":"1323:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1370,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:12:16"},"returnParameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1385,"src":"1364:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"1364:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1363:9:16"},"scope":2243,"src":"1306:139:16","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[877,889],"body":{"id":1415,"nodeType":"Block","src":"1664:197:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1396,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"1693:11:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1398,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"1713:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$234_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$234_$","typeString":"type(contract IERC1155)"}],"id":1397,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1708:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1708:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$234","typeString":"type(contract IERC1155)"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1723:11:16","memberName":"interfaceId","nodeType":"MemberAccess","src":"1708:26:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1693:41:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1402,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"1750:11:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1404,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"1770:19:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$290_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$290_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":1403,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1765:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1765:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$290","typeString":"type(contract IERC1155MetadataURI)"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1791:11:16","memberName":"interfaceId","nodeType":"MemberAccess","src":"1765:37:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1750:52:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1693:109:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1411,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"1842:11:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1409,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1818:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155Fuse_$2243_$","typeString":"type(contract super ERC1155Fuse)"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1824:17:16","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":877,"src":"1818:23:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1818:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1693:161:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1395,"id":1414,"nodeType":"Return","src":"1674:180:16"}]},"documentation":{"id":1386,"nodeType":"StructuredDocumentation","src":"1451:56:16","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1416,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1521:17:16","nodeType":"FunctionDefinition","overrides":{"id":1392,"nodeType":"OverrideSpecifier","overrides":[{"id":1390,"name":"ERC165","nameLocations":["1620:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":878,"src":"1620:6:16"},{"id":1391,"name":"IERC165","nameLocations":["1628:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":890,"src":"1628:7:16"}],"src":"1611:25:16"},"parameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"interfaceId","nameLocation":"1546:11:16","nodeType":"VariableDeclaration","scope":1416,"src":"1539:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1387,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1539:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1538:20:16"},"returnParameters":{"id":1395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1416,"src":"1654:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1393,"name":"bool","nodeType":"ElementaryTypeName","src":"1654:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1653:6:16"},"scope":2243,"src":"1512:349:16","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[172],"body":{"id":1452,"nodeType":"Block","src":"2142:247:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1428,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"2173:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2192:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2184:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1429,"name":"address","nodeType":"ElementaryTypeName","src":"2184:7:16","typeDescriptions":{}}},"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2184:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2173:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373","id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2208:45:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9","typeString":"literal_string \"ERC1155: balance query for the zero address\""},"value":"ERC1155: balance query for the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9","typeString":"literal_string \"ERC1155: balance query for the zero address\""}],"id":1427,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2152:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2152:111:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1436,"nodeType":"ExpressionStatement","src":"2152:111:16"},{"assignments":[1438],"declarations":[{"constant":false,"id":1438,"mutability":"mutable","name":"owner","nameLocation":"2281:5:16","nodeType":"VariableDeclaration","scope":1452,"src":"2273:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1437,"name":"address","nodeType":"ElementaryTypeName","src":"2273:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1442,"initialValue":{"arguments":[{"id":1440,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"2297:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1439,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"2289:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2289:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2273:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1443,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"2314:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1444,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"2323:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2314:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1449,"nodeType":"IfStatement","src":"2310:55:16","trueBody":{"id":1448,"nodeType":"Block","src":"2332:33:16","statements":[{"expression":{"hexValue":"31","id":1446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2353:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"functionReturnParameters":1426,"id":1447,"nodeType":"Return","src":"2346:8:16"}]}},{"expression":{"hexValue":"30","id":1450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2381:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1426,"id":1451,"nodeType":"Return","src":"2374:8:16"}]},"documentation":{"id":1417,"nodeType":"StructuredDocumentation","src":"1867:131:16","text":" @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":1453,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2012:9:16","nodeType":"FunctionDefinition","overrides":{"id":1423,"nodeType":"OverrideSpecifier","overrides":[],"src":"2103:8:16"},"parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"account","nameLocation":"2030:7:16","nodeType":"VariableDeclaration","scope":1453,"src":"2022:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1418,"name":"address","nodeType":"ElementaryTypeName","src":"2022:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1421,"mutability":"mutable","name":"id","nameLocation":"2047:2:16","nodeType":"VariableDeclaration","scope":1453,"src":"2039:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1420,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2021:29:16"},"returnParameters":{"id":1426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1453,"src":"2129:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1424,"name":"uint256","nodeType":"ElementaryTypeName","src":"2129:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2128:9:16"},"scope":2243,"src":"2003:386:16","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[185],"body":{"id":1516,"nodeType":"Block","src":"2719:369:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1468,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"2750:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2759:6:16","memberName":"length","nodeType":"MemberAccess","src":"2750:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1470,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"2769:3:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2773:6:16","memberName":"length","nodeType":"MemberAccess","src":"2769:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2750:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368","id":1473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2793:43:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5","typeString":"literal_string \"ERC1155: accounts and ids length mismatch\""},"value":"ERC1155: accounts and ids length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5","typeString":"literal_string \"ERC1155: accounts and ids length mismatch\""}],"id":1467,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2729:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2729:117:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1475,"nodeType":"ExpressionStatement","src":"2729:117:16"},{"assignments":[1480],"declarations":[{"constant":false,"id":1480,"mutability":"mutable","name":"batchBalances","nameLocation":"2874:13:16","nodeType":"VariableDeclaration","scope":1516,"src":"2857:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1478,"name":"uint256","nodeType":"ElementaryTypeName","src":"2857:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1479,"nodeType":"ArrayTypeName","src":"2857:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1487,"initialValue":{"arguments":[{"expression":{"id":1484,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"2904:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2913:6:16","memberName":"length","nodeType":"MemberAccess","src":"2904:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2890:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1481,"name":"uint256","nodeType":"ElementaryTypeName","src":"2894:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1482,"nodeType":"ArrayTypeName","src":"2894:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2890:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2857:63:16"},{"body":{"id":1512,"nodeType":"Block","src":"2977:74:16","statements":[{"expression":{"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1499,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"2991:13:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1501,"indexExpression":{"id":1500,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"3005:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2991:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":1503,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"3020:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1505,"indexExpression":{"id":1504,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"3029:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3020:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":1506,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"3033:3:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1508,"indexExpression":{"id":1507,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"3037:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3033:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1502,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"3010:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2991:49:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1511,"nodeType":"ExpressionStatement","src":"2991:49:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1492,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"2951:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1493,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"2955:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2964:6:16","memberName":"length","nodeType":"MemberAccess","src":"2955:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2951:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1513,"initializationExpression":{"assignments":[1489],"declarations":[{"constant":false,"id":1489,"mutability":"mutable","name":"i","nameLocation":"2944:1:16","nodeType":"VariableDeclaration","scope":1513,"src":"2936:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1488,"name":"uint256","nodeType":"ElementaryTypeName","src":"2936:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1491,"initialValue":{"hexValue":"30","id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2936:13:16"},"loopExpression":{"expression":{"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2972:3:16","subExpression":{"id":1496,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"2974:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1498,"nodeType":"ExpressionStatement","src":"2972:3:16"},"nodeType":"ForStatement","src":"2931:120:16"},{"expression":{"id":1514,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"3068:13:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1466,"id":1515,"nodeType":"Return","src":"3061:20:16"}]},"documentation":{"id":1454,"nodeType":"StructuredDocumentation","src":"2395:146:16","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1517,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2555:14:16","nodeType":"FunctionDefinition","overrides":{"id":1462,"nodeType":"OverrideSpecifier","overrides":[],"src":"2671:8:16"},"parameters":{"id":1461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"mutability":"mutable","name":"accounts","nameLocation":"2587:8:16","nodeType":"VariableDeclaration","scope":1517,"src":"2570:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1455,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1456,"nodeType":"ArrayTypeName","src":"2570:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1460,"mutability":"mutable","name":"ids","nameLocation":"2614:3:16","nodeType":"VariableDeclaration","scope":1517,"src":"2597:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1458,"name":"uint256","nodeType":"ElementaryTypeName","src":"2597:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1459,"nodeType":"ArrayTypeName","src":"2597:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2569:49:16"},"returnParameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1517,"src":"2697:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1463,"name":"uint256","nodeType":"ElementaryTypeName","src":"2697:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1464,"nodeType":"ArrayTypeName","src":"2697:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2696:18:16"},"scope":2243,"src":"2546:542:16","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[193],"body":{"id":1550,"nodeType":"Block","src":"3268:250:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1527,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3299:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3303:6:16","memberName":"sender","nodeType":"MemberAccess","src":"3299:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1529,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"3313:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3299:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3335:43:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2","typeString":"literal_string \"ERC1155: setting approval status for self\""},"value":"ERC1155: setting approval status for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2","typeString":"literal_string \"ERC1155: setting approval status for self\""}],"id":1526,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3278:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3278:110:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1533,"nodeType":"ExpressionStatement","src":"3278:110:16"},{"expression":{"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1534,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"3399:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1538,"indexExpression":{"expression":{"id":1535,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3418:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3422:6:16","memberName":"sender","nodeType":"MemberAccess","src":"3418:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3399:30:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1539,"indexExpression":{"id":1537,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"3430:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3399:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1540,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"3442:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3399:51:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1542,"nodeType":"ExpressionStatement","src":"3399:51:16"},{"eventCall":{"arguments":[{"expression":{"id":1544,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3480:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3484:6:16","memberName":"sender","nodeType":"MemberAccess","src":"3480:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1546,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"3492:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1547,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"3502:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1543,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"3465:14:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3465:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1549,"nodeType":"EmitStatement","src":"3460:51:16"}]},"documentation":{"id":1518,"nodeType":"StructuredDocumentation","src":"3094:57:16","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":1551,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3165:17:16","nodeType":"FunctionDefinition","overrides":{"id":1524,"nodeType":"OverrideSpecifier","overrides":[],"src":"3255:8:16"},"parameters":{"id":1523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1520,"mutability":"mutable","name":"operator","nameLocation":"3191:8:16","nodeType":"VariableDeclaration","scope":1551,"src":"3183:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1519,"name":"address","nodeType":"ElementaryTypeName","src":"3183:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1522,"mutability":"mutable","name":"approved","nameLocation":"3206:8:16","nodeType":"VariableDeclaration","scope":1551,"src":"3201:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1521,"name":"bool","nodeType":"ElementaryTypeName","src":"3201:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3182:33:16"},"returnParameters":{"id":1525,"nodeType":"ParameterList","parameters":[],"src":"3268:0:16"},"scope":2243,"src":"3156:362:16","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[203],"body":{"id":1568,"nodeType":"Block","src":"3734:61:16","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1562,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"3751:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1564,"indexExpression":{"id":1563,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"3770:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3751:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1566,"indexExpression":{"id":1565,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"3779:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3751:37:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1561,"id":1567,"nodeType":"Return","src":"3744:44:16"}]},"documentation":{"id":1552,"nodeType":"StructuredDocumentation","src":"3524:56:16","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1569,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3594:16:16","nodeType":"FunctionDefinition","overrides":{"id":1558,"nodeType":"OverrideSpecifier","overrides":[],"src":"3698:8:16"},"parameters":{"id":1557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1554,"mutability":"mutable","name":"account","nameLocation":"3619:7:16","nodeType":"VariableDeclaration","scope":1569,"src":"3611:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1553,"name":"address","nodeType":"ElementaryTypeName","src":"3611:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1556,"mutability":"mutable","name":"operator","nameLocation":"3636:8:16","nodeType":"VariableDeclaration","scope":1569,"src":"3628:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1555,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3610:35:16"},"returnParameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1569,"src":"3724:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1559,"name":"bool","nodeType":"ElementaryTypeName","src":"3724:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3723:6:16"},"scope":2243,"src":"3585:210:16","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1615,"nodeType":"Block","src":"4061:151:16","statements":[{"assignments":[1582],"declarations":[{"constant":false,"id":1582,"mutability":"mutable","name":"t","nameLocation":"4079:1:16","nodeType":"VariableDeclaration","scope":1615,"src":"4071:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"4071:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1586,"initialValue":{"baseExpression":{"id":1583,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"4083:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1585,"indexExpression":{"id":1584,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"4091:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4083:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4071:28:16"},{"expression":{"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1587,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"4109:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1592,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"4133:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4125:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1590,"name":"uint160","nodeType":"ElementaryTypeName","src":"4125:7:16","typeDescriptions":{}}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4117:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1588,"name":"address","nodeType":"ElementaryTypeName","src":"4117:7:16","typeDescriptions":{}}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4117:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4109:27:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1596,"nodeType":"ExpressionStatement","src":"4109:27:16"},{"expression":{"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1597,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"4146:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1600,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"4162:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313932","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4167:3:16","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},"src":"4162:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4155:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1598,"name":"uint64","nodeType":"ElementaryTypeName","src":"4155:6:16","typeDescriptions":{}}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4155:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"4146:25:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":1605,"nodeType":"ExpressionStatement","src":"4146:25:16"},{"expression":{"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1606,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"4181:5:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1609,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"4196:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":1610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4201:3:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"4196:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4189:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":1607,"name":"uint32","nodeType":"ElementaryTypeName","src":"4189:6:16","typeDescriptions":{}}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4189:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4181:24:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":1614,"nodeType":"ExpressionStatement","src":"4181:24:16"}]},"documentation":{"id":1570,"nodeType":"StructuredDocumentation","src":"3801:66:16","text":" @dev Returns the Name's owner address and fuses"},"functionSelector":"0178fe3f","id":1616,"implemented":true,"kind":"function","modifiers":[],"name":"getData","nameLocation":"3881:7:16","nodeType":"FunctionDefinition","parameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"tokenId","nameLocation":"3897:7:16","nodeType":"VariableDeclaration","scope":1616,"src":"3889:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1571,"name":"uint256","nodeType":"ElementaryTypeName","src":"3889:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3888:17:16"},"returnParameters":{"id":1580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1575,"mutability":"mutable","name":"owner","nameLocation":"3988:5:16","nodeType":"VariableDeclaration","scope":1616,"src":"3980:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1574,"name":"address","nodeType":"ElementaryTypeName","src":"3980:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1577,"mutability":"mutable","name":"fuses","nameLocation":"4014:5:16","nodeType":"VariableDeclaration","scope":1616,"src":"4007:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1576,"name":"uint32","nodeType":"ElementaryTypeName","src":"4007:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1579,"mutability":"mutable","name":"expiry","nameLocation":"4040:6:16","nodeType":"VariableDeclaration","scope":1616,"src":"4033:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1578,"name":"uint64","nodeType":"ElementaryTypeName","src":"4033:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3966:90:16"},"scope":2243,"src":"3872:340:16","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[217],"body":{"id":1663,"nodeType":"Block","src":"4448:285:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1632,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"4466:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4480:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4472:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1633,"name":"address","nodeType":"ElementaryTypeName","src":"4472:7:16","typeDescriptions":{}}},"id":1636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4472:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4466:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4484:39:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""},"value":"ERC1155: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""}],"id":1631,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4458:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4458:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1640,"nodeType":"ExpressionStatement","src":"4458:66:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1642,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"4555:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1643,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4563:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4567:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4563:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4555:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1647,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"4594:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1648,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4600:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4604:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4600:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1646,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"4577:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4577:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4555:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564","id":1652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4625:43:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a","typeString":"literal_string \"ERC1155: caller is not owner nor approved\""},"value":"ERC1155: caller is not owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a","typeString":"literal_string \"ERC1155: caller is not owner nor approved\""}],"id":1641,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4534:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:144:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1654,"nodeType":"ExpressionStatement","src":"4534:144:16"},{"expression":{"arguments":[{"id":1656,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"4699:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1657,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"4705:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1658,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"4709:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1659,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"4713:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1660,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"4721:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1655,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"4689:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4689:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1662,"nodeType":"ExpressionStatement","src":"4689:37:16"}]},"documentation":{"id":1617,"nodeType":"StructuredDocumentation","src":"4218:56:16","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":1664,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4288:16:16","nodeType":"FunctionDefinition","overrides":{"id":1629,"nodeType":"OverrideSpecifier","overrides":[],"src":"4439:8:16"},"parameters":{"id":1628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"mutability":"mutable","name":"from","nameLocation":"4322:4:16","nodeType":"VariableDeclaration","scope":1664,"src":"4314:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1618,"name":"address","nodeType":"ElementaryTypeName","src":"4314:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1621,"mutability":"mutable","name":"to","nameLocation":"4344:2:16","nodeType":"VariableDeclaration","scope":1664,"src":"4336:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1620,"name":"address","nodeType":"ElementaryTypeName","src":"4336:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1623,"mutability":"mutable","name":"id","nameLocation":"4364:2:16","nodeType":"VariableDeclaration","scope":1664,"src":"4356:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1622,"name":"uint256","nodeType":"ElementaryTypeName","src":"4356:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1625,"mutability":"mutable","name":"amount","nameLocation":"4384:6:16","nodeType":"VariableDeclaration","scope":1664,"src":"4376:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1624,"name":"uint256","nodeType":"ElementaryTypeName","src":"4376:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1627,"mutability":"mutable","name":"data","nameLocation":"4413:4:16","nodeType":"VariableDeclaration","scope":1664,"src":"4400:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1626,"name":"bytes","nodeType":"ElementaryTypeName","src":"4400:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4304:119:16"},"returnParameters":{"id":1630,"nodeType":"ParameterList","parameters":[],"src":"4448:0:16"},"scope":2243,"src":"4279:454:16","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[233],"body":{"id":1792,"nodeType":"Block","src":"4999:1061:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1682,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"5030:3:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5034:6:16","memberName":"length","nodeType":"MemberAccess","src":"5030:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1684,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"5044:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5052:6:16","memberName":"length","nodeType":"MemberAccess","src":"5044:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5030:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":1687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5072:42:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":1681,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5009:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5009:115:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1689,"nodeType":"ExpressionStatement","src":"5009:115:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1691,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"5142:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5156:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5148:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1692,"name":"address","nodeType":"ElementaryTypeName","src":"5148:7:16","typeDescriptions":{}}},"id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5148:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5142:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373","id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5160:39:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""},"value":"ERC1155: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""}],"id":1690,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5134:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5134:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1699,"nodeType":"ExpressionStatement","src":"5134:66:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1701,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"5231:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1702,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5239:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5243:6:16","memberName":"sender","nodeType":"MemberAccess","src":"5239:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5231:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1706,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"5270:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1707,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5276:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5280:6:16","memberName":"sender","nodeType":"MemberAccess","src":"5276:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1705,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"5253:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5253:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5231:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564","id":1711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5301:52:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686","typeString":"literal_string \"ERC1155: transfer caller is not owner nor approved\""},"value":"ERC1155: transfer caller is not owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686","typeString":"literal_string \"ERC1155: transfer caller is not owner nor approved\""}],"id":1700,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5210:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5210:153:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1713,"nodeType":"ExpressionStatement","src":"5210:153:16"},{"body":{"id":1771,"nodeType":"Block","src":"5415:404:16","statements":[{"assignments":[1726],"declarations":[{"constant":false,"id":1726,"mutability":"mutable","name":"id","nameLocation":"5437:2:16","nodeType":"VariableDeclaration","scope":1771,"src":"5429:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1725,"name":"uint256","nodeType":"ElementaryTypeName","src":"5429:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1730,"initialValue":{"baseExpression":{"id":1727,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"5442:3:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1729,"indexExpression":{"id":1728,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"5446:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5442:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5429:19:16"},{"assignments":[1732],"declarations":[{"constant":false,"id":1732,"mutability":"mutable","name":"amount","nameLocation":"5470:6:16","nodeType":"VariableDeclaration","scope":1771,"src":"5462:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"5462:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1736,"initialValue":{"baseExpression":{"id":1733,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"5479:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1735,"indexExpression":{"id":1734,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"5487:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5479:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5462:27:16"},{"assignments":[1738,1740,1742],"declarations":[{"constant":false,"id":1738,"mutability":"mutable","name":"oldOwner","nameLocation":"5513:8:16","nodeType":"VariableDeclaration","scope":1771,"src":"5505:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1737,"name":"address","nodeType":"ElementaryTypeName","src":"5505:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1740,"mutability":"mutable","name":"fuses","nameLocation":"5530:5:16","nodeType":"VariableDeclaration","scope":1771,"src":"5523:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1739,"name":"uint32","nodeType":"ElementaryTypeName","src":"5523:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1742,"mutability":"mutable","name":"expiry","nameLocation":"5544:6:16","nodeType":"VariableDeclaration","scope":1771,"src":"5537:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1741,"name":"uint64","nodeType":"ElementaryTypeName","src":"5537:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":1746,"initialValue":{"arguments":[{"id":1744,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"5562:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1743,"name":"getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"5554:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (uint256) view returns (address,uint32,uint64)"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5554:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"5504:61:16"},{"expression":{"arguments":[{"id":1748,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"5598:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1749,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"5602:5:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":1750,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"5609:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1747,"name":"_preTransferCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"5580:17:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint32_$_t_uint64_$returns$_t_bool_$","typeString":"function (uint256,uint32,uint64) returns (bool)"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5580:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1752,"nodeType":"ExpressionStatement","src":"5580:36:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1754,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"5656:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5666:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5656:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1757,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"5671:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1758,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"5683:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5671:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5656:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5705:44:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""},"value":"ERC1155: insufficient balance for transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""}],"id":1753,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5631:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:132:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1763,"nodeType":"ExpressionStatement","src":"5631:132:16"},{"expression":{"arguments":[{"id":1765,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"5786:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1766,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"5790:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1767,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"5794:5:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":1768,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"5801:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1764,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"5777:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint32_$_t_uint64_$returns$__$","typeString":"function (uint256,address,uint32,uint64)"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5777:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1770,"nodeType":"ExpressionStatement","src":"5777:31:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1718,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"5394:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1719,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"5398:3:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5402:6:16","memberName":"length","nodeType":"MemberAccess","src":"5398:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5394:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1772,"initializationExpression":{"assignments":[1715],"declarations":[{"constant":false,"id":1715,"mutability":"mutable","name":"i","nameLocation":"5387:1:16","nodeType":"VariableDeclaration","scope":1772,"src":"5379:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"5379:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1717,"initialValue":{"hexValue":"30","id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5391:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5379:13:16"},"loopExpression":{"expression":{"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5410:3:16","subExpression":{"id":1722,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"5412:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1724,"nodeType":"ExpressionStatement","src":"5410:3:16"},"nodeType":"ForStatement","src":"5374:445:16"},{"eventCall":{"arguments":[{"expression":{"id":1774,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5848:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5852:6:16","memberName":"sender","nodeType":"MemberAccess","src":"5848:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1776,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"5860:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1777,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"5866:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1778,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"5870:3:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1779,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"5875:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1773,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5834:13:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5834:49:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1781,"nodeType":"EmitStatement","src":"5829:54:16"},{"expression":{"arguments":[{"expression":{"id":1783,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5943:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5947:6:16","memberName":"sender","nodeType":"MemberAccess","src":"5943:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1785,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"5967:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1786,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"5985:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1787,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"6001:3:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1788,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"6018:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1789,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"6039:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1782,"name":"_doSafeBatchTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"5894:35:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:159:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1791,"nodeType":"ExpressionStatement","src":"5894:159:16"}]},"documentation":{"id":1665,"nodeType":"StructuredDocumentation","src":"4739:61:16","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":1793,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4814:21:16","nodeType":"FunctionDefinition","overrides":{"id":1679,"nodeType":"OverrideSpecifier","overrides":[],"src":"4990:8:16"},"parameters":{"id":1678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1667,"mutability":"mutable","name":"from","nameLocation":"4853:4:16","nodeType":"VariableDeclaration","scope":1793,"src":"4845:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1666,"name":"address","nodeType":"ElementaryTypeName","src":"4845:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1669,"mutability":"mutable","name":"to","nameLocation":"4875:2:16","nodeType":"VariableDeclaration","scope":1793,"src":"4867:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1668,"name":"address","nodeType":"ElementaryTypeName","src":"4867:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1672,"mutability":"mutable","name":"ids","nameLocation":"4904:3:16","nodeType":"VariableDeclaration","scope":1793,"src":"4887:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1670,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1671,"nodeType":"ArrayTypeName","src":"4887:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1675,"mutability":"mutable","name":"amounts","nameLocation":"4934:7:16","nodeType":"VariableDeclaration","scope":1793,"src":"4917:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1673,"name":"uint256","nodeType":"ElementaryTypeName","src":"4917:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1674,"nodeType":"ArrayTypeName","src":"4917:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1677,"mutability":"mutable","name":"data","nameLocation":"4964:4:16","nodeType":"VariableDeclaration","scope":1793,"src":"4951:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1676,"name":"bytes","nodeType":"ElementaryTypeName","src":"4951:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4835:139:16"},"returnParameters":{"id":1680,"nodeType":"ParameterList","parameters":[],"src":"4999:0:16"},"scope":2243,"src":"4805:1255:16","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1833,"nodeType":"Block","src":"6461:148:16","statements":[{"expression":{"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1805,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"6471:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1807,"indexExpression":{"id":1806,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"6479:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6471:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1812,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"6518:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6510:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1810,"name":"uint160","nodeType":"ElementaryTypeName","src":"6510:7:16","typeDescriptions":{}}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6510:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6502:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1808,"name":"uint256","nodeType":"ElementaryTypeName","src":"6502:7:16","typeDescriptions":{}}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6502:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1817,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"6549:5:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6541:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1815,"name":"uint256","nodeType":"ElementaryTypeName","src":"6541:7:16","typeDescriptions":{}}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":1819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6559:3:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"6541:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1821,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6540:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6502:61:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1825,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"6587:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6579:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1823,"name":"uint256","nodeType":"ElementaryTypeName","src":"6579:7:16","typeDescriptions":{}}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6579:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313932","id":1827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6598:3:16","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},"src":"6579:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1829,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6578:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6502:100:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6471:131:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1832,"nodeType":"ExpressionStatement","src":"6471:131:16"}]},"documentation":{"id":1794,"nodeType":"StructuredDocumentation","src":"6259:63:16","text":" @dev Sets the Name's owner address and fuses"},"id":1834,"implemented":true,"kind":"function","modifiers":[],"name":"_setData","nameLocation":"6336:8:16","nodeType":"FunctionDefinition","parameters":{"id":1803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1796,"mutability":"mutable","name":"tokenId","nameLocation":"6362:7:16","nodeType":"VariableDeclaration","scope":1834,"src":"6354:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1795,"name":"uint256","nodeType":"ElementaryTypeName","src":"6354:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1798,"mutability":"mutable","name":"owner","nameLocation":"6387:5:16","nodeType":"VariableDeclaration","scope":1834,"src":"6379:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1797,"name":"address","nodeType":"ElementaryTypeName","src":"6379:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"fuses","nameLocation":"6409:5:16","nodeType":"VariableDeclaration","scope":1834,"src":"6402:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1799,"name":"uint32","nodeType":"ElementaryTypeName","src":"6402:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1802,"mutability":"mutable","name":"expiry","nameLocation":"6431:6:16","nodeType":"VariableDeclaration","scope":1834,"src":"6424:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1801,"name":"uint64","nodeType":"ElementaryTypeName","src":"6424:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6344:99:16"},"returnParameters":{"id":1804,"nodeType":"ParameterList","parameters":[],"src":"6461:0:16"},"scope":2243,"src":"6327:282:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":1845,"implemented":false,"kind":"function","modifiers":[],"name":"_preTransferCheck","nameLocation":"6624:17:16","nodeType":"FunctionDefinition","parameters":{"id":1841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"id","nameLocation":"6659:2:16","nodeType":"VariableDeclaration","scope":1845,"src":"6651:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"6651:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"fuses","nameLocation":"6678:5:16","nodeType":"VariableDeclaration","scope":1845,"src":"6671:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1837,"name":"uint32","nodeType":"ElementaryTypeName","src":"6671:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1840,"mutability":"mutable","name":"expiry","nameLocation":"6700:6:16","nodeType":"VariableDeclaration","scope":1845,"src":"6693:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1839,"name":"uint64","nodeType":"ElementaryTypeName","src":"6693:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6641:71:16"},"returnParameters":{"id":1844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1845,"src":"6739:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1842,"name":"bool","nodeType":"ElementaryTypeName","src":"6739:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6738:6:16"},"scope":2243,"src":"6615:130:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":1858,"implemented":false,"kind":"function","modifiers":[],"name":"_clearOwnerAndFuses","nameLocation":"6760:19:16","nodeType":"FunctionDefinition","parameters":{"id":1852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1847,"mutability":"mutable","name":"owner","nameLocation":"6797:5:16","nodeType":"VariableDeclaration","scope":1858,"src":"6789:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1846,"name":"address","nodeType":"ElementaryTypeName","src":"6789:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1849,"mutability":"mutable","name":"fuses","nameLocation":"6819:5:16","nodeType":"VariableDeclaration","scope":1858,"src":"6812:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1848,"name":"uint32","nodeType":"ElementaryTypeName","src":"6812:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1851,"mutability":"mutable","name":"expiry","nameLocation":"6841:6:16","nodeType":"VariableDeclaration","scope":1858,"src":"6834:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1850,"name":"uint64","nodeType":"ElementaryTypeName","src":"6834:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6779:74:16"},"returnParameters":{"id":1857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1858,"src":"6880:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1853,"name":"address","nodeType":"ElementaryTypeName","src":"6880:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1858,"src":"6889:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1855,"name":"uint32","nodeType":"ElementaryTypeName","src":"6889:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"6879:17:16"},"scope":2243,"src":"6751:146:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1988,"nodeType":"Block","src":"7031:1014:16","statements":[{"assignments":[1870],"declarations":[{"constant":false,"id":1870,"mutability":"mutable","name":"tokenId","nameLocation":"7049:7:16","nodeType":"VariableDeclaration","scope":1988,"src":"7041:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1869,"name":"uint256","nodeType":"ElementaryTypeName","src":"7041:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1875,"initialValue":{"arguments":[{"id":1873,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"7067:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7059:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1871,"name":"uint256","nodeType":"ElementaryTypeName","src":"7059:7:16","typeDescriptions":{}}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7059:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7041:31:16"},{"assignments":[1877,1879,1881],"declarations":[{"constant":false,"id":1877,"mutability":"mutable","name":"oldOwner","nameLocation":"7091:8:16","nodeType":"VariableDeclaration","scope":1988,"src":"7083:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1876,"name":"address","nodeType":"ElementaryTypeName","src":"7083:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1879,"mutability":"mutable","name":"oldFuses","nameLocation":"7108:8:16","nodeType":"VariableDeclaration","scope":1988,"src":"7101:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1878,"name":"uint32","nodeType":"ElementaryTypeName","src":"7101:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1881,"mutability":"mutable","name":"oldExpiry","nameLocation":"7125:9:16","nodeType":"VariableDeclaration","scope":1988,"src":"7118:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1880,"name":"uint64","nodeType":"ElementaryTypeName","src":"7118:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":1888,"initialValue":{"arguments":[{"arguments":[{"id":1885,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"7167:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7159:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1883,"name":"uint256","nodeType":"ElementaryTypeName","src":"7159:7:16","typeDescriptions":{}}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7159:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1882,"name":"getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"7138:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (uint256) view returns (address,uint32,uint64)"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7138:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"7082:100:16"},{"assignments":[1890],"declarations":[{"constant":false,"id":1890,"mutability":"mutable","name":"parentControlledFuses","nameLocation":"7200:21:16","nodeType":"VariableDeclaration","scope":1988,"src":"7193:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1889,"name":"uint32","nodeType":"ElementaryTypeName","src":"7193:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":1904,"initialValue":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":1900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"arguments":[{"id":1895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7237:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":1894,"name":"uint16","nodeType":"ElementaryTypeName","src":"7237:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":1893,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7232:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7232:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7245:3:16","memberName":"max","nodeType":"MemberAccess","src":"7232:16:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":1892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7225:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":1891,"name":"uint32","nodeType":"ElementaryTypeName","src":"7225:6:16","typeDescriptions":{}}},"id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7225:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7253:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"7225:30:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":1901,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7224:32:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1902,"name":"oldFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"7271:8:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7224:55:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"7193:86:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1905,"name":"oldExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"7294:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1906,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"7306:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7294:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1913,"nodeType":"IfStatement","src":"7290:67:16","trueBody":{"id":1912,"nodeType":"Block","src":"7314:43:16","statements":[{"expression":{"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1908,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"7328:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1909,"name":"oldExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"7337:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7328:18:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":1911,"nodeType":"ExpressionStatement","src":"7328:18:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1914,"name":"oldExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"7371:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1915,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7384:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7390:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"7384:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7371:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1925,"nodeType":"IfStatement","src":"7367:96:16","trueBody":{"id":1924,"nodeType":"Block","src":"7401:62:16","statements":[{"expression":{"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1918,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"7415:5:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1919,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"7423:5:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":1920,"name":"parentControlledFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"7431:21:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7423:29:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7415:37:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":1923,"nodeType":"ExpressionStatement","src":"7415:37:16"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1927,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"7481:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7501:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7493:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1928,"name":"address","nodeType":"ElementaryTypeName","src":"7493:7:16","typeDescriptions":{}}},"id":1931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7493:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7481:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206d696e74206f66206578697374696e6720746f6b656e","id":1933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7505:33:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_0a5a3f6c2833a0d5056e4c87913f3b2ad716b97085ed243cd04d020b3830fcac","typeString":"literal_string \"ERC1155: mint of existing token\""},"value":"ERC1155: mint of existing token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0a5a3f6c2833a0d5056e4c87913f3b2ad716b97085ed243cd04d020b3830fcac","typeString":"literal_string \"ERC1155: mint of existing token\""}],"id":1926,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7473:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7473:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1935,"nodeType":"ExpressionStatement","src":"7473:66:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1937,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"7557:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7574:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7566:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1938,"name":"address","nodeType":"ElementaryTypeName","src":"7566:7:16","typeDescriptions":{}}},"id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7566:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7557:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f2061646472657373","id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7578:35:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""},"value":"ERC1155: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""}],"id":1936,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7549:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7549:65:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1945,"nodeType":"ExpressionStatement","src":"7549:65:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1947,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"7645:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":1950,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7662:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_ERC1155Fuse_$2243","typeString":"contract ERC1155Fuse"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC1155Fuse_$2243","typeString":"contract ERC1155Fuse"}],"id":1949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7654:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1948,"name":"address","nodeType":"ElementaryTypeName","src":"7654:7:16","typeDescriptions":{}}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7654:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7645:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206e65774f776e65722063616e6e6f7420626520746865204e616d655772617070657220636f6e7472616374","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7681:54:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_52680399c4a01b55318dc7a1e656395c494f95152fe03ad468b9b7af702c670b","typeString":"literal_string \"ERC1155: newOwner cannot be the NameWrapper contract\""},"value":"ERC1155: newOwner cannot be the NameWrapper contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52680399c4a01b55318dc7a1e656395c494f95152fe03ad468b9b7af702c670b","typeString":"literal_string \"ERC1155: newOwner cannot be the NameWrapper contract\""}],"id":1946,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7624:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:121:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1955,"nodeType":"ExpressionStatement","src":"7624:121:16"},{"expression":{"arguments":[{"id":1957,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"7765:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1958,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"7774:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1959,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"7781:5:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":1960,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"7788:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1956,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"7756:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint32_$_t_uint64_$returns$__$","typeString":"function (uint256,address,uint32,uint64)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1962,"nodeType":"ExpressionStatement","src":"7756:39:16"},{"eventCall":{"arguments":[{"expression":{"id":1964,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7825:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7829:6:16","memberName":"sender","nodeType":"MemberAccess","src":"7825:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"307830","id":1968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7845:3:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7837:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1966,"name":"address","nodeType":"ElementaryTypeName","src":"7837:7:16","typeDescriptions":{}}},"id":1969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7837:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1970,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"7851:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1971,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"7858:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7867:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1963,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"7810:14:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7810:59:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1974,"nodeType":"EmitStatement","src":"7805:64:16"},{"expression":{"arguments":[{"expression":{"id":1976,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7923:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7927:6:16","memberName":"sender","nodeType":"MemberAccess","src":"7923:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7955:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7947:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1978,"name":"address","nodeType":"ElementaryTypeName","src":"7947:7:16","typeDescriptions":{}}},"id":1981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7947:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1982,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"7971:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1983,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"7990:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8011:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"","id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8026:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1975,"name":"_doSafeTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"7879:30:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7879:159:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1987,"nodeType":"ExpressionStatement","src":"7879:159:16"}]},"id":1989,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"6912:5:16","nodeType":"FunctionDefinition","parameters":{"id":1867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1860,"mutability":"mutable","name":"node","nameLocation":"6935:4:16","nodeType":"VariableDeclaration","scope":1989,"src":"6927:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1859,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1862,"mutability":"mutable","name":"owner","nameLocation":"6957:5:16","nodeType":"VariableDeclaration","scope":1989,"src":"6949:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1861,"name":"address","nodeType":"ElementaryTypeName","src":"6949:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1864,"mutability":"mutable","name":"fuses","nameLocation":"6979:5:16","nodeType":"VariableDeclaration","scope":1989,"src":"6972:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1863,"name":"uint32","nodeType":"ElementaryTypeName","src":"6972:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1866,"mutability":"mutable","name":"expiry","nameLocation":"7001:6:16","nodeType":"VariableDeclaration","scope":1989,"src":"6994:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1865,"name":"uint64","nodeType":"ElementaryTypeName","src":"6994:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6917:96:16"},"returnParameters":{"id":1868,"nodeType":"ParameterList","parameters":[],"src":"7031:0:16"},"scope":2243,"src":"6903:1142:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2036,"nodeType":"Block","src":"8100:361:16","statements":[{"assignments":[1995,1997,1999],"declarations":[{"constant":false,"id":1995,"mutability":"mutable","name":"oldOwner","nameLocation":"8119:8:16","nodeType":"VariableDeclaration","scope":2036,"src":"8111:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1994,"name":"address","nodeType":"ElementaryTypeName","src":"8111:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1997,"mutability":"mutable","name":"fuses","nameLocation":"8136:5:16","nodeType":"VariableDeclaration","scope":2036,"src":"8129:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1996,"name":"uint32","nodeType":"ElementaryTypeName","src":"8129:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1999,"mutability":"mutable","name":"expiry","nameLocation":"8150:6:16","nodeType":"VariableDeclaration","scope":2036,"src":"8143:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1998,"name":"uint64","nodeType":"ElementaryTypeName","src":"8143:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":2004,"initialValue":{"arguments":[{"id":2002,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"8193:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2000,"name":"ERC1155Fuse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"8160:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Fuse_$2243_$","typeString":"type(contract ERC1155Fuse)"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8172:7:16","memberName":"getData","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"8160:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (uint256) view returns (address,uint32,uint64)"}},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8160:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"8110:100:16"},{"expression":{"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[null,{"id":2005,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"8223:5:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":2006,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"8220:9:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$_t_uint32_$","typeString":"tuple(,uint32)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2008,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"8252:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2009,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"8262:5:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2010,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"8269:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2007,"name":"_clearOwnerAndFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"8232:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint64_$returns$_t_address_$_t_uint32_$","typeString":"function (address,uint32,uint64) returns (address,uint32)"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8232:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$","typeString":"tuple(address,uint32)"}},"src":"8220:56:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2013,"nodeType":"ExpressionStatement","src":"8220:56:16"},{"expression":{"arguments":[{"id":2015,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"8340:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"307830","id":2018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8357:3:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8349:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2016,"name":"address","nodeType":"ElementaryTypeName","src":"8349:7:16","typeDescriptions":{}}},"id":2019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8349:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2020,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"8363:5:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2021,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"8370:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2014,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"8331:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint32_$_t_uint64_$returns$__$","typeString":"function (uint256,address,uint32,uint64)"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8331:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2023,"nodeType":"ExpressionStatement","src":"8331:46:16"},{"eventCall":{"arguments":[{"expression":{"id":2025,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8407:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8411:6:16","memberName":"sender","nodeType":"MemberAccess","src":"8407:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2027,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"8419:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"307830","id":2030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8437:3:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8429:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2028,"name":"address","nodeType":"ElementaryTypeName","src":"8429:7:16","typeDescriptions":{}}},"id":2031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8429:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2032,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"8443:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8452:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2024,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"8392:14:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8392:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2035,"nodeType":"EmitStatement","src":"8387:67:16"}]},"id":2037,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8060:5:16","nodeType":"FunctionDefinition","parameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"tokenId","nameLocation":"8074:7:16","nodeType":"VariableDeclaration","scope":2037,"src":"8066:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1990,"name":"uint256","nodeType":"ElementaryTypeName","src":"8066:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8065:17:16"},"returnParameters":{"id":1993,"nodeType":"ParameterList","parameters":[],"src":"8100:0:16"},"scope":2243,"src":"8051:410:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2109,"nodeType":"Block","src":"8614:504:16","statements":[{"assignments":[2051,2053,2055],"declarations":[{"constant":false,"id":2051,"mutability":"mutable","name":"oldOwner","nameLocation":"8633:8:16","nodeType":"VariableDeclaration","scope":2109,"src":"8625:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2050,"name":"address","nodeType":"ElementaryTypeName","src":"8625:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2053,"mutability":"mutable","name":"fuses","nameLocation":"8650:5:16","nodeType":"VariableDeclaration","scope":2109,"src":"8643:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2052,"name":"uint32","nodeType":"ElementaryTypeName","src":"8643:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2055,"mutability":"mutable","name":"expiry","nameLocation":"8664:6:16","nodeType":"VariableDeclaration","scope":2109,"src":"8657:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2054,"name":"uint64","nodeType":"ElementaryTypeName","src":"8657:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":2059,"initialValue":{"arguments":[{"id":2057,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"8682:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2056,"name":"getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"8674:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (uint256) view returns (address,uint32,uint64)"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8674:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"8624:61:16"},{"expression":{"arguments":[{"id":2061,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"8714:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2062,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"8718:5:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2063,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"8725:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2060,"name":"_preTransferCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"8696:17:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint32_$_t_uint64_$returns$_t_bool_$","typeString":"function (uint256,uint32,uint64) returns (bool)"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8696:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2065,"nodeType":"ExpressionStatement","src":"8696:36:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2067,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"8764:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8774:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8764:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2070,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"8779:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2071,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"8791:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8779:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8764:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572","id":2074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8809:44:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""},"value":"ERC1155: insufficient balance for transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""}],"id":2066,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8743:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8743:120:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2076,"nodeType":"ExpressionStatement","src":"8743:120:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2077,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"8878:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2078,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"8890:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8878:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2082,"nodeType":"IfStatement","src":"8874:51:16","trueBody":{"id":2081,"nodeType":"Block","src":"8894:31:16","statements":[{"functionReturnParameters":2049,"id":2080,"nodeType":"Return","src":"8908:7:16"}]}},{"expression":{"arguments":[{"id":2084,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"8944:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2085,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"8948:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2086,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"8952:5:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2087,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"8959:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2083,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"8935:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint32_$_t_uint64_$returns$__$","typeString":"function (uint256,address,uint32,uint64)"}},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8935:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2089,"nodeType":"ExpressionStatement","src":"8935:31:16"},{"eventCall":{"arguments":[{"expression":{"id":2091,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8997:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9001:6:16","memberName":"sender","nodeType":"MemberAccess","src":"8997:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2093,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"9009:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2094,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"9015:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2095,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"9019:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2096,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"9023:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2090,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"8982:14:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8982:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2098,"nodeType":"EmitStatement","src":"8977:53:16"},{"expression":{"arguments":[{"expression":{"id":2100,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9072:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9076:6:16","memberName":"sender","nodeType":"MemberAccess","src":"9072:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2102,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"9084:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2103,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"9090:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2104,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"9094:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2105,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"9098:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2106,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"9106:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2099,"name":"_doSafeTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"9041:30:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9041:70:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2108,"nodeType":"ExpressionStatement","src":"9041:70:16"}]},"id":2110,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"8476:9:16","nodeType":"FunctionDefinition","parameters":{"id":2048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2039,"mutability":"mutable","name":"from","nameLocation":"8503:4:16","nodeType":"VariableDeclaration","scope":2110,"src":"8495:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2038,"name":"address","nodeType":"ElementaryTypeName","src":"8495:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2041,"mutability":"mutable","name":"to","nameLocation":"8525:2:16","nodeType":"VariableDeclaration","scope":2110,"src":"8517:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2040,"name":"address","nodeType":"ElementaryTypeName","src":"8517:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2043,"mutability":"mutable","name":"id","nameLocation":"8545:2:16","nodeType":"VariableDeclaration","scope":2110,"src":"8537:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2042,"name":"uint256","nodeType":"ElementaryTypeName","src":"8537:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2045,"mutability":"mutable","name":"amount","nameLocation":"8565:6:16","nodeType":"VariableDeclaration","scope":2110,"src":"8557:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2044,"name":"uint256","nodeType":"ElementaryTypeName","src":"8557:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2047,"mutability":"mutable","name":"data","nameLocation":"8594:4:16","nodeType":"VariableDeclaration","scope":2110,"src":"8581:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2046,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8485:119:16"},"returnParameters":{"id":2049,"nodeType":"ParameterList","parameters":[],"src":"8614:0:16"},"scope":2243,"src":"8467:651:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2174,"nodeType":"Block","src":"9317:720:16","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2125,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"9331:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9334:10:16","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":520,"src":"9331:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2173,"nodeType":"IfStatement","src":"9327:704:16","trueBody":{"id":2172,"nodeType":"Block","src":"9348:683:16","statements":[{"clauses":[{"block":{"id":2154,"nodeType":"Block","src":"9611:226:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2141,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"9654:8:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"arguments":[{"id":2143,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"9683:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2142,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"9666:16:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$275_$","typeString":"type(contract IERC1155Receiver)"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9666:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$275","typeString":"contract IERC1155Receiver"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9687:17:16","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":256,"src":"9666:38:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9705:8:16","memberName":"selector","nodeType":"MemberAccess","src":"9666:47:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"9654:59:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2153,"nodeType":"IfStatement","src":"9629:194:16","trueBody":{"id":2152,"nodeType":"Block","src":"9732:91:16","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73","id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9761:42:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""},"value":"ERC1155: ERC1155Receiver rejected tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""}],"id":2148,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9754:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9754:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2151,"nodeType":"ExpressionStatement","src":"9754:50:16"}]}}]},"errorName":"","id":2155,"nodeType":"TryCatchClause","parameters":{"id":2140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2139,"mutability":"mutable","name":"response","nameLocation":"9601:8:16","nodeType":"VariableDeclaration","scope":2155,"src":"9594:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2138,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9594:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"9593:17:16"},"src":"9585:252:16"},{"block":{"id":2163,"nodeType":"Block","src":"9872:47:16","statements":[{"expression":{"arguments":[{"id":2160,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"9897:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2159,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9890:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9890:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2162,"nodeType":"ExpressionStatement","src":"9890:14:16"}]},"errorName":"Error","id":2164,"nodeType":"TryCatchClause","parameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"reason","nameLocation":"9864:6:16","nodeType":"VariableDeclaration","scope":2164,"src":"9850:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2156,"name":"string","nodeType":"ElementaryTypeName","src":"9850:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9849:22:16"},"src":"9838:81:16"},{"block":{"id":2169,"nodeType":"Block","src":"9926:95:16","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572","id":2166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9951:54:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed","typeString":"literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""},"value":"ERC1155: transfer to non ERC1155Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed","typeString":"literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""}],"id":2165,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9944:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9944:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2168,"nodeType":"ExpressionStatement","src":"9944:62:16"}]},"errorName":"","id":2170,"nodeType":"TryCatchClause","src":"9920:101:16"}],"externalCall":{"arguments":[{"id":2132,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"9442:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2133,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"9472:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2134,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"9498:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2135,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"9522:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2136,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"9550:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2129,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"9399:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2128,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"9382:16:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$275_$","typeString":"type(contract IERC1155Receiver)"}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9382:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$275","typeString":"contract IERC1155Receiver"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9403:17:16","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":256,"src":"9382:38:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9382:190:16","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2171,"nodeType":"TryStatement","src":"9362:659:16"}]}}]},"id":2175,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeTransferAcceptanceCheck","nameLocation":"9133:30:16","nodeType":"FunctionDefinition","parameters":{"id":2123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2112,"mutability":"mutable","name":"operator","nameLocation":"9181:8:16","nodeType":"VariableDeclaration","scope":2175,"src":"9173:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2111,"name":"address","nodeType":"ElementaryTypeName","src":"9173:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2114,"mutability":"mutable","name":"from","nameLocation":"9207:4:16","nodeType":"VariableDeclaration","scope":2175,"src":"9199:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2113,"name":"address","nodeType":"ElementaryTypeName","src":"9199:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2116,"mutability":"mutable","name":"to","nameLocation":"9229:2:16","nodeType":"VariableDeclaration","scope":2175,"src":"9221:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2115,"name":"address","nodeType":"ElementaryTypeName","src":"9221:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2118,"mutability":"mutable","name":"id","nameLocation":"9249:2:16","nodeType":"VariableDeclaration","scope":2175,"src":"9241:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2117,"name":"uint256","nodeType":"ElementaryTypeName","src":"9241:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2120,"mutability":"mutable","name":"amount","nameLocation":"9269:6:16","nodeType":"VariableDeclaration","scope":2175,"src":"9261:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2119,"name":"uint256","nodeType":"ElementaryTypeName","src":"9261:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2122,"mutability":"mutable","name":"data","nameLocation":"9298:4:16","nodeType":"VariableDeclaration","scope":2175,"src":"9285:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2121,"name":"bytes","nodeType":"ElementaryTypeName","src":"9285:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9163:145:16"},"returnParameters":{"id":2124,"nodeType":"ParameterList","parameters":[],"src":"9317:0:16"},"scope":2243,"src":"9124:913:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2241,"nodeType":"Block","src":"10261:752:16","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2192,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"10275:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10278:10:16","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":520,"src":"10275:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10275:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2240,"nodeType":"IfStatement","src":"10271:736:16","trueBody":{"id":2239,"nodeType":"Block","src":"10292:715:16","statements":[{"clauses":[{"block":{"id":2221,"nodeType":"Block","src":"10562:251:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2208,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"10605:8:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"arguments":[{"id":2210,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"10654:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2209,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"10637:16:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$275_$","typeString":"type(contract IERC1155Receiver)"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10637:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$275","typeString":"contract IERC1155Receiver"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10658:22:16","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":274,"src":"10637:43:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10681:8:16","memberName":"selector","nodeType":"MemberAccess","src":"10637:52:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"10605:84:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2220,"nodeType":"IfStatement","src":"10580:219:16","trueBody":{"id":2219,"nodeType":"Block","src":"10708:91:16","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73","id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10737:42:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""},"value":"ERC1155: ERC1155Receiver rejected tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""}],"id":2215,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"10730:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10730:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2218,"nodeType":"ExpressionStatement","src":"10730:50:16"}]}}]},"errorName":"","id":2222,"nodeType":"TryCatchClause","parameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"mutability":"mutable","name":"response","nameLocation":"10552:8:16","nodeType":"VariableDeclaration","scope":2222,"src":"10545:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2205,"name":"bytes4","nodeType":"ElementaryTypeName","src":"10545:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"10544:17:16"},"src":"10536:277:16"},{"block":{"id":2230,"nodeType":"Block","src":"10848:47:16","statements":[{"expression":{"arguments":[{"id":2227,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"10873:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2226,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"10866:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10866:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2229,"nodeType":"ExpressionStatement","src":"10866:14:16"}]},"errorName":"Error","id":2231,"nodeType":"TryCatchClause","parameters":{"id":2225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2224,"mutability":"mutable","name":"reason","nameLocation":"10840:6:16","nodeType":"VariableDeclaration","scope":2231,"src":"10826:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2223,"name":"string","nodeType":"ElementaryTypeName","src":"10826:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10825:22:16"},"src":"10814:81:16"},{"block":{"id":2236,"nodeType":"Block","src":"10902:95:16","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10927:54:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed","typeString":"literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""},"value":"ERC1155: transfer to non ERC1155Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed","typeString":"literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""}],"id":2232,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"10920:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10920:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2235,"nodeType":"ExpressionStatement","src":"10920:62:16"}]},"errorName":"","id":2237,"nodeType":"TryCatchClause","src":"10896:101:16"}],"externalCall":{"arguments":[{"id":2199,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"10391:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2200,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"10421:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2201,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"10447:3:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2202,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"10472:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2203,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"10501:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2196,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"10343:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2195,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"10326:16:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$275_$","typeString":"type(contract IERC1155Receiver)"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10326:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$275","typeString":"contract IERC1155Receiver"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10347:22:16","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":274,"src":"10326:43:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10326:197:16","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2238,"nodeType":"TryStatement","src":"10306:691:16"}]}}]},"id":2242,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeBatchTransferAcceptanceCheck","nameLocation":"10052:35:16","nodeType":"FunctionDefinition","parameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2177,"mutability":"mutable","name":"operator","nameLocation":"10105:8:16","nodeType":"VariableDeclaration","scope":2242,"src":"10097:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2176,"name":"address","nodeType":"ElementaryTypeName","src":"10097:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2179,"mutability":"mutable","name":"from","nameLocation":"10131:4:16","nodeType":"VariableDeclaration","scope":2242,"src":"10123:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2178,"name":"address","nodeType":"ElementaryTypeName","src":"10123:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2181,"mutability":"mutable","name":"to","nameLocation":"10153:2:16","nodeType":"VariableDeclaration","scope":2242,"src":"10145:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2180,"name":"address","nodeType":"ElementaryTypeName","src":"10145:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2184,"mutability":"mutable","name":"ids","nameLocation":"10182:3:16","nodeType":"VariableDeclaration","scope":2242,"src":"10165:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2182,"name":"uint256","nodeType":"ElementaryTypeName","src":"10165:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2183,"nodeType":"ArrayTypeName","src":"10165:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2187,"mutability":"mutable","name":"amounts","nameLocation":"10212:7:16","nodeType":"VariableDeclaration","scope":2242,"src":"10195:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2185,"name":"uint256","nodeType":"ElementaryTypeName","src":"10195:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2186,"nodeType":"ArrayTypeName","src":"10195:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2189,"mutability":"mutable","name":"data","nameLocation":"10242:4:16","nodeType":"VariableDeclaration","scope":2242,"src":"10229:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2188,"name":"bytes","nodeType":"ElementaryTypeName","src":"10229:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10087:165:16"},"returnParameters":{"id":2191,"nodeType":"ParameterList","parameters":[],"src":"10261:0:16"},"scope":2243,"src":"10043:970:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2244,"src":"840:10175:16","usedErrors":[]}],"src":"31:10985:16"},"id":16},"contracts/wrapper/IMetadataService.sol":{"ast":{"absolutePath":"contracts/wrapper/IMetadataService.sol","exportedSymbols":{"IMetadataService":[2253]},"id":2254,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2245,"literals":["solidity","~","0.8",".17"],"nodeType":"PragmaDirective","src":"31:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IMetadataService","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2253,"linearizedBaseContracts":[2253],"name":"IMetadataService","nameLocation":"67:16:17","nodeType":"ContractDefinition","nodes":[{"functionSelector":"0e89341c","id":2252,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"99:3:17","nodeType":"FunctionDefinition","parameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2252,"src":"103:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2246,"name":"uint256","nodeType":"ElementaryTypeName","src":"103:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"102:9:17"},"returnParameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2252,"src":"135:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2249,"name":"string","nodeType":"ElementaryTypeName","src":"135:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"134:15:17"},"scope":2253,"src":"90:60:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2254,"src":"57:95:17","usedErrors":[]}],"src":"31:122:17"},"id":17},"contracts/wrapper/INameWrapper.sol":{"ast":{"absolutePath":"contracts/wrapper/INameWrapper.sol","exportedSymbols":{"CANNOT_BURN_FUSES":[2265],"CANNOT_CREATE_SUBDOMAIN":[2277],"CANNOT_SET_RESOLVER":[2271],"CANNOT_SET_TTL":[2274],"CANNOT_TRANSFER":[2268],"CANNOT_UNWRAP":[2262],"CAN_DO_EVERYTHING":[2295],"CAN_EXTEND_EXPIRY":[2292],"ENS":[1122],"IBaseRegistrar":[985],"IERC1155":[234],"IERC165":[890],"IERC721":[484],"IMetadataService":[2253],"INameWrapper":[2547],"IS_DOT_ETH":[2287],"PARENT_CANNOT_CONTROL":[2282],"PARENT_CONTROLLED_FUSES":[2298],"USER_SETTABLE_FUSES":[2301]},"id":2548,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2255,"literals":["solidity","~","0.8",".17"],"nodeType":"PragmaDirective","src":"31:24:18"},{"absolutePath":"contracts/registry/ENS.sol","file":"../registry/ENS.sol","id":2256,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2548,"sourceUnit":1123,"src":"57:29:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ethregistrar/IBaseRegistrar.sol","file":"../ethregistrar/IBaseRegistrar.sol","id":2257,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2548,"sourceUnit":986,"src":"87:44:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","id":2258,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2548,"sourceUnit":235,"src":"132:60:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/wrapper/IMetadataService.sol","file":"./IMetadataService.sol","id":2259,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2548,"sourceUnit":2254,"src":"193:32:18","symbolAliases":[],"unitAlias":""},{"constant":true,"id":2262,"mutability":"constant","name":"CANNOT_UNWRAP","nameLocation":"243:13:18","nodeType":"VariableDeclaration","scope":2548,"src":"227:33:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2260,"name":"uint32","nodeType":"ElementaryTypeName","src":"227:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":2261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"259:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":2265,"mutability":"constant","name":"CANNOT_BURN_FUSES","nameLocation":"278:17:18","nodeType":"VariableDeclaration","scope":2548,"src":"262:37:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2263,"name":"uint32","nodeType":"ElementaryTypeName","src":"262:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"32","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"298:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"id":2268,"mutability":"constant","name":"CANNOT_TRANSFER","nameLocation":"317:15:18","nodeType":"VariableDeclaration","scope":2548,"src":"301:35:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2266,"name":"uint32","nodeType":"ElementaryTypeName","src":"301:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"34","id":2267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"335:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"internal"},{"constant":true,"id":2271,"mutability":"constant","name":"CANNOT_SET_RESOLVER","nameLocation":"354:19:18","nodeType":"VariableDeclaration","scope":2548,"src":"338:39:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2269,"name":"uint32","nodeType":"ElementaryTypeName","src":"338:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"38","id":2270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"376:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"visibility":"internal"},{"constant":true,"id":2274,"mutability":"constant","name":"CANNOT_SET_TTL","nameLocation":"395:14:18","nodeType":"VariableDeclaration","scope":2548,"src":"379:35:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2272,"name":"uint32","nodeType":"ElementaryTypeName","src":"379:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"3136","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"412:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"visibility":"internal"},{"constant":true,"id":2277,"mutability":"constant","name":"CANNOT_CREATE_SUBDOMAIN","nameLocation":"432:23:18","nodeType":"VariableDeclaration","scope":2548,"src":"416:44:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2275,"name":"uint32","nodeType":"ElementaryTypeName","src":"416:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"3332","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"458:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"internal"},{"constant":true,"id":2282,"mutability":"constant","name":"PARENT_CANNOT_CONTROL","nameLocation":"546:21:18","nodeType":"VariableDeclaration","scope":2548,"src":"530:47:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2278,"name":"uint32","nodeType":"ElementaryTypeName","src":"530:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":2281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"570:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"575:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"570:7:18","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"visibility":"internal"},{"constant":true,"id":2287,"mutability":"constant","name":"IS_DOT_ETH","nameLocation":"595:10:18","nodeType":"VariableDeclaration","scope":2548,"src":"579:36:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2283,"name":"uint32","nodeType":"ElementaryTypeName","src":"579:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"commonType":{"typeIdentifier":"t_rational_131072_by_1","typeString":"int_const 131072"},"id":2286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"608:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3137","id":2285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"613:2:18","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"17"},"src":"608:7:18","typeDescriptions":{"typeIdentifier":"t_rational_131072_by_1","typeString":"int_const 131072"}},"visibility":"internal"},{"constant":true,"id":2292,"mutability":"constant","name":"CAN_EXTEND_EXPIRY","nameLocation":"633:17:18","nodeType":"VariableDeclaration","scope":2548,"src":"617:43:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2288,"name":"uint32","nodeType":"ElementaryTypeName","src":"617:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"commonType":{"typeIdentifier":"t_rational_262144_by_1","typeString":"int_const 262144"},"id":2291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"653:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3138","id":2290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"658:2:18","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"653:7:18","typeDescriptions":{"typeIdentifier":"t_rational_262144_by_1","typeString":"int_const 262144"}},"visibility":"internal"},{"constant":true,"id":2295,"mutability":"constant","name":"CAN_DO_EVERYTHING","nameLocation":"678:17:18","nodeType":"VariableDeclaration","scope":2548,"src":"662:37:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2293,"name":"uint32","nodeType":"ElementaryTypeName","src":"662:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"30","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"698:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":2298,"mutability":"constant","name":"PARENT_CONTROLLED_FUSES","nameLocation":"717:23:18","nodeType":"VariableDeclaration","scope":2548,"src":"701:52:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2296,"name":"uint32","nodeType":"ElementaryTypeName","src":"701:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"30784646464630303030","id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"743:10:18","typeDescriptions":{"typeIdentifier":"t_rational_4294901760_by_1","typeString":"int_const 4294901760"},"value":"0xFFFF0000"},"visibility":"internal"},{"constant":true,"id":2301,"mutability":"constant","name":"USER_SETTABLE_FUSES","nameLocation":"806:19:18","nodeType":"VariableDeclaration","scope":2548,"src":"790:48:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2299,"name":"uint32","nodeType":"ElementaryTypeName","src":"790:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"30784646464446464646","id":2300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"828:10:18","typeDescriptions":{"typeIdentifier":"t_rational_4294836223_by_1","typeString":"int_const 4294836223"},"value":"0xFFFDFFFF"},"visibility":"internal"},{"abstract":false,"baseContracts":[{"baseName":{"id":2302,"name":"IERC1155","nameLocations":["867:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":234,"src":"867:8:18"},"id":2303,"nodeType":"InheritanceSpecifier","src":"867:8:18"}],"canonicalName":"INameWrapper","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2547,"linearizedBaseContracts":[2547,234,890],"name":"INameWrapper","nameLocation":"851:12:18","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"8ce7013e8abebc55c3890a68f5a27c67c3f7efa64e584de5fb22363c606fd340","id":2315,"name":"NameWrapped","nameLocation":"888:11:18","nodeType":"EventDefinition","parameters":{"id":2314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"indexed":true,"mutability":"mutable","name":"node","nameLocation":"925:4:18","nodeType":"VariableDeclaration","scope":2315,"src":"909:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2304,"name":"bytes32","nodeType":"ElementaryTypeName","src":"909:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2307,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"945:4:18","nodeType":"VariableDeclaration","scope":2315,"src":"939:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2306,"name":"bytes","nodeType":"ElementaryTypeName","src":"939:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2309,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"967:5:18","nodeType":"VariableDeclaration","scope":2315,"src":"959:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2308,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2311,"indexed":false,"mutability":"mutable","name":"fuses","nameLocation":"989:5:18","nodeType":"VariableDeclaration","scope":2315,"src":"982:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2310,"name":"uint32","nodeType":"ElementaryTypeName","src":"982:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2313,"indexed":false,"mutability":"mutable","name":"expiry","nameLocation":"1011:6:18","nodeType":"VariableDeclaration","scope":2315,"src":"1004:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2312,"name":"uint64","nodeType":"ElementaryTypeName","src":"1004:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"899:124:18"},"src":"882:142:18"},{"anonymous":false,"eventSelector":"ee2ba1195c65bcf218a83d874335c6bf9d9067b4c672f3c3bf16cf40de7586c4","id":2321,"name":"NameUnwrapped","nameLocation":"1036:13:18","nodeType":"EventDefinition","parameters":{"id":2320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2317,"indexed":true,"mutability":"mutable","name":"node","nameLocation":"1066:4:18","nodeType":"VariableDeclaration","scope":2321,"src":"1050:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1050:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2319,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"1080:5:18","nodeType":"VariableDeclaration","scope":2321,"src":"1072:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2318,"name":"address","nodeType":"ElementaryTypeName","src":"1072:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1049:37:18"},"src":"1030:57:18"},{"anonymous":false,"eventSelector":"39873f00c80f4f94b7bd1594aebcf650f003545b74824d57ddf4939e3ff3a34b","id":2327,"name":"FusesSet","nameLocation":"1099:8:18","nodeType":"EventDefinition","parameters":{"id":2326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2323,"indexed":true,"mutability":"mutable","name":"node","nameLocation":"1124:4:18","nodeType":"VariableDeclaration","scope":2327,"src":"1108:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1108:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2325,"indexed":false,"mutability":"mutable","name":"fuses","nameLocation":"1137:5:18","nodeType":"VariableDeclaration","scope":2327,"src":"1130:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2324,"name":"uint32","nodeType":"ElementaryTypeName","src":"1130:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1107:36:18"},"src":"1093:51:18"},{"anonymous":false,"eventSelector":"f675815a0817338f93a7da433f6bd5f5542f1029b11b455191ac96c7f6a9b132","id":2333,"name":"ExpiryExtended","nameLocation":"1155:14:18","nodeType":"EventDefinition","parameters":{"id":2332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"indexed":true,"mutability":"mutable","name":"node","nameLocation":"1186:4:18","nodeType":"VariableDeclaration","scope":2333,"src":"1170:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1170:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2331,"indexed":false,"mutability":"mutable","name":"expiry","nameLocation":"1199:6:18","nodeType":"VariableDeclaration","scope":2333,"src":"1192:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2330,"name":"uint64","nodeType":"ElementaryTypeName","src":"1192:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1169:37:18"},"src":"1149:58:18"},{"functionSelector":"3f15457f","id":2339,"implemented":false,"kind":"function","modifiers":[],"name":"ens","nameLocation":"1222:3:18","nodeType":"FunctionDefinition","parameters":{"id":2334,"nodeType":"ParameterList","parameters":[],"src":"1225:2:18"},"returnParameters":{"id":2338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2339,"src":"1251:3:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"},"typeName":{"id":2336,"nodeType":"UserDefinedTypeName","pathNode":{"id":2335,"name":"ENS","nameLocations":["1251:3:18"],"nodeType":"IdentifierPath","referencedDeclaration":1122,"src":"1251:3:18"},"referencedDeclaration":1122,"src":"1251:3:18","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"}},"visibility":"internal"}],"src":"1250:5:18"},"scope":2547,"src":"1213:43:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"2b20e397","id":2345,"implemented":false,"kind":"function","modifiers":[],"name":"registrar","nameLocation":"1271:9:18","nodeType":"FunctionDefinition","parameters":{"id":2340,"nodeType":"ParameterList","parameters":[],"src":"1280:2:18"},"returnParameters":{"id":2344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2345,"src":"1306:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaseRegistrar_$985","typeString":"contract IBaseRegistrar"},"typeName":{"id":2342,"nodeType":"UserDefinedTypeName","pathNode":{"id":2341,"name":"IBaseRegistrar","nameLocations":["1306:14:18"],"nodeType":"IdentifierPath","referencedDeclaration":985,"src":"1306:14:18"},"referencedDeclaration":985,"src":"1306:14:18","typeDescriptions":{"typeIdentifier":"t_contract$_IBaseRegistrar_$985","typeString":"contract IBaseRegistrar"}},"visibility":"internal"}],"src":"1305:16:18"},"scope":2547,"src":"1262:60:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"53095467","id":2351,"implemented":false,"kind":"function","modifiers":[],"name":"metadataService","nameLocation":"1337:15:18","nodeType":"FunctionDefinition","parameters":{"id":2346,"nodeType":"ParameterList","parameters":[],"src":"1352:2:18"},"returnParameters":{"id":2350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2351,"src":"1378:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IMetadataService_$2253","typeString":"contract IMetadataService"},"typeName":{"id":2348,"nodeType":"UserDefinedTypeName","pathNode":{"id":2347,"name":"IMetadataService","nameLocations":["1378:16:18"],"nodeType":"IdentifierPath","referencedDeclaration":2253,"src":"1378:16:18"},"referencedDeclaration":2253,"src":"1378:16:18","typeDescriptions":{"typeIdentifier":"t_contract$_IMetadataService_$2253","typeString":"contract IMetadataService"}},"visibility":"internal"}],"src":"1377:18:18"},"scope":2547,"src":"1328:68:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"20c38e2b","id":2358,"implemented":false,"kind":"function","modifiers":[],"name":"names","nameLocation":"1411:5:18","nodeType":"FunctionDefinition","parameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2358,"src":"1417:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2352,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1417:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1416:9:18"},"returnParameters":{"id":2357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2358,"src":"1449:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2355,"name":"bytes","nodeType":"ElementaryTypeName","src":"1449:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1448:14:18"},"scope":2547,"src":"1402:61:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"eb8ae530","id":2367,"implemented":false,"kind":"function","modifiers":[],"name":"wrap","nameLocation":"1478:4:18","nodeType":"FunctionDefinition","parameters":{"id":2365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2360,"mutability":"mutable","name":"name","nameLocation":"1507:4:18","nodeType":"VariableDeclaration","scope":2367,"src":"1492:19:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2359,"name":"bytes","nodeType":"ElementaryTypeName","src":"1492:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2362,"mutability":"mutable","name":"wrappedOwner","nameLocation":"1529:12:18","nodeType":"VariableDeclaration","scope":2367,"src":"1521:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2361,"name":"address","nodeType":"ElementaryTypeName","src":"1521:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2364,"mutability":"mutable","name":"resolver","nameLocation":"1559:8:18","nodeType":"VariableDeclaration","scope":2367,"src":"1551:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2363,"name":"address","nodeType":"ElementaryTypeName","src":"1551:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1482:91:18"},"returnParameters":{"id":2366,"nodeType":"ParameterList","parameters":[],"src":"1582:0:18"},"scope":2547,"src":"1469:114:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8cf8b41e","id":2378,"implemented":false,"kind":"function","modifiers":[],"name":"wrapETH2LD","nameLocation":"1598:10:18","nodeType":"FunctionDefinition","parameters":{"id":2376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"label","nameLocation":"1634:5:18","nodeType":"VariableDeclaration","scope":2378,"src":"1618:21:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2368,"name":"string","nodeType":"ElementaryTypeName","src":"1618:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2371,"mutability":"mutable","name":"wrappedOwner","nameLocation":"1657:12:18","nodeType":"VariableDeclaration","scope":2378,"src":"1649:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2370,"name":"address","nodeType":"ElementaryTypeName","src":"1649:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2373,"mutability":"mutable","name":"ownerControlledFuses","nameLocation":"1686:20:18","nodeType":"VariableDeclaration","scope":2378,"src":"1679:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2372,"name":"uint16","nodeType":"ElementaryTypeName","src":"1679:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2375,"mutability":"mutable","name":"resolver","nameLocation":"1724:8:18","nodeType":"VariableDeclaration","scope":2378,"src":"1716:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2374,"name":"address","nodeType":"ElementaryTypeName","src":"1716:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1608:130:18"},"returnParameters":{"id":2377,"nodeType":"ParameterList","parameters":[],"src":"1747:0:18"},"scope":2547,"src":"1589:159:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a4014982","id":2393,"implemented":false,"kind":"function","modifiers":[],"name":"registerAndWrapETH2LD","nameLocation":"1763:21:18","nodeType":"FunctionDefinition","parameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2380,"mutability":"mutable","name":"label","nameLocation":"1810:5:18","nodeType":"VariableDeclaration","scope":2393,"src":"1794:21:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2379,"name":"string","nodeType":"ElementaryTypeName","src":"1794:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2382,"mutability":"mutable","name":"wrappedOwner","nameLocation":"1833:12:18","nodeType":"VariableDeclaration","scope":2393,"src":"1825:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2381,"name":"address","nodeType":"ElementaryTypeName","src":"1825:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2384,"mutability":"mutable","name":"duration","nameLocation":"1863:8:18","nodeType":"VariableDeclaration","scope":2393,"src":"1855:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2383,"name":"uint256","nodeType":"ElementaryTypeName","src":"1855:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2386,"mutability":"mutable","name":"resolver","nameLocation":"1889:8:18","nodeType":"VariableDeclaration","scope":2393,"src":"1881:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2385,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2388,"mutability":"mutable","name":"ownerControlledFuses","nameLocation":"1914:20:18","nodeType":"VariableDeclaration","scope":2393,"src":"1907:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2387,"name":"uint16","nodeType":"ElementaryTypeName","src":"1907:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1784:156:18"},"returnParameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"registrarExpiry","nameLocation":"1967:15:18","nodeType":"VariableDeclaration","scope":2393,"src":"1959:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1959:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1958:25:18"},"scope":2547,"src":"1754:230:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c475abff","id":2402,"implemented":false,"kind":"function","modifiers":[],"name":"renew","nameLocation":"1999:5:18","nodeType":"FunctionDefinition","parameters":{"id":2398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2395,"mutability":"mutable","name":"labelHash","nameLocation":"2013:9:18","nodeType":"VariableDeclaration","scope":2402,"src":"2005:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2394,"name":"uint256","nodeType":"ElementaryTypeName","src":"2005:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2397,"mutability":"mutable","name":"duration","nameLocation":"2032:8:18","nodeType":"VariableDeclaration","scope":2402,"src":"2024:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"2024:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2004:37:18"},"returnParameters":{"id":2401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2400,"mutability":"mutable","name":"expires","nameLocation":"2084:7:18","nodeType":"VariableDeclaration","scope":2402,"src":"2076:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2399,"name":"uint256","nodeType":"ElementaryTypeName","src":"2076:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2075:17:18"},"scope":2547,"src":"1990:103:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d8c9921a","id":2411,"implemented":false,"kind":"function","modifiers":[],"name":"unwrap","nameLocation":"2108:6:18","nodeType":"FunctionDefinition","parameters":{"id":2409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2404,"mutability":"mutable","name":"node","nameLocation":"2132:4:18","nodeType":"VariableDeclaration","scope":2411,"src":"2124:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2403,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2124:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2406,"mutability":"mutable","name":"label","nameLocation":"2154:5:18","nodeType":"VariableDeclaration","scope":2411,"src":"2146:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2405,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2146:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2408,"mutability":"mutable","name":"owner","nameLocation":"2177:5:18","nodeType":"VariableDeclaration","scope":2411,"src":"2169:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2407,"name":"address","nodeType":"ElementaryTypeName","src":"2169:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2114:74:18"},"returnParameters":{"id":2410,"nodeType":"ParameterList","parameters":[],"src":"2197:0:18"},"scope":2547,"src":"2099:99:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8b4dfa75","id":2420,"implemented":false,"kind":"function","modifiers":[],"name":"unwrapETH2LD","nameLocation":"2213:12:18","nodeType":"FunctionDefinition","parameters":{"id":2418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2413,"mutability":"mutable","name":"label","nameLocation":"2243:5:18","nodeType":"VariableDeclaration","scope":2420,"src":"2235:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2235:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2415,"mutability":"mutable","name":"newRegistrant","nameLocation":"2266:13:18","nodeType":"VariableDeclaration","scope":2420,"src":"2258:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2414,"name":"address","nodeType":"ElementaryTypeName","src":"2258:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2417,"mutability":"mutable","name":"newController","nameLocation":"2297:13:18","nodeType":"VariableDeclaration","scope":2420,"src":"2289:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2416,"name":"address","nodeType":"ElementaryTypeName","src":"2289:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2225:91:18"},"returnParameters":{"id":2419,"nodeType":"ParameterList","parameters":[],"src":"2325:0:18"},"scope":2547,"src":"2204:122:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"402906fc","id":2429,"implemented":false,"kind":"function","modifiers":[],"name":"setFuses","nameLocation":"2341:8:18","nodeType":"FunctionDefinition","parameters":{"id":2425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2422,"mutability":"mutable","name":"node","nameLocation":"2358:4:18","nodeType":"VariableDeclaration","scope":2429,"src":"2350:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2421,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2350:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2424,"mutability":"mutable","name":"ownerControlledFuses","nameLocation":"2371:20:18","nodeType":"VariableDeclaration","scope":2429,"src":"2364:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2423,"name":"uint16","nodeType":"ElementaryTypeName","src":"2364:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"2349:43:18"},"returnParameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2427,"mutability":"mutable","name":"newFuses","nameLocation":"2434:8:18","nodeType":"VariableDeclaration","scope":2429,"src":"2427:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2426,"name":"uint32","nodeType":"ElementaryTypeName","src":"2427:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2426:17:18"},"scope":2547,"src":"2332:112:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"33c69ea9","id":2440,"implemented":false,"kind":"function","modifiers":[],"name":"setChildFuses","nameLocation":"2459:13:18","nodeType":"FunctionDefinition","parameters":{"id":2438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"parentNode","nameLocation":"2490:10:18","nodeType":"VariableDeclaration","scope":2440,"src":"2482:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2430,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2482:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2433,"mutability":"mutable","name":"labelhash","nameLocation":"2518:9:18","nodeType":"VariableDeclaration","scope":2440,"src":"2510:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2432,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2510:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2435,"mutability":"mutable","name":"fuses","nameLocation":"2544:5:18","nodeType":"VariableDeclaration","scope":2440,"src":"2537:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2434,"name":"uint32","nodeType":"ElementaryTypeName","src":"2537:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2437,"mutability":"mutable","name":"expiry","nameLocation":"2566:6:18","nodeType":"VariableDeclaration","scope":2440,"src":"2559:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2436,"name":"uint64","nodeType":"ElementaryTypeName","src":"2559:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2472:106:18"},"returnParameters":{"id":2439,"nodeType":"ParameterList","parameters":[],"src":"2587:0:18"},"scope":2547,"src":"2450:138:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"24c1af44","id":2459,"implemented":false,"kind":"function","modifiers":[],"name":"setSubnodeRecord","nameLocation":"2603:16:18","nodeType":"FunctionDefinition","parameters":{"id":2455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2442,"mutability":"mutable","name":"node","nameLocation":"2637:4:18","nodeType":"VariableDeclaration","scope":2459,"src":"2629:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2629:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2444,"mutability":"mutable","name":"label","nameLocation":"2667:5:18","nodeType":"VariableDeclaration","scope":2459,"src":"2651:21:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2443,"name":"string","nodeType":"ElementaryTypeName","src":"2651:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2446,"mutability":"mutable","name":"owner","nameLocation":"2690:5:18","nodeType":"VariableDeclaration","scope":2459,"src":"2682:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2445,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2448,"mutability":"mutable","name":"resolver","nameLocation":"2713:8:18","nodeType":"VariableDeclaration","scope":2459,"src":"2705:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2447,"name":"address","nodeType":"ElementaryTypeName","src":"2705:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2450,"mutability":"mutable","name":"ttl","nameLocation":"2738:3:18","nodeType":"VariableDeclaration","scope":2459,"src":"2731:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2449,"name":"uint64","nodeType":"ElementaryTypeName","src":"2731:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2452,"mutability":"mutable","name":"fuses","nameLocation":"2758:5:18","nodeType":"VariableDeclaration","scope":2459,"src":"2751:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2451,"name":"uint32","nodeType":"ElementaryTypeName","src":"2751:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2454,"mutability":"mutable","name":"expiry","nameLocation":"2780:6:18","nodeType":"VariableDeclaration","scope":2459,"src":"2773:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2453,"name":"uint64","nodeType":"ElementaryTypeName","src":"2773:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2619:173:18"},"returnParameters":{"id":2458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2459,"src":"2811:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2811:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2810:9:18"},"scope":2547,"src":"2594:226:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"cf408823","id":2470,"implemented":false,"kind":"function","modifiers":[],"name":"setRecord","nameLocation":"2835:9:18","nodeType":"FunctionDefinition","parameters":{"id":2468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"node","nameLocation":"2862:4:18","nodeType":"VariableDeclaration","scope":2470,"src":"2854:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2854:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"owner","nameLocation":"2884:5:18","nodeType":"VariableDeclaration","scope":2470,"src":"2876:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2462,"name":"address","nodeType":"ElementaryTypeName","src":"2876:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2465,"mutability":"mutable","name":"resolver","nameLocation":"2907:8:18","nodeType":"VariableDeclaration","scope":2470,"src":"2899:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2464,"name":"address","nodeType":"ElementaryTypeName","src":"2899:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2467,"mutability":"mutable","name":"ttl","nameLocation":"2932:3:18","nodeType":"VariableDeclaration","scope":2470,"src":"2925:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2466,"name":"uint64","nodeType":"ElementaryTypeName","src":"2925:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2844:97:18"},"returnParameters":{"id":2469,"nodeType":"ParameterList","parameters":[],"src":"2950:0:18"},"scope":2547,"src":"2826:125:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c658e086","id":2485,"implemented":false,"kind":"function","modifiers":[],"name":"setSubnodeOwner","nameLocation":"2966:15:18","nodeType":"FunctionDefinition","parameters":{"id":2481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2472,"mutability":"mutable","name":"node","nameLocation":"2999:4:18","nodeType":"VariableDeclaration","scope":2485,"src":"2991:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2991:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2474,"mutability":"mutable","name":"label","nameLocation":"3029:5:18","nodeType":"VariableDeclaration","scope":2485,"src":"3013:21:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2473,"name":"string","nodeType":"ElementaryTypeName","src":"3013:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2476,"mutability":"mutable","name":"newOwner","nameLocation":"3052:8:18","nodeType":"VariableDeclaration","scope":2485,"src":"3044:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2475,"name":"address","nodeType":"ElementaryTypeName","src":"3044:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2478,"mutability":"mutable","name":"fuses","nameLocation":"3077:5:18","nodeType":"VariableDeclaration","scope":2485,"src":"3070:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2477,"name":"uint32","nodeType":"ElementaryTypeName","src":"3070:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2480,"mutability":"mutable","name":"expiry","nameLocation":"3099:6:18","nodeType":"VariableDeclaration","scope":2485,"src":"3092:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2479,"name":"uint64","nodeType":"ElementaryTypeName","src":"3092:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2981:130:18"},"returnParameters":{"id":2484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2485,"src":"3130:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3130:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3129:9:18"},"scope":2547,"src":"2957:182:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6e5d6ad2","id":2496,"implemented":false,"kind":"function","modifiers":[],"name":"extendExpiry","nameLocation":"3154:12:18","nodeType":"FunctionDefinition","parameters":{"id":2492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2487,"mutability":"mutable","name":"node","nameLocation":"3184:4:18","nodeType":"VariableDeclaration","scope":2496,"src":"3176:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3176:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2489,"mutability":"mutable","name":"labelhash","nameLocation":"3206:9:18","nodeType":"VariableDeclaration","scope":2496,"src":"3198:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3198:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2491,"mutability":"mutable","name":"expiry","nameLocation":"3232:6:18","nodeType":"VariableDeclaration","scope":2496,"src":"3225:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2490,"name":"uint64","nodeType":"ElementaryTypeName","src":"3225:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3166:78:18"},"returnParameters":{"id":2495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2496,"src":"3263:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2493,"name":"uint64","nodeType":"ElementaryTypeName","src":"3263:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3262:8:18"},"scope":2547,"src":"3145:126:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"41415eab","id":2505,"implemented":false,"kind":"function","modifiers":[],"name":"canModifyName","nameLocation":"3286:13:18","nodeType":"FunctionDefinition","parameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"node","nameLocation":"3308:4:18","nodeType":"VariableDeclaration","scope":2505,"src":"3300:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3300:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2500,"mutability":"mutable","name":"addr","nameLocation":"3322:4:18","nodeType":"VariableDeclaration","scope":2505,"src":"3314:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2499,"name":"address","nodeType":"ElementaryTypeName","src":"3314:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3299:28:18"},"returnParameters":{"id":2504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2505,"src":"3346:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2502,"name":"bool","nodeType":"ElementaryTypeName","src":"3346:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3345:6:18"},"scope":2547,"src":"3277:75:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1896f70a","id":2512,"implemented":false,"kind":"function","modifiers":[],"name":"setResolver","nameLocation":"3367:11:18","nodeType":"FunctionDefinition","parameters":{"id":2510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"node","nameLocation":"3387:4:18","nodeType":"VariableDeclaration","scope":2512,"src":"3379:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2506,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3379:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2509,"mutability":"mutable","name":"resolver","nameLocation":"3401:8:18","nodeType":"VariableDeclaration","scope":2512,"src":"3393:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2508,"name":"address","nodeType":"ElementaryTypeName","src":"3393:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3378:32:18"},"returnParameters":{"id":2511,"nodeType":"ParameterList","parameters":[],"src":"3419:0:18"},"scope":2547,"src":"3358:62:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"14ab9038","id":2519,"implemented":false,"kind":"function","modifiers":[],"name":"setTTL","nameLocation":"3435:6:18","nodeType":"FunctionDefinition","parameters":{"id":2517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2514,"mutability":"mutable","name":"node","nameLocation":"3450:4:18","nodeType":"VariableDeclaration","scope":2519,"src":"3442:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3442:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2516,"mutability":"mutable","name":"ttl","nameLocation":"3463:3:18","nodeType":"VariableDeclaration","scope":2519,"src":"3456:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2515,"name":"uint64","nodeType":"ElementaryTypeName","src":"3456:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3441:26:18"},"returnParameters":{"id":2518,"nodeType":"ParameterList","parameters":[],"src":"3476:0:18"},"scope":2547,"src":"3426:51:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6352211e","id":2526,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"3492:7:18","nodeType":"FunctionDefinition","parameters":{"id":2522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"id","nameLocation":"3508:2:18","nodeType":"VariableDeclaration","scope":2526,"src":"3500:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2520,"name":"uint256","nodeType":"ElementaryTypeName","src":"3500:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3499:12:18"},"returnParameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2524,"mutability":"mutable","name":"owner","nameLocation":"3538:5:18","nodeType":"VariableDeclaration","scope":2526,"src":"3530:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2523,"name":"address","nodeType":"ElementaryTypeName","src":"3530:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3529:15:18"},"scope":2547,"src":"3483:62:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0178fe3f","id":2537,"implemented":false,"kind":"function","modifiers":[],"name":"getData","nameLocation":"3560:7:18","nodeType":"FunctionDefinition","parameters":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2528,"mutability":"mutable","name":"id","nameLocation":"3576:2:18","nodeType":"VariableDeclaration","scope":2537,"src":"3568:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2527,"name":"uint256","nodeType":"ElementaryTypeName","src":"3568:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3567:12:18"},"returnParameters":{"id":2536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2537,"src":"3627:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2530,"name":"address","nodeType":"ElementaryTypeName","src":"3627:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2537,"src":"3648:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2532,"name":"uint32","nodeType":"ElementaryTypeName","src":"3648:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2537,"src":"3668:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2534,"name":"uint64","nodeType":"ElementaryTypeName","src":"3668:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3613:71:18"},"scope":2547,"src":"3551:134:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"adf4960a","id":2546,"implemented":false,"kind":"function","modifiers":[],"name":"allFusesBurned","nameLocation":"3700:14:18","nodeType":"FunctionDefinition","parameters":{"id":2542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2539,"mutability":"mutable","name":"node","nameLocation":"3723:4:18","nodeType":"VariableDeclaration","scope":2546,"src":"3715:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2538,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3715:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2541,"mutability":"mutable","name":"fuseMask","nameLocation":"3736:8:18","nodeType":"VariableDeclaration","scope":2546,"src":"3729:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2540,"name":"uint32","nodeType":"ElementaryTypeName","src":"3729:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3714:31:18"},"returnParameters":{"id":2545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2546,"src":"3793:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2543,"name":"bool","nodeType":"ElementaryTypeName","src":"3793:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3792:6:18"},"scope":2547,"src":"3691:108:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2548,"src":"841:2960:18","usedErrors":[]}],"src":"31:3771:18"},"id":18},"contracts/wrapper/INameWrapperUpgrade.sol":{"ast":{"absolutePath":"contracts/wrapper/INameWrapperUpgrade.sol","exportedSymbols":{"INameWrapperUpgrade":[2580]},"id":2581,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2549,"literals":["solidity","~","0.8",".17"],"nodeType":"PragmaDirective","src":"31:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"INameWrapperUpgrade","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2580,"linearizedBaseContracts":[2580],"name":"INameWrapperUpgrade","nameLocation":"67:19:19","nodeType":"ContractDefinition","nodes":[{"functionSelector":"24c1af44","id":2566,"implemented":false,"kind":"function","modifiers":[],"name":"setSubnodeRecord","nameLocation":"102:16:19","nodeType":"FunctionDefinition","parameters":{"id":2564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2551,"mutability":"mutable","name":"parentNode","nameLocation":"136:10:19","nodeType":"VariableDeclaration","scope":2566,"src":"128:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"128:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2553,"mutability":"mutable","name":"label","nameLocation":"172:5:19","nodeType":"VariableDeclaration","scope":2566,"src":"156:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2552,"name":"string","nodeType":"ElementaryTypeName","src":"156:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2555,"mutability":"mutable","name":"owner","nameLocation":"195:5:19","nodeType":"VariableDeclaration","scope":2566,"src":"187:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2554,"name":"address","nodeType":"ElementaryTypeName","src":"187:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2557,"mutability":"mutable","name":"resolver","nameLocation":"218:8:19","nodeType":"VariableDeclaration","scope":2566,"src":"210:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2556,"name":"address","nodeType":"ElementaryTypeName","src":"210:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2559,"mutability":"mutable","name":"ttl","nameLocation":"243:3:19","nodeType":"VariableDeclaration","scope":2566,"src":"236:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2558,"name":"uint64","nodeType":"ElementaryTypeName","src":"236:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2561,"mutability":"mutable","name":"fuses","nameLocation":"263:5:19","nodeType":"VariableDeclaration","scope":2566,"src":"256:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2560,"name":"uint32","nodeType":"ElementaryTypeName","src":"256:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2563,"mutability":"mutable","name":"expiry","nameLocation":"285:6:19","nodeType":"VariableDeclaration","scope":2566,"src":"278:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2562,"name":"uint64","nodeType":"ElementaryTypeName","src":"278:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"118:179:19"},"returnParameters":{"id":2565,"nodeType":"ParameterList","parameters":[],"src":"306:0:19"},"scope":2580,"src":"93:214:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f9547a9e","id":2579,"implemented":false,"kind":"function","modifiers":[],"name":"wrapETH2LD","nameLocation":"322:10:19","nodeType":"FunctionDefinition","parameters":{"id":2577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2568,"mutability":"mutable","name":"label","nameLocation":"358:5:19","nodeType":"VariableDeclaration","scope":2579,"src":"342:21:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2567,"name":"string","nodeType":"ElementaryTypeName","src":"342:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2570,"mutability":"mutable","name":"wrappedOwner","nameLocation":"381:12:19","nodeType":"VariableDeclaration","scope":2579,"src":"373:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2569,"name":"address","nodeType":"ElementaryTypeName","src":"373:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2572,"mutability":"mutable","name":"fuses","nameLocation":"410:5:19","nodeType":"VariableDeclaration","scope":2579,"src":"403:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2571,"name":"uint32","nodeType":"ElementaryTypeName","src":"403:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2574,"mutability":"mutable","name":"expiry","nameLocation":"432:6:19","nodeType":"VariableDeclaration","scope":2579,"src":"425:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2573,"name":"uint64","nodeType":"ElementaryTypeName","src":"425:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2576,"mutability":"mutable","name":"resolver","nameLocation":"456:8:19","nodeType":"VariableDeclaration","scope":2579,"src":"448:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2575,"name":"address","nodeType":"ElementaryTypeName","src":"448:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"332:138:19"},"returnParameters":{"id":2578,"nodeType":"ParameterList","parameters":[],"src":"479:0:19"},"scope":2580,"src":"313:167:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2581,"src":"57:425:19","usedErrors":[]}],"src":"31:452:19"},"id":19},"contracts/wrapper/NameWrapper.sol":{"ast":{"absolutePath":"contracts/wrapper/NameWrapper.sol","exportedSymbols":{"BytesUtils":[1294],"CANNOT_BURN_FUSES":[2265],"CANNOT_CREATE_SUBDOMAIN":[2277],"CANNOT_SET_RESOLVER":[2271],"CANNOT_SET_TTL":[2274],"CANNOT_TRANSFER":[2268],"CANNOT_UNWRAP":[2262],"CAN_DO_EVERYTHING":[2295],"CAN_EXTEND_EXPIRY":[2292],"CannotUpgrade":[2645],"Controllable":[1343],"ENS":[1122],"ERC1155Fuse":[2243],"ERC20Recoverable":[1151],"IBaseRegistrar":[985],"IERC165":[890],"IERC721Receiver":[502],"IMetadataService":[2253],"INameWrapper":[2547],"INameWrapperUpgrade":[2580],"IS_DOT_ETH":[2287],"IncompatibleParent":[2625],"IncorrectTargetOwner":[2643],"IncorrectTokenType":[2627],"LabelMismatch":[2633],"LabelTooLong":[2639],"LabelTooShort":[2635],"NameIsNotWrapped":[2651],"NameIsStillExpired":[2653],"NameWrapper":[5349],"OperationProhibited":[2649],"Ownable":[112],"PARENT_CANNOT_CONTROL":[2282],"PARENT_CONTROLLED_FUSES":[2298],"USER_SETTABLE_FUSES":[2301],"Unauthorised":[2623]},"id":5350,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2582,"literals":["solidity","~","0.8",".17"],"nodeType":"PragmaDirective","src":"31:24:20"},{"absolutePath":"contracts/wrapper/ERC1155Fuse.sol","file":"./ERC1155Fuse.sol","id":2585,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5350,"sourceUnit":2244,"src":"57:55:20","symbolAliases":[{"foreign":{"id":2583,"name":"ERC1155Fuse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"65:11:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2584,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"78:7:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/wrapper/Controllable.sol","file":"./Controllable.sol","id":2587,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5350,"sourceUnit":1344,"src":"113:48:20","symbolAliases":[{"foreign":{"id":2586,"name":"Controllable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"121:12:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/wrapper/INameWrapper.sol","file":"./INameWrapper.sol","id":2601,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5350,"sourceUnit":2548,"src":"162:280:20","symbolAliases":[{"foreign":{"id":2588,"name":"INameWrapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"170:12:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2589,"name":"CANNOT_UNWRAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"184:13:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2590,"name":"CANNOT_BURN_FUSES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"199:17:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2591,"name":"CANNOT_TRANSFER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"218:15:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2592,"name":"CANNOT_SET_RESOLVER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"235:19:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2593,"name":"CANNOT_SET_TTL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"256:14:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2594,"name":"CANNOT_CREATE_SUBDOMAIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"272:23:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2595,"name":"PARENT_CANNOT_CONTROL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"297:21:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2596,"name":"CAN_DO_EVERYTHING","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"320:17:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2597,"name":"IS_DOT_ETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"339:10:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2598,"name":"CAN_EXTEND_EXPIRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"351:17:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2599,"name":"PARENT_CONTROLLED_FUSES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"370:23:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2600,"name":"USER_SETTABLE_FUSES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"395:19:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/wrapper/INameWrapperUpgrade.sol","file":"./INameWrapperUpgrade.sol","id":2603,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5350,"sourceUnit":2581,"src":"443:62:20","symbolAliases":[{"foreign":{"id":2602,"name":"INameWrapperUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"451:19:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/wrapper/IMetadataService.sol","file":"./IMetadataService.sol","id":2605,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5350,"sourceUnit":2254,"src":"506:56:20","symbolAliases":[{"foreign":{"id":2604,"name":"IMetadataService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"514:16:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/registry/ENS.sol","file":"../registry/ENS.sol","id":2607,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5350,"sourceUnit":1123,"src":"563:40:20","symbolAliases":[{"foreign":{"id":2606,"name":"ENS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"571:3:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/ethregistrar/IBaseRegistrar.sol","file":"../ethregistrar/IBaseRegistrar.sol","id":2609,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5350,"sourceUnit":986,"src":"604:66:20","symbolAliases":[{"foreign":{"id":2608,"name":"IBaseRegistrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"612:14:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","id":2611,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5350,"sourceUnit":503,"src":"671:89:20","symbolAliases":[{"foreign":{"id":2610,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"679:15:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2613,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5350,"sourceUnit":113,"src":"761:67:20","symbolAliases":[{"foreign":{"id":2612,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"769:7:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/wrapper/BytesUtils.sol","file":"./BytesUtils.sol","id":2615,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5350,"sourceUnit":1295,"src":"829:44:20","symbolAliases":[{"foreign":{"id":2614,"name":"BytesUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"837:10:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/utils/ERC20Recoverable.sol","file":"../utils/ERC20Recoverable.sol","id":2617,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5350,"sourceUnit":1152,"src":"874:63:20","symbolAliases":[{"foreign":{"id":2616,"name":"ERC20Recoverable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"882:16:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"errorSelector":"b455aae8","id":2623,"name":"Unauthorised","nameLocation":"945:12:20","nodeType":"ErrorDefinition","parameters":{"id":2622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2619,"mutability":"mutable","name":"node","nameLocation":"966:4:20","nodeType":"VariableDeclaration","scope":2623,"src":"958:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"958:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2621,"mutability":"mutable","name":"addr","nameLocation":"980:4:20","nodeType":"VariableDeclaration","scope":2623,"src":"972:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2620,"name":"address","nodeType":"ElementaryTypeName","src":"972:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"957:28:20"},"src":"939:47:20"},{"errorSelector":"615a4703","id":2625,"name":"IncompatibleParent","nameLocation":"993:18:20","nodeType":"ErrorDefinition","parameters":{"id":2624,"nodeType":"ParameterList","parameters":[],"src":"1011:2:20"},"src":"987:27:20"},{"errorSelector":"1931a538","id":2627,"name":"IncorrectTokenType","nameLocation":"1021:18:20","nodeType":"ErrorDefinition","parameters":{"id":2626,"nodeType":"ParameterList","parameters":[],"src":"1039:2:20"},"src":"1015:27:20"},{"errorSelector":"c65c3ccc","id":2633,"name":"LabelMismatch","nameLocation":"1049:13:20","nodeType":"ErrorDefinition","parameters":{"id":2632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2629,"mutability":"mutable","name":"labelHash","nameLocation":"1071:9:20","nodeType":"VariableDeclaration","scope":2633,"src":"1063:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2628,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1063:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2631,"mutability":"mutable","name":"expectedLabelhash","nameLocation":"1090:17:20","nodeType":"VariableDeclaration","scope":2633,"src":"1082:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2630,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1082:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1062:46:20"},"src":"1043:66:20"},{"errorSelector":"280dacb6","id":2635,"name":"LabelTooShort","nameLocation":"1116:13:20","nodeType":"ErrorDefinition","parameters":{"id":2634,"nodeType":"ParameterList","parameters":[],"src":"1129:2:20"},"src":"1110:22:20"},{"errorSelector":"e3ba295f","id":2639,"name":"LabelTooLong","nameLocation":"1139:12:20","nodeType":"ErrorDefinition","parameters":{"id":2638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"label","nameLocation":"1159:5:20","nodeType":"VariableDeclaration","scope":2639,"src":"1152:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2636,"name":"string","nodeType":"ElementaryTypeName","src":"1152:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1151:14:20"},"src":"1133:33:20"},{"errorSelector":"5949361a","id":2643,"name":"IncorrectTargetOwner","nameLocation":"1173:20:20","nodeType":"ErrorDefinition","parameters":{"id":2642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2641,"mutability":"mutable","name":"owner","nameLocation":"1202:5:20","nodeType":"VariableDeclaration","scope":2643,"src":"1194:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2640,"name":"address","nodeType":"ElementaryTypeName","src":"1194:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1193:15:20"},"src":"1167:42:20"},{"errorSelector":"24c1d6d4","id":2645,"name":"CannotUpgrade","nameLocation":"1216:13:20","nodeType":"ErrorDefinition","parameters":{"id":2644,"nodeType":"ParameterList","parameters":[],"src":"1229:2:20"},"src":"1210:22:20"},{"errorSelector":"a2a72013","id":2649,"name":"OperationProhibited","nameLocation":"1239:19:20","nodeType":"ErrorDefinition","parameters":{"id":2648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2647,"mutability":"mutable","name":"node","nameLocation":"1267:4:20","nodeType":"VariableDeclaration","scope":2649,"src":"1259:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1259:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1258:14:20"},"src":"1233:40:20"},{"errorSelector":"5374b599","id":2651,"name":"NameIsNotWrapped","nameLocation":"1280:16:20","nodeType":"ErrorDefinition","parameters":{"id":2650,"nodeType":"ParameterList","parameters":[],"src":"1296:2:20"},"src":"1274:25:20"},{"errorSelector":"785fd672","id":2653,"name":"NameIsStillExpired","nameLocation":"1306:18:20","nodeType":"ErrorDefinition","parameters":{"id":2652,"nodeType":"ParameterList","parameters":[],"src":"1324:2:20"},"src":"1300:27:20"},{"abstract":false,"baseContracts":[{"baseName":{"id":2654,"name":"Ownable","nameLocations":["1357:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"1357:7:20"},"id":2655,"nodeType":"InheritanceSpecifier","src":"1357:7:20"},{"baseName":{"id":2656,"name":"ERC1155Fuse","nameLocations":["1370:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2243,"src":"1370:11:20"},"id":2657,"nodeType":"InheritanceSpecifier","src":"1370:11:20"},{"baseName":{"id":2658,"name":"INameWrapper","nameLocations":["1387:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":2547,"src":"1387:12:20"},"id":2659,"nodeType":"InheritanceSpecifier","src":"1387:12:20"},{"baseName":{"id":2660,"name":"Controllable","nameLocations":["1405:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":1343,"src":"1405:12:20"},"id":2661,"nodeType":"InheritanceSpecifier","src":"1405:12:20"},{"baseName":{"id":2662,"name":"IERC721Receiver","nameLocations":["1423:15:20"],"nodeType":"IdentifierPath","referencedDeclaration":502,"src":"1423:15:20"},"id":2663,"nodeType":"InheritanceSpecifier","src":"1423:15:20"},{"baseName":{"id":2664,"name":"ERC20Recoverable","nameLocations":["1444:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":1151,"src":"1444:16:20"},"id":2665,"nodeType":"InheritanceSpecifier","src":"1444:16:20"}],"canonicalName":"NameWrapper","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5349,"linearizedBaseContracts":[5349,1151,502,1343,2547,2243,112,854,290,234,878,890],"name":"NameWrapper","nameLocation":"1338:11:20","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2668,"libraryName":{"id":2666,"name":"BytesUtils","nameLocations":["1473:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":1294,"src":"1473:10:20"},"nodeType":"UsingForDirective","src":"1467:27:20","typeName":{"id":2667,"name":"bytes","nodeType":"ElementaryTypeName","src":"1488:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"baseFunctions":[2339],"constant":false,"functionSelector":"3f15457f","id":2672,"mutability":"immutable","name":"ens","nameLocation":"1530:3:20","nodeType":"VariableDeclaration","overrides":{"id":2671,"nodeType":"OverrideSpecifier","overrides":[],"src":"1521:8:20"},"scope":5349,"src":"1500:33:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"},"typeName":{"id":2670,"nodeType":"UserDefinedTypeName","pathNode":{"id":2669,"name":"ENS","nameLocations":["1500:3:20"],"nodeType":"IdentifierPath","referencedDeclaration":1122,"src":"1500:3:20"},"referencedDeclaration":1122,"src":"1500:3:20","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"}},"visibility":"public"},{"baseFunctions":[2345],"constant":false,"functionSelector":"2b20e397","id":2676,"mutability":"immutable","name":"registrar","nameLocation":"1580:9:20","nodeType":"VariableDeclaration","overrides":{"id":2675,"nodeType":"OverrideSpecifier","overrides":[],"src":"1571:8:20"},"scope":5349,"src":"1539:50:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaseRegistrar_$985","typeString":"contract IBaseRegistrar"},"typeName":{"id":2674,"nodeType":"UserDefinedTypeName","pathNode":{"id":2673,"name":"IBaseRegistrar","nameLocations":["1539:14:20"],"nodeType":"IdentifierPath","referencedDeclaration":985,"src":"1539:14:20"},"referencedDeclaration":985,"src":"1539:14:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaseRegistrar_$985","typeString":"contract IBaseRegistrar"}},"visibility":"public"},{"baseFunctions":[2351],"constant":false,"functionSelector":"53095467","id":2680,"mutability":"mutable","name":"metadataService","nameLocation":"1628:15:20","nodeType":"VariableDeclaration","overrides":{"id":2679,"nodeType":"OverrideSpecifier","overrides":[],"src":"1619:8:20"},"scope":5349,"src":"1595:48:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IMetadataService_$2253","typeString":"contract IMetadataService"},"typeName":{"id":2678,"nodeType":"UserDefinedTypeName","pathNode":{"id":2677,"name":"IMetadataService","nameLocations":["1595:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":2253,"src":"1595:16:20"},"referencedDeclaration":2253,"src":"1595:16:20","typeDescriptions":{"typeIdentifier":"t_contract$_IMetadataService_$2253","typeString":"contract IMetadataService"}},"visibility":"public"},{"baseFunctions":[2358],"constant":false,"functionSelector":"20c38e2b","id":2685,"mutability":"mutable","name":"names","nameLocation":"1691:5:20","nodeType":"VariableDeclaration","overrides":{"id":2684,"nodeType":"OverrideSpecifier","overrides":[],"src":"1682:8:20"},"scope":5349,"src":"1649:47:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"typeName":{"id":2683,"keyType":{"id":2681,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1657:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1649:25:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"valueType":{"id":2682,"name":"bytes","nodeType":"ElementaryTypeName","src":"1668:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"public"},{"constant":true,"functionSelector":"06fdde03","id":2688,"mutability":"constant","name":"name","nameLocation":"1725:4:20","nodeType":"VariableDeclaration","scope":5349,"src":"1702:43:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2686,"name":"string","nodeType":"ElementaryTypeName","src":"1702:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4e616d6557726170706572","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1732:13:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9e5fb40623baecd82eb99e188b55cad44919cef59b84840d0442d334650f7781","typeString":"literal_string \"NameWrapper\""},"value":"NameWrapper"},"visibility":"public"},{"constant":true,"id":2691,"mutability":"constant","name":"GRACE_PERIOD","nameLocation":"1776:12:20","nodeType":"VariableDeclaration","scope":5349,"src":"1752:46:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2689,"name":"uint64","nodeType":"ElementaryTypeName","src":"1752:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"hexValue":"3930","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1791:7:20","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_7776000_by_1","typeString":"int_const 7776000"},"value":"90"},"visibility":"private"},{"constant":true,"id":2694,"mutability":"constant","name":"ETH_NODE","nameLocation":"1829:8:20","nodeType":"VariableDeclaration","scope":5349,"src":"1804:110:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1804:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839336364656237303862373534356463363638656239323830313736313639643163333363666438656436663034363930613062636338386139336663346165","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1848:66:20","typeDescriptions":{"typeIdentifier":"t_rational_66853817334611902194238164484889819180315942402426128563245745834960013477038_by_1","typeString":"int_const 6685...(69 digits omitted)...7038"},"value":"0x93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae"},"visibility":"private"},{"constant":true,"id":2697,"mutability":"constant","name":"ETH_LABELHASH","nameLocation":"1945:13:20","nodeType":"VariableDeclaration","scope":5349,"src":"1920:115:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1920:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834663562383132373839666336303662653162336231363930386462313366633761396164663763613732363431663834643735623437303639643364376630","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1969:66:20","typeDescriptions":{"typeIdentifier":"t_rational_35894389512221139346028120028875095598761990588366713962827482865185691260912_by_1","typeString":"int_const 3589...(69 digits omitted)...0912"},"value":"0x4f5b812789fc606be1b3b16908db13fc7a9adf7ca72641f84d75b47069d3d7f0"},"visibility":"private"},{"constant":true,"id":2700,"mutability":"constant","name":"ROOT_NODE","nameLocation":"2066:9:20","nodeType":"VariableDeclaration","scope":5349,"src":"2041:111:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2698,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2041:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030","id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2086:66:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0000000000000000000000000000000000000000000000000000000000000000"},"visibility":"private"},{"constant":false,"functionSelector":"1f4e1504","id":2703,"mutability":"mutable","name":"upgradeContract","nameLocation":"2186:15:20","nodeType":"VariableDeclaration","scope":5349,"src":"2159:42:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_INameWrapperUpgrade_$2580","typeString":"contract INameWrapperUpgrade"},"typeName":{"id":2702,"nodeType":"UserDefinedTypeName","pathNode":{"id":2701,"name":"INameWrapperUpgrade","nameLocations":["2159:19:20"],"nodeType":"IdentifierPath","referencedDeclaration":2580,"src":"2159:19:20"},"referencedDeclaration":2580,"src":"2159:19:20","typeDescriptions":{"typeIdentifier":"t_contract$_INameWrapperUpgrade_$2580","typeString":"contract INameWrapperUpgrade"}},"visibility":"public"},{"constant":true,"id":2710,"mutability":"constant","name":"MAX_EXPIRY","nameLocation":"2231:10:20","nodeType":"VariableDeclaration","scope":5349,"src":"2207:53:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2704,"name":"uint64","nodeType":"ElementaryTypeName","src":"2207:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"expression":{"arguments":[{"id":2707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2249:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2706,"name":"uint64","nodeType":"ElementaryTypeName","src":"2249:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":2705,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2244:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2244:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":2709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2257:3:20","memberName":"max","nodeType":"MemberAccess","src":"2244:16:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"body":{"id":2782,"nodeType":"Block","src":"2381:606:20","statements":[{"expression":{"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2722,"name":"ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"2391:3:20","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2723,"name":"_ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"2397:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"}},"src":"2391:10:20","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"}},"id":2725,"nodeType":"ExpressionStatement","src":"2391:10:20"},{"expression":{"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2726,"name":"registrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"2411:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaseRegistrar_$985","typeString":"contract IBaseRegistrar"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2727,"name":"_registrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"2423:10:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaseRegistrar_$985","typeString":"contract IBaseRegistrar"}},"src":"2411:22:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaseRegistrar_$985","typeString":"contract IBaseRegistrar"}},"id":2729,"nodeType":"ExpressionStatement","src":"2411:22:20"},{"expression":{"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2730,"name":"metadataService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"2443:15:20","typeDescriptions":{"typeIdentifier":"t_contract$_IMetadataService_$2253","typeString":"contract IMetadataService"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2731,"name":"_metadataService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"2461:16:20","typeDescriptions":{"typeIdentifier":"t_contract$_IMetadataService_$2253","typeString":"contract IMetadataService"}},"src":"2443:34:20","typeDescriptions":{"typeIdentifier":"t_contract$_IMetadataService_$2253","typeString":"contract IMetadataService"}},"id":2733,"nodeType":"ExpressionStatement","src":"2443:34:20"},{"expression":{"arguments":[{"arguments":[{"id":2737,"name":"ETH_NODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"2611:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2603:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"2603:7:20","typeDescriptions":{}}},"id":2738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2603:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2642:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2634:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2739,"name":"address","nodeType":"ElementaryTypeName","src":"2634:7:20","typeDescriptions":{}}},"id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2634:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":2745,"name":"PARENT_CANNOT_CONTROL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"2665:21:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":2746,"name":"CANNOT_UNWRAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"2689:13:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2665:37:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":2744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2658:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2743,"name":"uint32","nodeType":"ElementaryTypeName","src":"2658:6:20","typeDescriptions":{}}},"id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2658:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2749,"name":"MAX_EXPIRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"2717:10:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2734,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[5297,1834],"referencedDeclaration":1834,"src":"2581:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint32_$_t_uint64_$returns$__$","typeString":"function (uint256,address,uint32,uint64)"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2581:156:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2751,"nodeType":"ExpressionStatement","src":"2581:156:20"},{"expression":{"arguments":[{"arguments":[{"id":2755,"name":"ROOT_NODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"2777:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2769:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2753,"name":"uint256","nodeType":"ElementaryTypeName","src":"2769:7:20","typeDescriptions":{}}},"id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2769:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2809:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2801:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2757,"name":"address","nodeType":"ElementaryTypeName","src":"2801:7:20","typeDescriptions":{}}},"id":2760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2801:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":2763,"name":"PARENT_CANNOT_CONTROL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"2832:21:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":2764,"name":"CANNOT_UNWRAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"2856:13:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2832:37:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":2762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2825:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2761,"name":"uint32","nodeType":"ElementaryTypeName","src":"2825:6:20","typeDescriptions":{}}},"id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2825:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2767,"name":"MAX_EXPIRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"2884:10:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2752,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[5297,1834],"referencedDeclaration":1834,"src":"2747:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint32_$_t_uint64_$returns$__$","typeString":"function (uint256,address,uint32,uint64)"}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:157:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2769,"nodeType":"ExpressionStatement","src":"2747:157:20"},{"expression":{"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2770,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"2914:5:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":2772,"indexExpression":{"id":2771,"name":"ROOT_NODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"2920:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:16:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"00","id":2773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2933:6:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_bc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a","typeString":"literal_string hex\"00\""},"value":"\u0000"},"src":"2914:25:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":2775,"nodeType":"ExpressionStatement","src":"2914:25:20"},{"expression":{"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2776,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"2949:5:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":2778,"indexExpression":{"id":2777,"name":"ETH_NODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"2955:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2949:15:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"0365746800","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2967:13:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c65934a88d283a635602ca15e14e8b9a9a3d150eacacca3b07f4a85f5fdbface","typeString":"literal_string hex\"0365746800\""},"value":"\u0003eth\u0000"},"src":"2949:31:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":2781,"nodeType":"ExpressionStatement","src":"2949:31:20"}]},"id":2783,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2713,"mutability":"mutable","name":"_ens","nameLocation":"2292:4:20","nodeType":"VariableDeclaration","scope":2783,"src":"2288:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"},"typeName":{"id":2712,"nodeType":"UserDefinedTypeName","pathNode":{"id":2711,"name":"ENS","nameLocations":["2288:3:20"],"nodeType":"IdentifierPath","referencedDeclaration":1122,"src":"2288:3:20"},"referencedDeclaration":1122,"src":"2288:3:20","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"}},"visibility":"internal"},{"constant":false,"id":2716,"mutability":"mutable","name":"_registrar","nameLocation":"2321:10:20","nodeType":"VariableDeclaration","scope":2783,"src":"2306:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaseRegistrar_$985","typeString":"contract IBaseRegistrar"},"typeName":{"id":2715,"nodeType":"UserDefinedTypeName","pathNode":{"id":2714,"name":"IBaseRegistrar","nameLocations":["2306:14:20"],"nodeType":"IdentifierPath","referencedDeclaration":985,"src":"2306:14:20"},"referencedDeclaration":985,"src":"2306:14:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaseRegistrar_$985","typeString":"contract IBaseRegistrar"}},"visibility":"internal"},{"constant":false,"id":2719,"mutability":"mutable","name":"_metadataService","nameLocation":"2358:16:20","nodeType":"VariableDeclaration","scope":2783,"src":"2341:33:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IMetadataService_$2253","typeString":"contract IMetadataService"},"typeName":{"id":2718,"nodeType":"UserDefinedTypeName","pathNode":{"id":2717,"name":"IMetadataService","nameLocations":["2341:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":2253,"src":"2341:16:20"},"referencedDeclaration":2253,"src":"2341:16:20","typeDescriptions":{"typeIdentifier":"t_contract$_IMetadataService_$2253","typeString":"contract IMetadataService"}},"visibility":"internal"}],"src":"2278:102:20"},"returnParameters":{"id":2721,"nodeType":"ParameterList","parameters":[],"src":"2381:0:20"},"scope":5349,"src":"2267:720:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[889,1416],"body":{"id":2812,"nodeType":"Block","src":"3150:197:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2793,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"3179:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2795,"name":"INameWrapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"3199:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_INameWrapper_$2547_$","typeString":"type(contract INameWrapper)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_INameWrapper_$2547_$","typeString":"type(contract INameWrapper)"}],"id":2794,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3194:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3194:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_INameWrapper_$2547","typeString":"type(contract INameWrapper)"}},"id":2797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3213:11:20","memberName":"interfaceId","nodeType":"MemberAccess","src":"3194:30:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3179:45:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2799,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"3240:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2801,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"3260:15:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$502_$","typeString":"type(contract IERC721Receiver)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$502_$","typeString":"type(contract IERC721Receiver)"}],"id":2800,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3255:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3255:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Receiver_$502","typeString":"type(contract IERC721Receiver)"}},"id":2803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3277:11:20","memberName":"interfaceId","nodeType":"MemberAccess","src":"3255:33:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3240:48:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3179:109:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2808,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"3328:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2806,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3304:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NameWrapper_$5349_$","typeString":"type(contract super NameWrapper)"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3310:17:20","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1416,"src":"3304:23:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3304:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3179:161:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2792,"id":2811,"nodeType":"Return","src":"3160:180:20"}]},"functionSelector":"01ffc9a7","id":2813,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3002:17:20","nodeType":"FunctionDefinition","overrides":{"id":2789,"nodeType":"OverrideSpecifier","overrides":[{"id":2787,"name":"ERC1155Fuse","nameLocations":["3101:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2243,"src":"3101:11:20"},{"id":2788,"name":"IERC165","nameLocations":["3114:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":890,"src":"3114:7:20"}],"src":"3092:30:20"},"parameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2785,"mutability":"mutable","name":"interfaceId","nameLocation":"3027:11:20","nodeType":"VariableDeclaration","scope":2813,"src":"3020:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2784,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3020:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3019:20:20"},"returnParameters":{"id":2792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2813,"src":"3140:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2790,"name":"bool","nodeType":"ElementaryTypeName","src":"3140:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3139:6:20"},"scope":5349,"src":"2993:354:20","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1385,2526],"body":{"id":2829,"nodeType":"Block","src":"3676:41:20","statements":[{"expression":{"arguments":[{"id":2826,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"3707:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2824,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3693:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NameWrapper_$5349_$","typeString":"type(contract super NameWrapper)"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3699:7:20","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1385,"src":"3693:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3693:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2823,"id":2828,"nodeType":"Return","src":"3686:24:20"}]},"documentation":{"id":2814,"nodeType":"StructuredDocumentation","src":"3377:156:20","text":" @notice Gets the owner of a name\n @param id Label as a string of the .eth domain to wrap\n @return owner The owner of the name"},"functionSelector":"6352211e","id":2830,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"3548:7:20","nodeType":"FunctionDefinition","overrides":{"id":2820,"nodeType":"OverrideSpecifier","overrides":[{"id":2818,"name":"ERC1155Fuse","nameLocations":["3613:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2243,"src":"3613:11:20"},{"id":2819,"name":"INameWrapper","nameLocations":["3626:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":2547,"src":"3626:12:20"}],"src":"3604:35:20"},"parameters":{"id":2817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2816,"mutability":"mutable","name":"id","nameLocation":"3564:2:20","nodeType":"VariableDeclaration","scope":2830,"src":"3556:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"3556:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3555:12:20"},"returnParameters":{"id":2823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2822,"mutability":"mutable","name":"owner","nameLocation":"3665:5:20","nodeType":"VariableDeclaration","scope":2830,"src":"3657:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2821,"name":"address","nodeType":"ElementaryTypeName","src":"3657:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3656:15:20"},"scope":5349,"src":"3539:178:20","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1616,2537],"body":{"id":2865,"nodeType":"Block","src":"4149:128:20","statements":[{"expression":{"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2845,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"4160:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2846,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"4167:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2847,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"4174:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":2848,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4159:22:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2851,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"4198:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2849,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4184:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NameWrapper_$5349_$","typeString":"type(contract super NameWrapper)"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4190:7:20","memberName":"getData","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"4184:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (uint256) view returns (address,uint32,uint64)"}},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4184:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"src":"4159:42:20","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2854,"nodeType":"ExpressionStatement","src":"4159:42:20"},{"expression":{"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2855,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"4213:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2856,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"4220:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":2857,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4212:14:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$","typeString":"tuple(address,uint32)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2859,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"4249:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2860,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"4256:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2861,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"4263:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2858,"name":"_clearOwnerAndFuses","nodeType":"Identifier","overloadedDeclarations":[4632],"referencedDeclaration":4632,"src":"4229:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint32_$_t_uint64_$returns$_t_address_$_t_uint32_$","typeString":"function (address,uint32,uint64) view returns (address,uint32)"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4229:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$","typeString":"tuple(address,uint32)"}},"src":"4212:58:20","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2864,"nodeType":"ExpressionStatement","src":"4212:58:20"}]},"documentation":{"id":2831,"nodeType":"StructuredDocumentation","src":"3723:208:20","text":" @notice Gets the data for a name\n @param id Namehash of the name\n @return owner Owner of the name\n @return fuses Fuses of the name\n @return expiry Expiry of the name"},"functionSelector":"0178fe3f","id":2866,"implemented":true,"kind":"function","modifiers":[],"name":"getData","nameLocation":"3946:7:20","nodeType":"FunctionDefinition","overrides":{"id":2837,"nodeType":"OverrideSpecifier","overrides":[{"id":2835,"name":"ERC1155Fuse","nameLocations":["4011:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2243,"src":"4011:11:20"},{"id":2836,"name":"INameWrapper","nameLocations":["4024:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":2547,"src":"4024:12:20"}],"src":"4002:35:20"},"parameters":{"id":2834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2833,"mutability":"mutable","name":"id","nameLocation":"3962:2:20","nodeType":"VariableDeclaration","scope":2866,"src":"3954:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2832,"name":"uint256","nodeType":"ElementaryTypeName","src":"3954:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3953:12:20"},"returnParameters":{"id":2844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2839,"mutability":"mutable","name":"owner","nameLocation":"4076:5:20","nodeType":"VariableDeclaration","scope":2866,"src":"4068:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2838,"name":"address","nodeType":"ElementaryTypeName","src":"4068:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2841,"mutability":"mutable","name":"fuses","nameLocation":"4102:5:20","nodeType":"VariableDeclaration","scope":2866,"src":"4095:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2840,"name":"uint32","nodeType":"ElementaryTypeName","src":"4095:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2843,"mutability":"mutable","name":"expiry","nameLocation":"4128:6:20","nodeType":"VariableDeclaration","scope":2866,"src":"4121:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2842,"name":"uint64","nodeType":"ElementaryTypeName","src":"4121:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4054:90:20"},"scope":5349,"src":"3937:340:20","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2879,"nodeType":"Block","src":"4552:51:20","statements":[{"expression":{"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2875,"name":"metadataService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"4562:15:20","typeDescriptions":{"typeIdentifier":"t_contract$_IMetadataService_$2253","typeString":"contract IMetadataService"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2876,"name":"_metadataService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"4580:16:20","typeDescriptions":{"typeIdentifier":"t_contract$_IMetadataService_$2253","typeString":"contract IMetadataService"}},"src":"4562:34:20","typeDescriptions":{"typeIdentifier":"t_contract$_IMetadataService_$2253","typeString":"contract IMetadataService"}},"id":2878,"nodeType":"ExpressionStatement","src":"4562:34:20"}]},"documentation":{"id":2867,"nodeType":"StructuredDocumentation","src":"4311:135:20","text":" @notice Set the metadata service. Only the owner can do this\n @param _metadataService The new metadata service"},"functionSelector":"1534e177","id":2880,"implemented":true,"kind":"function","modifiers":[{"id":2873,"kind":"modifierInvocation","modifierName":{"id":2872,"name":"onlyOwner","nameLocations":["4538:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"4538:9:20"},"nodeType":"ModifierInvocation","src":"4538:9:20"}],"name":"setMetadataService","nameLocation":"4461:18:20","nodeType":"FunctionDefinition","parameters":{"id":2871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2870,"mutability":"mutable","name":"_metadataService","nameLocation":"4497:16:20","nodeType":"VariableDeclaration","scope":2880,"src":"4480:33:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IMetadataService_$2253","typeString":"contract IMetadataService"},"typeName":{"id":2869,"nodeType":"UserDefinedTypeName","pathNode":{"id":2868,"name":"IMetadataService","nameLocations":["4480:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":2253,"src":"4480:16:20"},"referencedDeclaration":2253,"src":"4480:16:20","typeDescriptions":{"typeIdentifier":"t_contract$_IMetadataService_$2253","typeString":"contract IMetadataService"}},"visibility":"internal"}],"src":"4479:35:20"},"returnParameters":{"id":2874,"nodeType":"ParameterList","parameters":[],"src":"4552:0:20"},"scope":5349,"src":"4452:151:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[289],"body":{"id":2894,"nodeType":"Block","src":"4829:52:20","statements":[{"expression":{"arguments":[{"id":2891,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"4866:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2889,"name":"metadataService","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"4846:15:20","typeDescriptions":{"typeIdentifier":"t_contract$_IMetadataService_$2253","typeString":"contract IMetadataService"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4862:3:20","memberName":"uri","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"4846:19:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view external returns (string memory)"}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4846:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2888,"id":2893,"nodeType":"Return","src":"4839:35:20"}]},"documentation":{"id":2881,"nodeType":"StructuredDocumentation","src":"4609:139:20","text":" @notice Get the metadata uri\n @param tokenId The id of the token\n @return string uri of the metadata service"},"functionSelector":"0e89341c","id":2895,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"4763:3:20","nodeType":"FunctionDefinition","overrides":{"id":2885,"nodeType":"OverrideSpecifier","overrides":[],"src":"4796:8:20"},"parameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"tokenId","nameLocation":"4775:7:20","nodeType":"VariableDeclaration","scope":2895,"src":"4767:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2882,"name":"uint256","nodeType":"ElementaryTypeName","src":"4767:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4766:17:20"},"returnParameters":{"id":2888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2895,"src":"4814:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2886,"name":"string","nodeType":"ElementaryTypeName","src":"4814:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4813:15:20"},"scope":5349,"src":"4754:127:20","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2970,"nodeType":"Block","src":"5303:462:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2906,"name":"upgradeContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"5325:15:20","typeDescriptions":{"typeIdentifier":"t_contract$_INameWrapperUpgrade_$2580","typeString":"contract INameWrapperUpgrade"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_INameWrapperUpgrade_$2580","typeString":"contract INameWrapperUpgrade"}],"id":2905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5317:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2904,"name":"address","nodeType":"ElementaryTypeName","src":"5317:7:20","typeDescriptions":{}}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5317:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5345:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2908,"name":"address","nodeType":"ElementaryTypeName","src":"5345:7:20","typeDescriptions":{}}},"id":2911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5345:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5317:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2934,"nodeType":"IfStatement","src":"5313:197:20","trueBody":{"id":2933,"nodeType":"Block","src":"5357:153:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":2918,"name":"upgradeContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"5407:15:20","typeDescriptions":{"typeIdentifier":"t_contract$_INameWrapperUpgrade_$2580","typeString":"contract INameWrapperUpgrade"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_INameWrapperUpgrade_$2580","typeString":"contract INameWrapperUpgrade"}],"id":2917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5399:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2916,"name":"address","nodeType":"ElementaryTypeName","src":"5399:7:20","typeDescriptions":{}}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5399:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5425:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2913,"name":"registrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"5371:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaseRegistrar_$985","typeString":"contract IBaseRegistrar"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5381:17:20","memberName":"setApprovalForAll","nodeType":"MemberAccess","referencedDeclaration":465,"src":"5371:27:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool) external"}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5371:60:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2922,"nodeType":"ExpressionStatement","src":"5371:60:20"},{"expression":{"arguments":[{"arguments":[{"id":2928,"name":"upgradeContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"5475:15:20","typeDescriptions":{"typeIdentifier":"t_contract$_INameWrapperUpgrade_$2580","typeString":"contract INameWrapperUpgrade"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_INameWrapperUpgrade_$2580","typeString":"contract INameWrapperUpgrade"}],"id":2927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5467:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2926,"name":"address","nodeType":"ElementaryTypeName","src":"5467:7:20","typeDescriptions":{}}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5467:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":2930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5493:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2923,"name":"ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"5445:3:20","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5449:17:20","memberName":"setApprovalForAll","nodeType":"MemberAccess","referencedDeclaration":1084,"src":"5445:21:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool) external"}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5445:54:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2932,"nodeType":"ExpressionStatement","src":"5445:54:20"}]}},{"expression":{"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2935,"name":"upgradeContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"5520:15:20","typeDescriptions":{"typeIdentifier":"t_contract$_INameWrapperUpgrade_$2580","typeString":"contract INameWrapperUpgrade"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2936,"name":"_upgradeAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"5538:15:20","typeDescriptions":{"typeIdentifier":"t_contract$_INameWrapperUpgrade_$2580","typeString":"contract INameWrapperUpgrade"}},"src":"5520:33:20","typeDescriptions":{"typeIdentifier":"t_contract$_INameWrapperUpgrade_$2580","typeString":"contract INameWrapperUpgrade"}},"id":2938,"nodeType":"ExpressionStatement","src":"5520:33:20"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2941,"name":"upgradeContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"5576:15:20","typeDescriptions":{"typeIdentifier":"t_contract$_INameWrapperUpgrade_$2580","typeString":"contract INameWrapperUpgrade"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_INameWrapperUpgrade_$2580","typeString":"contract INameWrapperUpgrade"}],"id":2940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5568:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2939,"name":"address","nodeType":"ElementaryTypeName","src":"5568:7:20","typeDescriptions":{}}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5604:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5596:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2943,"name":"address","nodeType":"ElementaryTypeName","src":"5596:7:20","typeDescriptions":{}}},"id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5596:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5568:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2969,"nodeType":"IfStatement","src":"5564:195:20","trueBody":{"id":2968,"nodeType":"Block","src":"5608:151:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":2953,"name":"upgradeContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"5658:15:20","typeDescriptions":{"typeIdentifier":"t_contract$_INameWrapperUpgrade_$2580","typeString":"contract INameWrapperUpgrade"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_INameWrapperUpgrade_$2580","typeString":"contract INameWrapperUpgrade"}],"id":2952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5650:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2951,"name":"address","nodeType":"ElementaryTypeName","src":"5650:7:20","typeDescriptions":{}}},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5650:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5676:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2948,"name":"registrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"5622:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaseRegistrar_$985","typeString":"contract IBaseRegistrar"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5632:17:20","memberName":"setApprovalForAll","nodeType":"MemberAccess","referencedDeclaration":465,"src":"5622:27:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool) external"}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5622:59:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2957,"nodeType":"ExpressionStatement","src":"5622:59:20"},{"expression":{"arguments":[{"arguments":[{"id":2963,"name":"upgradeContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"5725:15:20","typeDescriptions":{"typeIdentifier":"t_contract$_INameWrapperUpgrade_$2580","typeString":"contract INameWrapperUpgrade"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_INameWrapperUpgrade_$2580","typeString":"contract INameWrapperUpgrade"}],"id":2962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5717:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2961,"name":"address","nodeType":"ElementaryTypeName","src":"5717:7:20","typeDescriptions":{}}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5717:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5743:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2958,"name":"ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"5695:3:20","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5699:17:20","memberName":"setApprovalForAll","nodeType":"MemberAccess","referencedDeclaration":1084,"src":"5695:21:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool) external"}},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5695:53:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2967,"nodeType":"ExpressionStatement","src":"5695:53:20"}]}}]},"documentation":{"id":2896,"nodeType":"StructuredDocumentation","src":"4887:308:20","text":" @notice Set the address of the upgradeContract of the contract. only admin can do this\n @dev The default value of upgradeContract is the 0 address. Use the 0 address at any time\n to make the contract not upgradable.\n @param _upgradeAddress address of an upgraded contract"},"functionSelector":"b6bcad26","id":2971,"implemented":true,"kind":"function","modifiers":[{"id":2902,"kind":"modifierInvocation","modifierName":{"id":2901,"name":"onlyOwner","nameLocations":["5289:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"5289:9:20"},"nodeType":"ModifierInvocation","src":"5289:9:20"}],"name":"setUpgradeContract","nameLocation":"5210:18:20","nodeType":"FunctionDefinition","parameters":{"id":2900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2899,"mutability":"mutable","name":"_upgradeAddress","nameLocation":"5249:15:20","nodeType":"VariableDeclaration","scope":2971,"src":"5229:35:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_INameWrapperUpgrade_$2580","typeString":"contract INameWrapperUpgrade"},"typeName":{"id":2898,"nodeType":"UserDefinedTypeName","pathNode":{"id":2897,"name":"INameWrapperUpgrade","nameLocations":["5229:19:20"],"nodeType":"IdentifierPath","referencedDeclaration":2580,"src":"5229:19:20"},"referencedDeclaration":2580,"src":"5229:19:20","typeDescriptions":{"typeIdentifier":"t_contract$_INameWrapperUpgrade_$2580","typeString":"contract INameWrapperUpgrade"}},"visibility":"internal"}],"src":"5228:37:20"},"returnParameters":{"id":2903,"nodeType":"ParameterList","parameters":[],"src":"5303:0:20"},"scope":5349,"src":"5201:564:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2991,"nodeType":"Block","src":"5959:128:20","statements":[{"condition":{"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5973:32:20","subExpression":{"arguments":[{"id":2977,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"5988:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2978,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5994:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5998:6:20","memberName":"sender","nodeType":"MemberAccess","src":"5994:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2976,"name":"canModifyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"5974:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2989,"nodeType":"IfStatement","src":"5969:100:20","trueBody":{"id":2988,"nodeType":"Block","src":"6007:62:20","statements":[{"errorCall":{"arguments":[{"id":2983,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"6041:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2984,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6047:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6051:6:20","memberName":"sender","nodeType":"MemberAccess","src":"6047:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2982,"name":"Unauthorised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"6028:12:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) pure"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6028:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2987,"nodeType":"RevertStatement","src":"6021:37:20"}]}},{"id":2990,"nodeType":"PlaceholderStatement","src":"6079:1:20"}]},"documentation":{"id":2972,"nodeType":"StructuredDocumentation","src":"5771:144:20","text":" @notice Checks if msg.sender is the owner or approved by the owner of a name\n @param node namehash of the name to check"},"id":2992,"name":"onlyTokenOwner","nameLocation":"5930:14:20","nodeType":"ModifierDefinition","parameters":{"id":2975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2974,"mutability":"mutable","name":"node","nameLocation":"5953:4:20","nodeType":"VariableDeclaration","scope":2992,"src":"5945:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5945:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5944:14:20"},"src":"5921:166:20","virtual":false,"visibility":"internal"},{"baseFunctions":[2505],"body":{"id":3040,"nodeType":"Block","src":"6443:264:20","statements":[{"assignments":[3004,3006,3008],"declarations":[{"constant":false,"id":3004,"mutability":"mutable","name":"owner","nameLocation":"6462:5:20","nodeType":"VariableDeclaration","scope":3040,"src":"6454:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3003,"name":"address","nodeType":"ElementaryTypeName","src":"6454:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3006,"mutability":"mutable","name":"fuses","nameLocation":"6476:5:20","nodeType":"VariableDeclaration","scope":3040,"src":"6469:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3005,"name":"uint32","nodeType":"ElementaryTypeName","src":"6469:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3008,"mutability":"mutable","name":"expiry","nameLocation":"6490:6:20","nodeType":"VariableDeclaration","scope":3040,"src":"6483:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3007,"name":"uint64","nodeType":"ElementaryTypeName","src":"6483:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":3015,"initialValue":{"arguments":[{"arguments":[{"id":3012,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"6516:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6508:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3010,"name":"uint256","nodeType":"ElementaryTypeName","src":"6508:7:20","typeDescriptions":{}}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6508:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3009,"name":"getData","nodeType":"Identifier","overloadedDeclarations":[2866],"referencedDeclaration":2866,"src":"6500:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (uint256) view returns (address,uint32,uint64)"}},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6500:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"6453:69:20"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3016,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"6552:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3017,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"6561:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6552:13:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3020,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"6586:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3021,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"6593:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3019,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"6569:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6569:29:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6552:46:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3024,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6551:48:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3025,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"6616:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3026,"name":"IS_DOT_ETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"6624:10:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"6616:18:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6638:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6616:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3030,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"6659:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3031,"name":"GRACE_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"6668:12:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6659:21:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":3033,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6684:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6690:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"6684:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6659:40:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6616:83:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3037,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6615:85:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6551:149:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3002,"id":3039,"nodeType":"Return","src":"6532:168:20"}]},"documentation":{"id":2993,"nodeType":"StructuredDocumentation","src":"6093:221:20","text":" @notice Checks if owner or approved by owner\n @param node namehash of the name to check\n @param addr which address to check permissions for\n @return whether or not is owner or approved"},"functionSelector":"41415eab","id":3041,"implemented":true,"kind":"function","modifiers":[],"name":"canModifyName","nameLocation":"6329:13:20","nodeType":"FunctionDefinition","overrides":{"id":2999,"nodeType":"OverrideSpecifier","overrides":[],"src":"6407:8:20"},"parameters":{"id":2998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2995,"mutability":"mutable","name":"node","nameLocation":"6351:4:20","nodeType":"VariableDeclaration","scope":3041,"src":"6343:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2994,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6343:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2997,"mutability":"mutable","name":"addr","nameLocation":"6365:4:20","nodeType":"VariableDeclaration","scope":3041,"src":"6357:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2996,"name":"address","nodeType":"ElementaryTypeName","src":"6357:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6342:28:20"},"returnParameters":{"id":3002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3041,"src":"6433:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3000,"name":"bool","nodeType":"ElementaryTypeName","src":"6433:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6432:6:20"},"scope":5349,"src":"6320:387:20","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[2378],"body":{"id":3127,"nodeType":"Block","src":"7371:723:20","statements":[{"assignments":[3055],"declarations":[{"constant":false,"id":3055,"mutability":"mutable","name":"tokenId","nameLocation":"7389:7:20","nodeType":"VariableDeclaration","scope":3127,"src":"7381:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3054,"name":"uint256","nodeType":"ElementaryTypeName","src":"7381:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3065,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3061,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"7423:5:20","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":3060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7417:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3059,"name":"bytes","nodeType":"ElementaryTypeName","src":"7417:5:20","typeDescriptions":{}}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7417:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3058,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7407:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7407:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7399:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3056,"name":"uint256","nodeType":"ElementaryTypeName","src":"7399:7:20","typeDescriptions":{}}},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7399:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7381:50:20"},{"assignments":[3067],"declarations":[{"constant":false,"id":3067,"mutability":"mutable","name":"registrant","nameLocation":"7449:10:20","nodeType":"VariableDeclaration","scope":3127,"src":"7441:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3066,"name":"address","nodeType":"ElementaryTypeName","src":"7441:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3072,"initialValue":{"arguments":[{"id":3070,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"7480:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3068,"name":"registrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"7462:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaseRegistrar_$985","typeString":"contract IBaseRegistrar"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7472:7:20","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":417,"src":"7462:17:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7462:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7441:47:20"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3073,"name":"registrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"7515:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3074,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7529:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7533:6:20","memberName":"sender","nodeType":"MemberAccess","src":"7529:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7515:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7555:51:20","subExpression":{"arguments":[{"id":3079,"name":"registrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"7583:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3080,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7595:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7599:6:20","memberName":"sender","nodeType":"MemberAccess","src":"7595:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3077,"name":"registrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"7556:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaseRegistrar_$985","typeString":"contract IBaseRegistrar"}},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7566:16:20","memberName":"isApprovedForAll","nodeType":"MemberAccess","referencedDeclaration":483,"src":"7556:26:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view external returns (bool)"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7556:50:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7515:91:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3098,"nodeType":"IfStatement","src":"7498:260:20","trueBody":{"id":3097,"nodeType":"Block","src":"7617:141:20","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3087,"name":"ETH_NODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"7678:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":3090,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"7696:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7688:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3088,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7688:7:20","typeDescriptions":{}}},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7688:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3086,"name":"_makeNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"7668:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7668:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3093,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7723:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7727:6:20","memberName":"sender","nodeType":"MemberAccess","src":"7723:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3085,"name":"Unauthorised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"7638:12:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) pure"}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7638:109:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3096,"nodeType":"RevertStatement","src":"7631:116:20"}]}},{"expression":{"arguments":[{"id":3102,"name":"registrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"7852:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3105,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7872:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}],"id":3104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7864:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3103,"name":"address","nodeType":"ElementaryTypeName","src":"7864:7:20","typeDescriptions":{}}},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7864:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3107,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"7879:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3099,"name":"registrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"7829:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaseRegistrar_$985","typeString":"contract IBaseRegistrar"}},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7839:12:20","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":449,"src":"7829:22:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7829:58:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3109,"nodeType":"ExpressionStatement","src":"7829:58:20"},{"expression":{"arguments":[{"id":3113,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"7989:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3116,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8006:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}],"id":3115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7998:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3114,"name":"address","nodeType":"ElementaryTypeName","src":"7998:7:20","typeDescriptions":{}}},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7998:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3110,"name":"registrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"7971:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaseRegistrar_$985","typeString":"contract IBaseRegistrar"}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7981:7:20","memberName":"reclaim","nodeType":"MemberAccess","referencedDeclaration":984,"src":"7971:17:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address) external"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7971:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3119,"nodeType":"ExpressionStatement","src":"7971:41:20"},{"expression":{"arguments":[{"id":3121,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"8035:5:20","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":3122,"name":"wrappedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"8042:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3123,"name":"ownerControlledFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"8056:20:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3124,"name":"resolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"8078:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3120,"name":"_wrapETH2LD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"8023:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint16_$_t_address_$returns$__$","typeString":"function (string memory,address,uint16,address)"}},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8023:64:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3126,"nodeType":"ExpressionStatement","src":"8023:64:20"}]},"documentation":{"id":3042,"nodeType":"StructuredDocumentation","src":"6713:486:20","text":" @notice Wraps a .eth domain, creating a new token and sending the original ERC721 token to this contract\n @dev Can be called by the owner of the name on the .eth registrar or an authorised caller on the registrar\n @param label Label as a string of the .eth domain to wrap\n @param wrappedOwner Owner of the name in this contract\n @param ownerControlledFuses Initial owner-controlled fuses to set\n @param resolver Resolver contract address"},"functionSelector":"8cf8b41e","id":3128,"implemented":true,"kind":"function","modifiers":[],"name":"wrapETH2LD","nameLocation":"7214:10:20","nodeType":"FunctionDefinition","overrides":{"id":3052,"nodeType":"OverrideSpecifier","overrides":[],"src":"7362:8:20"},"parameters":{"id":3051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3044,"mutability":"mutable","name":"label","nameLocation":"7250:5:20","nodeType":"VariableDeclaration","scope":3128,"src":"7234:21:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3043,"name":"string","nodeType":"ElementaryTypeName","src":"7234:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3046,"mutability":"mutable","name":"wrappedOwner","nameLocation":"7273:12:20","nodeType":"VariableDeclaration","scope":3128,"src":"7265:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3045,"name":"address","nodeType":"ElementaryTypeName","src":"7265:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3048,"mutability":"mutable","name":"ownerControlledFuses","nameLocation":"7302:20:20","nodeType":"VariableDeclaration","scope":3128,"src":"7295:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3047,"name":"uint16","nodeType":"ElementaryTypeName","src":"7295:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3050,"mutability":"mutable","name":"resolver","nameLocation":"7340:8:20","nodeType":"VariableDeclaration","scope":3128,"src":"7332:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3049,"name":"address","nodeType":"ElementaryTypeName","src":"7332:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7224:130:20"},"returnParameters":{"id":3053,"nodeType":"ParameterList","parameters":[],"src":"7371:0:20"},"scope":5349,"src":"7205:889:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2393],"body":{"id":3178,"nodeType":"Block","src":"8968:221:20","statements":[{"assignments":[3148],"declarations":[{"constant":false,"id":3148,"mutability":"mutable","name":"tokenId","nameLocation":"8986:7:20","nodeType":"VariableDeclaration","scope":3178,"src":"8978:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3147,"name":"uint256","nodeType":"ElementaryTypeName","src":"8978:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3158,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3154,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"9020:5:20","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":3153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9014:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3152,"name":"bytes","nodeType":"ElementaryTypeName","src":"9014:5:20","typeDescriptions":{}}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9014:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3151,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9004:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9004:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8996:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3149,"name":"uint256","nodeType":"ElementaryTypeName","src":"8996:7:20","typeDescriptions":{}}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8978:50:20"},{"expression":{"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3159,"name":"registrarExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"9038:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3162,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"9075:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3165,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9092:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}],"id":3164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9084:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3163,"name":"address","nodeType":"ElementaryTypeName","src":"9084:7:20","typeDescriptions":{}}},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9084:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3167,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"9099:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3160,"name":"registrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"9056:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaseRegistrar_$985","typeString":"contract IBaseRegistrar"}},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9066:8:20","memberName":"register","nodeType":"MemberAccess","referencedDeclaration":967,"src":"9056:18:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,address,uint256) external returns (uint256)"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9056:52:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9038:70:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3170,"nodeType":"ExpressionStatement","src":"9038:70:20"},{"expression":{"arguments":[{"id":3172,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"9130:5:20","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":3173,"name":"wrappedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"9137:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3174,"name":"ownerControlledFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"9151:20:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3175,"name":"resolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"9173:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3171,"name":"_wrapETH2LD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"9118:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint16_$_t_address_$returns$__$","typeString":"function (string memory,address,uint16,address)"}},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9118:64:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3177,"nodeType":"ExpressionStatement","src":"9118:64:20"}]},"documentation":{"id":3129,"nodeType":"StructuredDocumentation","src":"8100:608:20","text":" @dev Registers a new .eth second-level domain and wraps it.\n      Only callable by authorised controllers.\n @param label The label to register (Eg, 'foo' for 'foo.eth').\n @param wrappedOwner The owner of the wrapped name.\n @param duration The duration, in seconds, to register the name for.\n @param resolver The resolver address to set on the ENS registry (optional).\n @param ownerControlledFuses Initial owner-controlled fuses to set\n @return registrarExpiry The expiry date of the new name on the .eth registrar, in seconds since the Unix epoch."},"functionSelector":"a4014982","id":3179,"implemented":true,"kind":"function","modifiers":[{"id":3143,"kind":"modifierInvocation","modifierName":{"id":3142,"name":"onlyController","nameLocations":["8919:14:20"],"nodeType":"IdentifierPath","referencedDeclaration":1342,"src":"8919:14:20"},"nodeType":"ModifierInvocation","src":"8919:14:20"}],"name":"registerAndWrapETH2LD","nameLocation":"8723:21:20","nodeType":"FunctionDefinition","overrides":{"id":3141,"nodeType":"OverrideSpecifier","overrides":[],"src":"8910:8:20"},"parameters":{"id":3140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3131,"mutability":"mutable","name":"label","nameLocation":"8770:5:20","nodeType":"VariableDeclaration","scope":3179,"src":"8754:21:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3130,"name":"string","nodeType":"ElementaryTypeName","src":"8754:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3133,"mutability":"mutable","name":"wrappedOwner","nameLocation":"8793:12:20","nodeType":"VariableDeclaration","scope":3179,"src":"8785:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3132,"name":"address","nodeType":"ElementaryTypeName","src":"8785:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3135,"mutability":"mutable","name":"duration","nameLocation":"8823:8:20","nodeType":"VariableDeclaration","scope":3179,"src":"8815:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3134,"name":"uint256","nodeType":"ElementaryTypeName","src":"8815:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3137,"mutability":"mutable","name":"resolver","nameLocation":"8849:8:20","nodeType":"VariableDeclaration","scope":3179,"src":"8841:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3136,"name":"address","nodeType":"ElementaryTypeName","src":"8841:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3139,"mutability":"mutable","name":"ownerControlledFuses","nameLocation":"8874:20:20","nodeType":"VariableDeclaration","scope":3179,"src":"8867:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3138,"name":"uint16","nodeType":"ElementaryTypeName","src":"8867:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"8744:156:20"},"returnParameters":{"id":3146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3145,"mutability":"mutable","name":"registrarExpiry","nameLocation":"8951:15:20","nodeType":"VariableDeclaration","scope":3179,"src":"8943:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3144,"name":"uint256","nodeType":"ElementaryTypeName","src":"8943:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8942:25:20"},"scope":5349,"src":"8714:475:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2402],"body":{"id":3274,"nodeType":"Block","src":"9732:884:20","statements":[{"assignments":[3193],"declarations":[{"constant":false,"id":3193,"mutability":"mutable","name":"node","nameLocation":"9750:4:20","nodeType":"VariableDeclaration","scope":3274,"src":"9742:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9742:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3201,"initialValue":{"arguments":[{"id":3195,"name":"ETH_NODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"9767:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":3198,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"9785:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9777:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9777:7:20","typeDescriptions":{}}},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9777:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3194,"name":"_makeNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"9757:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9757:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9742:52:20"},{"assignments":[3203],"declarations":[{"constant":false,"id":3203,"mutability":"mutable","name":"registrarExpiry","nameLocation":"9813:15:20","nodeType":"VariableDeclaration","scope":3274,"src":"9805:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3202,"name":"uint256","nodeType":"ElementaryTypeName","src":"9805:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3209,"initialValue":{"arguments":[{"id":3206,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"9847:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3207,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"9856:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3204,"name":"registrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"9831:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaseRegistrar_$985","typeString":"contract IBaseRegistrar"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9841:5:20","memberName":"renew","nodeType":"MemberAccess","referencedDeclaration":976,"src":"9831:15:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) external returns (uint256)"}},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9805:60:20"},{"clauses":[{"block":{"id":3237,"nodeType":"Block","src":"10005:198:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3217,"name":"registrarOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"10040:14:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":3220,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10066:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}],"id":3219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10058:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3218,"name":"address","nodeType":"ElementaryTypeName","src":"10058:7:20","typeDescriptions":{}}},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10040:31:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3225,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"10101:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3223,"name":"ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"10091:3:20","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10095:5:20","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1091,"src":"10091:9:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10091:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":3229,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10118:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}],"id":3228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10110:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3227,"name":"address","nodeType":"ElementaryTypeName","src":"10110:7:20","typeDescriptions":{}}},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10110:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10091:32:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10040:83:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3236,"nodeType":"IfStatement","src":"10019:174:20","trueBody":{"id":3235,"nodeType":"Block","src":"10138:55:20","statements":[{"expression":{"id":3233,"name":"registrarExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"10163:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3191,"id":3234,"nodeType":"Return","src":"10156:22:20"}]}}]},"errorName":"","id":3238,"nodeType":"TryCatchClause","parameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3215,"mutability":"mutable","name":"registrarOwner","nameLocation":"9989:14:20","nodeType":"VariableDeclaration","scope":3238,"src":"9981:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3214,"name":"address","nodeType":"ElementaryTypeName","src":"9981:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9980:24:20"},"src":"9972:231:20"},{"block":{"id":3241,"nodeType":"Block","src":"10210:47:20","statements":[{"expression":{"id":3239,"name":"registrarExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"10231:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3191,"id":3240,"nodeType":"Return","src":"10224:22:20"}]},"errorName":"","id":3242,"nodeType":"TryCatchClause","src":"10204:53:20"}],"externalCall":{"arguments":[{"id":3212,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"9963:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3210,"name":"registrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"9945:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaseRegistrar_$985","typeString":"contract IBaseRegistrar"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9955:7:20","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":417,"src":"9945:17:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9945:26:20","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3243,"nodeType":"TryStatement","src":"9941:316:20"},{"assignments":[3245],"declarations":[{"constant":false,"id":3245,"mutability":"mutable","name":"expiry","nameLocation":"10307:6:20","nodeType":"VariableDeclaration","scope":3274,"src":"10300:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3244,"name":"uint64","nodeType":"ElementaryTypeName","src":"10300:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":3252,"initialValue":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3248,"name":"registrarExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"10323:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10316:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3246,"name":"uint64","nodeType":"ElementaryTypeName","src":"10316:6:20","typeDescriptions":{}}},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10316:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3250,"name":"GRACE_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"10342:12:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"10316:38:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"10300:54:20"},{"assignments":[3254,3256,null],"declarations":[{"constant":false,"id":3254,"mutability":"mutable","name":"owner","nameLocation":"10477:5:20","nodeType":"VariableDeclaration","scope":3274,"src":"10469:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3253,"name":"address","nodeType":"ElementaryTypeName","src":"10469:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3256,"mutability":"mutable","name":"fuses","nameLocation":"10491:5:20","nodeType":"VariableDeclaration","scope":3274,"src":"10484:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3255,"name":"uint32","nodeType":"ElementaryTypeName","src":"10484:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},null],"id":3264,"initialValue":{"arguments":[{"arguments":[{"id":3261,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"10524:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10516:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3259,"name":"uint256","nodeType":"ElementaryTypeName","src":"10516:7:20","typeDescriptions":{}}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10516:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3257,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"10502:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NameWrapper_$5349_$","typeString":"type(contract super NameWrapper)"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10508:7:20","memberName":"getData","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"10502:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (uint256) view returns (address,uint32,uint64)"}},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10502:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"10468:62:20"},{"expression":{"arguments":[{"id":3266,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"10549:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3267,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"10555:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3268,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"10562:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3269,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"10569:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3265,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[5297,1834],"referencedDeclaration":5297,"src":"10540:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_uint32_$_t_uint64_$returns$__$","typeString":"function (bytes32,address,uint32,uint64)"}},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10540:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3271,"nodeType":"ExpressionStatement","src":"10540:36:20"},{"expression":{"id":3272,"name":"registrarExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"10594:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3191,"id":3273,"nodeType":"Return","src":"10587:22:20"}]},"documentation":{"id":3180,"nodeType":"StructuredDocumentation","src":"9195:386:20","text":" @notice Renews a .eth second-level domain.\n @dev Only callable by authorised controllers.\n @param tokenId The hash of the label to register (eg, `keccak256('foo')`, for 'foo.eth').\n @param duration The number of seconds to renew the name for.\n @return expires The expiry date of the name on the .eth registrar, in seconds since the Unix epoch."},"functionSelector":"c475abff","id":3275,"implemented":true,"kind":"function","modifiers":[{"id":3188,"kind":"modifierInvocation","modifierName":{"id":3187,"name":"onlyController","nameLocations":["9679:14:20"],"nodeType":"IdentifierPath","referencedDeclaration":1342,"src":"9679:14:20"},"nodeType":"ModifierInvocation","src":"9679:14:20"}],"name":"renew","nameLocation":"9596:5:20","nodeType":"FunctionDefinition","overrides":{"id":3186,"nodeType":"OverrideSpecifier","overrides":[],"src":"9662:8:20"},"parameters":{"id":3185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3182,"mutability":"mutable","name":"tokenId","nameLocation":"9610:7:20","nodeType":"VariableDeclaration","scope":3275,"src":"9602:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3181,"name":"uint256","nodeType":"ElementaryTypeName","src":"9602:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3184,"mutability":"mutable","name":"duration","nameLocation":"9627:8:20","nodeType":"VariableDeclaration","scope":3275,"src":"9619:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3183,"name":"uint256","nodeType":"ElementaryTypeName","src":"9619:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9601:35:20"},"returnParameters":{"id":3191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3190,"mutability":"mutable","name":"expires","nameLocation":"9719:7:20","nodeType":"VariableDeclaration","scope":3275,"src":"9711:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3189,"name":"uint256","nodeType":"ElementaryTypeName","src":"9711:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9710:17:20"},"scope":5349,"src":"9587:1029:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2367],"body":{"id":3383,"nodeType":"Block","src":"11112:669:20","statements":[{"assignments":[3287,3289],"declarations":[{"constant":false,"id":3287,"mutability":"mutable","name":"labelhash","nameLocation":"11131:9:20","nodeType":"VariableDeclaration","scope":3383,"src":"11123:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11123:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3289,"mutability":"mutable","name":"offset","nameLocation":"11150:6:20","nodeType":"VariableDeclaration","scope":3383,"src":"11142:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3288,"name":"uint256","nodeType":"ElementaryTypeName","src":"11142:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3294,"initialValue":{"arguments":[{"hexValue":"30","id":3292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11175:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":3290,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"11160:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11165:9:20","memberName":"readLabel","nodeType":"MemberAccess","referencedDeclaration":1293,"src":"11160:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$_t_uint256_$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256) pure returns (bytes32,uint256)"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11160:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_uint256_$","typeString":"tuple(bytes32,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11122:55:20"},{"assignments":[3296],"declarations":[{"constant":false,"id":3296,"mutability":"mutable","name":"parentNode","nameLocation":"11195:10:20","nodeType":"VariableDeclaration","scope":3383,"src":"11187:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11187:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3301,"initialValue":{"arguments":[{"id":3299,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"11222:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3297,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"11208:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11213:8:20","memberName":"namehash","nodeType":"MemberAccess","referencedDeclaration":1229,"src":"11208:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11208:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"11187:42:20"},{"assignments":[3303],"declarations":[{"constant":false,"id":3303,"mutability":"mutable","name":"node","nameLocation":"11247:4:20","nodeType":"VariableDeclaration","scope":3383,"src":"11239:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11239:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3308,"initialValue":{"arguments":[{"id":3305,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"11264:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3306,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"11276:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3304,"name":"_makeNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"11254:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11254:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"11239:47:20"},{"expression":{"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3309,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"11297:5:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":3311,"indexExpression":{"id":3310,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"11303:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11297:11:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3312,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"11311:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"src":"11297:18:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":3314,"nodeType":"ExpressionStatement","src":"11297:18:20"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3315,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"11330:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3316,"name":"ETH_NODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"11344:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"11330:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3322,"nodeType":"IfStatement","src":"11326:80:20","trueBody":{"id":3321,"nodeType":"Block","src":"11354:52:20","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3318,"name":"IncompatibleParent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"11375:18:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11375:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3320,"nodeType":"RevertStatement","src":"11368:27:20"}]}},{"assignments":[3324],"declarations":[{"constant":false,"id":3324,"mutability":"mutable","name":"owner","nameLocation":"11424:5:20","nodeType":"VariableDeclaration","scope":3383,"src":"11416:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3323,"name":"address","nodeType":"ElementaryTypeName","src":"11416:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3329,"initialValue":{"arguments":[{"id":3327,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"11442:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3325,"name":"ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"11432:3:20","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"}},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11436:5:20","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1091,"src":"11432:9:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11432:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11416:31:20"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3330,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"11462:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3331,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11471:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11475:6:20","memberName":"sender","nodeType":"MemberAccess","src":"11471:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11462:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11485:40:20","subExpression":{"arguments":[{"id":3336,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"11507:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3337,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11514:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11518:6:20","memberName":"sender","nodeType":"MemberAccess","src":"11514:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3334,"name":"ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"11486:3:20","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11490:16:20","memberName":"isApprovedForAll","nodeType":"MemberAccess","referencedDeclaration":1121,"src":"11486:20:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view external returns (bool)"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11486:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11462:63:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3349,"nodeType":"IfStatement","src":"11458:131:20","trueBody":{"id":3348,"nodeType":"Block","src":"11527:62:20","statements":[{"errorCall":{"arguments":[{"id":3343,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"11561:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3344,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11567:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11571:6:20","memberName":"sender","nodeType":"MemberAccess","src":"11567:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3342,"name":"Unauthorised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"11548:12:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) pure"}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11548:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3347,"nodeType":"RevertStatement","src":"11541:37:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3350,"name":"resolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"11603:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11623:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11615:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3351,"name":"address","nodeType":"ElementaryTypeName","src":"11615:7:20","typeDescriptions":{}}},"id":3354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11615:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11603:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3364,"nodeType":"IfStatement","src":"11599:84:20","trueBody":{"id":3363,"nodeType":"Block","src":"11627:56:20","statements":[{"expression":{"arguments":[{"id":3359,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"11657:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3360,"name":"resolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"11663:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3356,"name":"ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"11641:3:20","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"}},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11645:11:20","memberName":"setResolver","nodeType":"MemberAccess","referencedDeclaration":1063,"src":"11641:15:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) external"}},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11641:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3362,"nodeType":"ExpressionStatement","src":"11641:31:20"}]}},{"expression":{"arguments":[{"id":3368,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"11706:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":3371,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11720:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}],"id":3370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11712:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3369,"name":"address","nodeType":"ElementaryTypeName","src":"11712:7:20","typeDescriptions":{}}},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11712:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3365,"name":"ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"11693:3:20","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11697:8:20","memberName":"setOwner","nodeType":"MemberAccess","referencedDeclaration":1070,"src":"11693:12:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) external"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11693:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3374,"nodeType":"ExpressionStatement","src":"11693:33:20"},{"expression":{"arguments":[{"id":3376,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"11743:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3377,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"11749:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":3378,"name":"wrappedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"11755:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":3379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11769:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11772:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3375,"name":"_wrap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"11737:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint32_$_t_uint64_$returns$__$","typeString":"function (bytes32,bytes memory,address,uint32,uint64)"}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11737:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3382,"nodeType":"ExpressionStatement","src":"11737:37:20"}]},"documentation":{"id":3276,"nodeType":"StructuredDocumentation","src":"10622:363:20","text":" @notice Wraps a non .eth domain, of any kind. Could be a DNSSEC name vitalik.xyz or a subdomain\n @dev Can be called by the owner in the registry or an authorised caller in the registry\n @param name The name to wrap, in DNS format\n @param wrappedOwner Owner of the name in this contract\n @param resolver Resolver contract"},"functionSelector":"eb8ae530","id":3384,"implemented":true,"kind":"function","modifiers":[],"name":"wrap","nameLocation":"11000:4:20","nodeType":"FunctionDefinition","overrides":{"id":3284,"nodeType":"OverrideSpecifier","overrides":[],"src":"11103:8:20"},"parameters":{"id":3283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3278,"mutability":"mutable","name":"name","nameLocation":"11029:4:20","nodeType":"VariableDeclaration","scope":3384,"src":"11014:19:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3277,"name":"bytes","nodeType":"ElementaryTypeName","src":"11014:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3280,"mutability":"mutable","name":"wrappedOwner","nameLocation":"11051:12:20","nodeType":"VariableDeclaration","scope":3384,"src":"11043:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3279,"name":"address","nodeType":"ElementaryTypeName","src":"11043:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3282,"mutability":"mutable","name":"resolver","nameLocation":"11081:8:20","nodeType":"VariableDeclaration","scope":3384,"src":"11073:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3281,"name":"address","nodeType":"ElementaryTypeName","src":"11073:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11004:91:20"},"returnParameters":{"id":3285,"nodeType":"ParameterList","parameters":[],"src":"11112:0:20"},"scope":5349,"src":"10991:790:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2420],"body":{"id":3435,"nodeType":"Block","src":"12329:303:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3401,"name":"registrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"12343:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3404,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12365:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}],"id":3403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12357:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3402,"name":"address","nodeType":"ElementaryTypeName","src":"12357:7:20","typeDescriptions":{}}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12357:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12343:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3412,"nodeType":"IfStatement","src":"12339:97:20","trueBody":{"id":3411,"nodeType":"Block","src":"12372:64:20","statements":[{"errorCall":{"arguments":[{"id":3408,"name":"registrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"12414:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3407,"name":"IncorrectTargetOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"12393:20:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12393:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3410,"nodeType":"RevertStatement","src":"12386:39:20"}]}},{"expression":{"arguments":[{"arguments":[{"id":3415,"name":"ETH_NODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"12463:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3416,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"12473:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3414,"name":"_makeNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"12453:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12453:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3418,"name":"controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"12485:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3413,"name":"_unwrap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"12445:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12445:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3420,"nodeType":"ExpressionStatement","src":"12445:51:20"},{"expression":{"arguments":[{"arguments":[{"id":3426,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12554:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}],"id":3425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12546:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3424,"name":"address","nodeType":"ElementaryTypeName","src":"12546:7:20","typeDescriptions":{}}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12546:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3428,"name":"registrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"12573:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3431,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"12605:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12597:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3429,"name":"uint256","nodeType":"ElementaryTypeName","src":"12597:7:20","typeDescriptions":{}}},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12597:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3421,"name":"registrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"12506:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaseRegistrar_$985","typeString":"contract IBaseRegistrar"}},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12516:16:20","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":439,"src":"12506:26:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12506:119:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3434,"nodeType":"ExpressionStatement","src":"12506:119:20"}]},"documentation":{"id":3385,"nodeType":"StructuredDocumentation","src":"11787:362:20","text":" @notice Unwraps a .eth domain. e.g. vitalik.eth\n @dev Can be called by the owner in the wrapper or an authorised caller in the wrapper\n @param labelhash Labelhash of the .eth domain\n @param registrant Sets the owner in the .eth registrar to this address\n @param controller Sets the owner in the registry to this address"},"functionSelector":"8b4dfa75","id":3436,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":3396,"name":"ETH_NODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"12307:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3397,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"12317:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3395,"name":"_makeNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"12297:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12297:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3399,"kind":"modifierInvocation","modifierName":{"id":3394,"name":"onlyTokenOwner","nameLocations":["12282:14:20"],"nodeType":"IdentifierPath","referencedDeclaration":2992,"src":"12282:14:20"},"nodeType":"ModifierInvocation","src":"12282:46:20"}],"name":"unwrapETH2LD","nameLocation":"12164:12:20","nodeType":"FunctionDefinition","overrides":{"id":3393,"nodeType":"OverrideSpecifier","overrides":[],"src":"12273:8:20"},"parameters":{"id":3392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"labelhash","nameLocation":"12194:9:20","nodeType":"VariableDeclaration","scope":3436,"src":"12186:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12186:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3389,"mutability":"mutable","name":"registrant","nameLocation":"12221:10:20","nodeType":"VariableDeclaration","scope":3436,"src":"12213:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3388,"name":"address","nodeType":"ElementaryTypeName","src":"12213:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3391,"mutability":"mutable","name":"controller","nameLocation":"12249:10:20","nodeType":"VariableDeclaration","scope":3436,"src":"12241:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3390,"name":"address","nodeType":"ElementaryTypeName","src":"12241:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12176:89:20"},"returnParameters":{"id":3400,"nodeType":"ParameterList","parameters":[],"src":"12329:0:20"},"scope":5349,"src":"12155:477:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2411],"body":{"id":3488,"nodeType":"Block","src":"13284:295:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3453,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"13298:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3454,"name":"ETH_NODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"13312:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13298:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3460,"nodeType":"IfStatement","src":"13294:80:20","trueBody":{"id":3459,"nodeType":"Block","src":"13322:52:20","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3456,"name":"IncompatibleParent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"13343:18:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13343:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3458,"nodeType":"RevertStatement","src":"13336:27:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3461,"name":"controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"13387:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"307830","id":3464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13409:3:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13401:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3462,"name":"address","nodeType":"ElementaryTypeName","src":"13401:7:20","typeDescriptions":{}}},"id":3465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13401:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13387:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3467,"name":"controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"13417:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3470,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13439:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}],"id":3469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13431:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3468,"name":"address","nodeType":"ElementaryTypeName","src":"13431:7:20","typeDescriptions":{}}},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13431:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13417:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13387:57:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3479,"nodeType":"IfStatement","src":"13383:127:20","trueBody":{"id":3478,"nodeType":"Block","src":"13446:64:20","statements":[{"errorCall":{"arguments":[{"id":3475,"name":"controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"13488:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3474,"name":"IncorrectTargetOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"13467:20:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13467:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3477,"nodeType":"RevertStatement","src":"13460:39:20"}]}},{"expression":{"arguments":[{"arguments":[{"id":3482,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"13537:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3483,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"13549:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3481,"name":"_makeNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"13527:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13527:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3485,"name":"controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"13561:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3480,"name":"_unwrap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"13519:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13519:53:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3487,"nodeType":"ExpressionStatement","src":"13519:53:20"}]},"documentation":{"id":3437,"nodeType":"StructuredDocumentation","src":"12638:470:20","text":" @notice Unwraps a non .eth domain, of any kind. Could be a DNSSEC name vitalik.xyz or a subdomain\n @dev Can be called by the owner in the wrapper or an authorised caller in the wrapper\n @param parentNode Parent namehash of the name e.g. vitalik.xyz would be namehash('xyz')\n @param labelhash Labelhash of the name, e.g. vitalik.xyz would be keccak256('vitalik')\n @param controller Sets the owner in the registry to this address"},"functionSelector":"d8c9921a","id":3489,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":3448,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"13260:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3449,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"13272:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3447,"name":"_makeNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"13250:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13250:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3451,"kind":"modifierInvocation","modifierName":{"id":3446,"name":"onlyTokenOwner","nameLocations":["13235:14:20"],"nodeType":"IdentifierPath","referencedDeclaration":2992,"src":"13235:14:20"},"nodeType":"ModifierInvocation","src":"13235:48:20"}],"name":"unwrap","nameLocation":"13123:6:20","nodeType":"FunctionDefinition","overrides":{"id":3445,"nodeType":"OverrideSpecifier","overrides":[],"src":"13226:8:20"},"parameters":{"id":3444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3439,"mutability":"mutable","name":"parentNode","nameLocation":"13147:10:20","nodeType":"VariableDeclaration","scope":3489,"src":"13139:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13139:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3441,"mutability":"mutable","name":"labelhash","nameLocation":"13175:9:20","nodeType":"VariableDeclaration","scope":3489,"src":"13167:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3440,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13167:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3443,"mutability":"mutable","name":"controller","nameLocation":"13202:10:20","nodeType":"VariableDeclaration","scope":3489,"src":"13194:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3442,"name":"address","nodeType":"ElementaryTypeName","src":"13194:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13129:89:20"},"returnParameters":{"id":3452,"nodeType":"ParameterList","parameters":[],"src":"13284:0:20"},"scope":5349,"src":"13114:465:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2429],"body":{"id":3531,"nodeType":"Block","src":"13953:274:20","statements":[{"assignments":[3507,3509,3511],"declarations":[{"constant":false,"id":3507,"mutability":"mutable","name":"owner","nameLocation":"14017:5:20","nodeType":"VariableDeclaration","scope":3531,"src":"14009:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3506,"name":"address","nodeType":"ElementaryTypeName","src":"14009:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3509,"mutability":"mutable","name":"oldFuses","nameLocation":"14031:8:20","nodeType":"VariableDeclaration","scope":3531,"src":"14024:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3508,"name":"uint32","nodeType":"ElementaryTypeName","src":"14024:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3511,"mutability":"mutable","name":"expiry","nameLocation":"14048:6:20","nodeType":"VariableDeclaration","scope":3531,"src":"14041:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3510,"name":"uint64","nodeType":"ElementaryTypeName","src":"14041:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":3518,"initialValue":{"arguments":[{"arguments":[{"id":3515,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"14087:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14079:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3513,"name":"uint256","nodeType":"ElementaryTypeName","src":"14079:7:20","typeDescriptions":{}}},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14079:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3512,"name":"getData","nodeType":"Identifier","overloadedDeclarations":[2866],"referencedDeclaration":2866,"src":"14058:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (uint256) view returns (address,uint32,uint64)"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14058:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"14008:94:20"},{"expression":{"arguments":[{"id":3520,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"14122:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3521,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"14128:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3522,"name":"ownerControlledFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"14135:20:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":3523,"name":"oldFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"14158:8:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"14135:31:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3525,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"14168:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3526,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"14176:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3519,"name":"_setFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"14112:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_uint32_$_t_uint64_$_t_uint64_$returns$__$","typeString":"function (bytes32,address,uint32,uint64,uint64)"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14112:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3528,"nodeType":"ExpressionStatement","src":"14112:71:20"},{"expression":{"id":3529,"name":"ownerControlledFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"14200:20:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":3505,"id":3530,"nodeType":"Return","src":"14193:27:20"}]},"documentation":{"id":3490,"nodeType":"StructuredDocumentation","src":"13585:178:20","text":" @notice Sets fuses of a name\n @param node Namehash of the name\n @param ownerControlledFuses Owner-controlled fuses to burn\n @return New fuses"},"functionSelector":"402906fc","id":3532,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3497,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"13868:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3498,"kind":"modifierInvocation","modifierName":{"id":3496,"name":"onlyTokenOwner","nameLocations":["13853:14:20"],"nodeType":"IdentifierPath","referencedDeclaration":2992,"src":"13853:14:20"},"nodeType":"ModifierInvocation","src":"13853:20:20"},{"arguments":[{"id":3500,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"13899:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3501,"name":"CANNOT_BURN_FUSES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"13905:17:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":3502,"kind":"modifierInvocation","modifierName":{"id":3499,"name":"operationAllowed","nameLocations":["13882:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":4293,"src":"13882:16:20"},"nodeType":"ModifierInvocation","src":"13882:41:20"}],"name":"setFuses","nameLocation":"13778:8:20","nodeType":"FunctionDefinition","parameters":{"id":3495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3492,"mutability":"mutable","name":"node","nameLocation":"13795:4:20","nodeType":"VariableDeclaration","scope":3532,"src":"13787:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13787:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3494,"mutability":"mutable","name":"ownerControlledFuses","nameLocation":"13808:20:20","nodeType":"VariableDeclaration","scope":3532,"src":"13801:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3493,"name":"uint16","nodeType":"ElementaryTypeName","src":"13801:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"13786:43:20"},"returnParameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3532,"src":"13941:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3503,"name":"uint32","nodeType":"ElementaryTypeName","src":"13941:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13940:8:20"},"scope":5349,"src":"13769:458:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2496],"body":{"id":3634,"nodeType":"Block","src":"14715:1041:20","statements":[{"assignments":[3545],"declarations":[{"constant":false,"id":3545,"mutability":"mutable","name":"node","nameLocation":"14733:4:20","nodeType":"VariableDeclaration","scope":3634,"src":"14725:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14725:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3550,"initialValue":{"arguments":[{"id":3547,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"14750:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3548,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"14762:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3546,"name":"_makeNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"14740:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14740:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"14725:47:20"},{"assignments":[3552],"declarations":[{"constant":false,"id":3552,"mutability":"mutable","name":"canModifyParentName","nameLocation":"14844:19:20","nodeType":"VariableDeclaration","scope":3634,"src":"14839:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3551,"name":"bool","nodeType":"ElementaryTypeName","src":"14839:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3558,"initialValue":{"arguments":[{"id":3554,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"14880:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3555,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14892:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14896:6:20","memberName":"sender","nodeType":"MemberAccess","src":"14892:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3553,"name":"canModifyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"14866:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14866:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"14839:64:20"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14989:20:20","subExpression":{"id":3559,"name":"canModifyParentName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"14990:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15013:32:20","subExpression":{"arguments":[{"id":3562,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"15028:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3563,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15034:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15038:6:20","memberName":"sender","nodeType":"MemberAccess","src":"15034:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3561,"name":"canModifyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"15014:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15014:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14989:56:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3575,"nodeType":"IfStatement","src":"14985:124:20","trueBody":{"id":3574,"nodeType":"Block","src":"15047:62:20","statements":[{"errorCall":{"arguments":[{"id":3569,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"15081:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3570,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15087:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15091:6:20","memberName":"sender","nodeType":"MemberAccess","src":"15087:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3568,"name":"Unauthorised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"15068:12:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) pure"}},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15068:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3573,"nodeType":"RevertStatement","src":"15061:37:20"}]}},{"assignments":[3577,3579,3581],"declarations":[{"constant":false,"id":3577,"mutability":"mutable","name":"owner","nameLocation":"15128:5:20","nodeType":"VariableDeclaration","scope":3634,"src":"15120:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3576,"name":"address","nodeType":"ElementaryTypeName","src":"15120:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3579,"mutability":"mutable","name":"fuses","nameLocation":"15142:5:20","nodeType":"VariableDeclaration","scope":3634,"src":"15135:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3578,"name":"uint32","nodeType":"ElementaryTypeName","src":"15135:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3581,"mutability":"mutable","name":"oldExpiry","nameLocation":"15156:9:20","nodeType":"VariableDeclaration","scope":3634,"src":"15149:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3580,"name":"uint64","nodeType":"ElementaryTypeName","src":"15149:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":3588,"initialValue":{"arguments":[{"arguments":[{"id":3585,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"15198:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15190:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3583,"name":"uint256","nodeType":"ElementaryTypeName","src":"15190:7:20","typeDescriptions":{}}},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15190:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3582,"name":"getData","nodeType":"Identifier","overloadedDeclarations":[2866],"referencedDeclaration":2866,"src":"15169:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (uint256) view returns (address,uint32,uint64)"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15169:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"15119:94:20"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15338:20:20","subExpression":{"id":3589,"name":"canModifyParentName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"15339:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3591,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"15362:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3592,"name":"CAN_EXTEND_EXPIRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"15370:17:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15362:25:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15391:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15362:30:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15338:54:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3602,"nodeType":"IfStatement","src":"15334:117:20","trueBody":{"id":3601,"nodeType":"Block","src":"15394:57:20","statements":[{"errorCall":{"arguments":[{"id":3598,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"15435:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3597,"name":"OperationProhibited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"15415:19:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15415:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3600,"nodeType":"RevertStatement","src":"15408:32:20"}]}},{"assignments":[null,null,3604],"declarations":[null,null,{"constant":false,"id":3604,"mutability":"mutable","name":"maxExpiry","nameLocation":"15530:9:20","nodeType":"VariableDeclaration","scope":3634,"src":"15523:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3603,"name":"uint64","nodeType":"ElementaryTypeName","src":"15523:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":3611,"initialValue":{"arguments":[{"arguments":[{"id":3608,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"15559:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15551:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3606,"name":"uint256","nodeType":"ElementaryTypeName","src":"15551:7:20","typeDescriptions":{}}},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15551:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3605,"name":"getData","nodeType":"Identifier","overloadedDeclarations":[2866],"referencedDeclaration":2866,"src":"15543:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (uint256) view returns (address,uint32,uint64)"}},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"15518:53:20"},{"expression":{"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3612,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"15581:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3614,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"15607:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3615,"name":"oldExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"15615:9:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3616,"name":"maxExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"15626:9:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3613,"name":"_normaliseExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"15590:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint64_$_t_uint64_$_t_uint64_$returns$_t_uint64_$","typeString":"function (uint64,uint64,uint64) pure returns (uint64)"}},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15590:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"15581:55:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3619,"nodeType":"ExpressionStatement","src":"15581:55:20"},{"expression":{"arguments":[{"id":3621,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"15656:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3622,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"15662:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3623,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"15669:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3624,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"15676:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3620,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[5297,1834],"referencedDeclaration":5297,"src":"15647:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_uint32_$_t_uint64_$returns$__$","typeString":"function (bytes32,address,uint32,uint64)"}},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15647:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3626,"nodeType":"ExpressionStatement","src":"15647:36:20"},{"eventCall":{"arguments":[{"id":3628,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"15713:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3629,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"15719:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3627,"name":"ExpiryExtended","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"15698:14:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint64_$returns$__$","typeString":"function (bytes32,uint64)"}},"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15698:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3631,"nodeType":"EmitStatement","src":"15693:33:20"},{"expression":{"id":3632,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"15743:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":3543,"id":3633,"nodeType":"Return","src":"15736:13:20"}]},"documentation":{"id":3533,"nodeType":"StructuredDocumentation","src":"14233:346:20","text":" @notice Extends expiry for a name\n @param parentNode Parent namehash of the name e.g. vitalik.xyz would be namehash('xyz')\n @param labelhash Labelhash of the name, e.g. vitalik.xyz would be keccak256('vitalik')\n @param expiry When the name will expire in seconds since the Unix epoch\n @return New expiry"},"functionSelector":"6e5d6ad2","id":3635,"implemented":true,"kind":"function","modifiers":[],"name":"extendExpiry","nameLocation":"14594:12:20","nodeType":"FunctionDefinition","parameters":{"id":3540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3535,"mutability":"mutable","name":"parentNode","nameLocation":"14624:10:20","nodeType":"VariableDeclaration","scope":3635,"src":"14616:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14616:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3537,"mutability":"mutable","name":"labelhash","nameLocation":"14652:9:20","nodeType":"VariableDeclaration","scope":3635,"src":"14644:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3536,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14644:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3539,"mutability":"mutable","name":"expiry","nameLocation":"14678:6:20","nodeType":"VariableDeclaration","scope":3635,"src":"14671:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3538,"name":"uint64","nodeType":"ElementaryTypeName","src":"14671:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"14606:84:20"},"returnParameters":{"id":3543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3635,"src":"14707:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3541,"name":"uint64","nodeType":"ElementaryTypeName","src":"14707:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"14706:8:20"},"scope":5349,"src":"14585:1171:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3695,"nodeType":"Block","src":"16247:491:20","statements":[{"assignments":[3646],"declarations":[{"constant":false,"id":3646,"mutability":"mutable","name":"labelhash","nameLocation":"16265:9:20","nodeType":"VariableDeclaration","scope":3695,"src":"16257:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16257:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3653,"initialValue":{"arguments":[{"arguments":[{"id":3650,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"16293:5:20","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":3649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16287:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3648,"name":"bytes","nodeType":"ElementaryTypeName","src":"16287:5:20","typeDescriptions":{}}},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16287:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3647,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"16277:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16277:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"16257:43:20"},{"assignments":[3655],"declarations":[{"constant":false,"id":3655,"mutability":"mutable","name":"node","nameLocation":"16318:4:20","nodeType":"VariableDeclaration","scope":3695,"src":"16310:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3654,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16310:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3660,"initialValue":{"arguments":[{"id":3657,"name":"ETH_NODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"16335:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3658,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"16345:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3656,"name":"_makeNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"16325:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16325:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"16310:45:20"},{"assignments":[3662,3664,3666],"declarations":[{"constant":false,"id":3662,"mutability":"mutable","name":"currentOwner","nameLocation":"16374:12:20","nodeType":"VariableDeclaration","scope":3695,"src":"16366:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3661,"name":"address","nodeType":"ElementaryTypeName","src":"16366:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3664,"mutability":"mutable","name":"fuses","nameLocation":"16395:5:20","nodeType":"VariableDeclaration","scope":3695,"src":"16388:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3663,"name":"uint32","nodeType":"ElementaryTypeName","src":"16388:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3666,"mutability":"mutable","name":"expiry","nameLocation":"16409:6:20","nodeType":"VariableDeclaration","scope":3695,"src":"16402:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3665,"name":"uint64","nodeType":"ElementaryTypeName","src":"16402:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":3670,"initialValue":{"arguments":[{"id":3668,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"16448:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3667,"name":"_prepareUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4909,"src":"16419:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (bytes32) returns (address,uint32,uint64)"}},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16419:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"16365:97:20"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3671,"name":"wrappedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"16477:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3672,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"16493:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16477:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3684,"nodeType":"IfStatement","src":"16473:106:20","trueBody":{"id":3683,"nodeType":"Block","src":"16507:72:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":3677,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"16547:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16539:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3675,"name":"uint256","nodeType":"ElementaryTypeName","src":"16539:7:20","typeDescriptions":{}}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16539:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3679,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"16554:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3680,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"16561:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3674,"name":"_preTransferCheck","nodeType":"Identifier","overloadedDeclarations":[4589],"referencedDeclaration":4589,"src":"16521:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint32_$_t_uint64_$returns$_t_bool_$","typeString":"function (uint256,uint32,uint64) view returns (bool)"}},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16521:47:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3682,"nodeType":"ExpressionStatement","src":"16521:47:20"}]}},{"expression":{"arguments":[{"id":3688,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"16629:5:20","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":3689,"name":"wrappedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"16648:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3690,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"16674:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3691,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"16693:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3692,"name":"resolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"16713:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3685,"name":"upgradeContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"16589:15:20","typeDescriptions":{"typeIdentifier":"t_contract$_INameWrapperUpgrade_$2580","typeString":"contract INameWrapperUpgrade"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16605:10:20","memberName":"wrapETH2LD","nodeType":"MemberAccess","referencedDeclaration":2579,"src":"16589:26:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint32_$_t_uint64_$_t_address_$returns$__$","typeString":"function (string memory,address,uint32,uint64,address) external"}},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16589:142:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3694,"nodeType":"ExpressionStatement","src":"16589:142:20"}]},"documentation":{"id":3636,"nodeType":"StructuredDocumentation","src":"15762:356:20","text":" @notice Upgrades a .eth wrapped domain by calling the wrapETH2LD function of the upgradeContract\n     and burning the token of this contract\n @dev Can be called by the owner of the name in this contract\n @param label Label as a string of the .eth name to upgrade\n @param wrappedOwner The owner of the wrapped name"},"functionSelector":"e72bf00f","id":3696,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeETH2LD","nameLocation":"16133:13:20","nodeType":"FunctionDefinition","parameters":{"id":3643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3638,"mutability":"mutable","name":"label","nameLocation":"16172:5:20","nodeType":"VariableDeclaration","scope":3696,"src":"16156:21:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3637,"name":"string","nodeType":"ElementaryTypeName","src":"16156:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3640,"mutability":"mutable","name":"wrappedOwner","nameLocation":"16195:12:20","nodeType":"VariableDeclaration","scope":3696,"src":"16187:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3639,"name":"address","nodeType":"ElementaryTypeName","src":"16187:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3642,"mutability":"mutable","name":"resolver","nameLocation":"16225:8:20","nodeType":"VariableDeclaration","scope":3696,"src":"16217:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3641,"name":"address","nodeType":"ElementaryTypeName","src":"16217:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16146:93:20"},"returnParameters":{"id":3644,"nodeType":"ParameterList","parameters":[],"src":"16247:0:20"},"scope":5349,"src":"16124:614:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3760,"nodeType":"Block","src":"17409:538:20","statements":[{"assignments":[3709],"declarations":[{"constant":false,"id":3709,"mutability":"mutable","name":"labelhash","nameLocation":"17427:9:20","nodeType":"VariableDeclaration","scope":3760,"src":"17419:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17419:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3716,"initialValue":{"arguments":[{"arguments":[{"id":3713,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"17455:5:20","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":3712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17449:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3711,"name":"bytes","nodeType":"ElementaryTypeName","src":"17449:5:20","typeDescriptions":{}}},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17449:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3710,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"17439:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17439:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"17419:43:20"},{"assignments":[3718],"declarations":[{"constant":false,"id":3718,"mutability":"mutable","name":"node","nameLocation":"17480:4:20","nodeType":"VariableDeclaration","scope":3760,"src":"17472:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17472:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3723,"initialValue":{"arguments":[{"id":3720,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"17497:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3721,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"17509:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3719,"name":"_makeNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"17487:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17487:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"17472:47:20"},{"assignments":[3725,3727,3729],"declarations":[{"constant":false,"id":3725,"mutability":"mutable","name":"currentOwner","nameLocation":"17538:12:20","nodeType":"VariableDeclaration","scope":3760,"src":"17530:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3724,"name":"address","nodeType":"ElementaryTypeName","src":"17530:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3727,"mutability":"mutable","name":"fuses","nameLocation":"17559:5:20","nodeType":"VariableDeclaration","scope":3760,"src":"17552:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3726,"name":"uint32","nodeType":"ElementaryTypeName","src":"17552:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3729,"mutability":"mutable","name":"expiry","nameLocation":"17573:6:20","nodeType":"VariableDeclaration","scope":3760,"src":"17566:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3728,"name":"uint64","nodeType":"ElementaryTypeName","src":"17566:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":3733,"initialValue":{"arguments":[{"id":3731,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"17612:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3730,"name":"_prepareUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4909,"src":"17583:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (bytes32) returns (address,uint32,uint64)"}},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"17529:97:20"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3734,"name":"wrappedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"17641:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3735,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"17657:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17641:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3747,"nodeType":"IfStatement","src":"17637:106:20","trueBody":{"id":3746,"nodeType":"Block","src":"17671:72:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":3740,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"17711:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17703:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3738,"name":"uint256","nodeType":"ElementaryTypeName","src":"17703:7:20","typeDescriptions":{}}},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17703:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3742,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"17718:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3743,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"17725:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3737,"name":"_preTransferCheck","nodeType":"Identifier","overloadedDeclarations":[4589],"referencedDeclaration":4589,"src":"17685:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint32_$_t_uint64_$returns$_t_bool_$","typeString":"function (uint256,uint32,uint64) view returns (bool)"}},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17685:47:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3745,"nodeType":"ExpressionStatement","src":"17685:47:20"}]}},{"expression":{"arguments":[{"id":3751,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"17799:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3752,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"17823:5:20","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":3753,"name":"wrappedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"17842:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3754,"name":"resolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"17868:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17890:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3756,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"17905:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3757,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"17924:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":3748,"name":"upgradeContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"17753:15:20","typeDescriptions":{"typeIdentifier":"t_contract$_INameWrapperUpgrade_$2580","typeString":"contract INameWrapperUpgrade"}},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17769:16:20","memberName":"setSubnodeRecord","nodeType":"MemberAccess","referencedDeclaration":2566,"src":"17753:32:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_uint64_$_t_uint32_$_t_uint64_$returns$__$","typeString":"function (bytes32,string memory,address,address,uint64,uint32,uint64) external"}},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17753:187:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3759,"nodeType":"ExpressionStatement","src":"17753:187:20"}]},"documentation":{"id":3697,"nodeType":"StructuredDocumentation","src":"16744:514:20","text":" @notice Upgrades a non .eth domain of any kind. Could be a DNSSEC name vitalik.xyz or a subdomain\n @dev Can be called by the owner or an authorised caller\n Requires upgraded Namewrapper to permit old Namewrapper to call `setSubnodeRecord` for all names\n @param parentNode Namehash of the parent name\n @param label Label as a string of the name to upgrade\n @param wrappedOwner Owner of the name in this contract\n @param resolver Resolver contract for this name"},"functionSelector":"ee7eba78","id":3761,"implemented":true,"kind":"function","modifiers":[],"name":"upgrade","nameLocation":"17273:7:20","nodeType":"FunctionDefinition","parameters":{"id":3706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3699,"mutability":"mutable","name":"parentNode","nameLocation":"17298:10:20","nodeType":"VariableDeclaration","scope":3761,"src":"17290:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3698,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17290:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3701,"mutability":"mutable","name":"label","nameLocation":"17334:5:20","nodeType":"VariableDeclaration","scope":3761,"src":"17318:21:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3700,"name":"string","nodeType":"ElementaryTypeName","src":"17318:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3703,"mutability":"mutable","name":"wrappedOwner","nameLocation":"17357:12:20","nodeType":"VariableDeclaration","scope":3761,"src":"17349:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3702,"name":"address","nodeType":"ElementaryTypeName","src":"17349:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3705,"mutability":"mutable","name":"resolver","nameLocation":"17387:8:20","nodeType":"VariableDeclaration","scope":3761,"src":"17379:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3704,"name":"address","nodeType":"ElementaryTypeName","src":"17379:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17280:121:20"},"returnParameters":{"id":3707,"nodeType":"ParameterList","parameters":[],"src":"17409:0:20"},"scope":5349,"src":"17264:683:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2440],"body":{"id":3907,"nodeType":"Block","src":"18520:1244:20","statements":[{"assignments":[3774],"declarations":[{"constant":false,"id":3774,"mutability":"mutable","name":"node","nameLocation":"18538:4:20","nodeType":"VariableDeclaration","scope":3907,"src":"18530:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18530:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3779,"initialValue":{"arguments":[{"id":3776,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"18555:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3777,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"18567:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3775,"name":"_makeNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"18545:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18545:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"18530:47:20"},{"expression":{"arguments":[{"id":3781,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"18610:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3782,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"18616:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":3780,"name":"_checkFusesAreSettable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"18587:22:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint32_$returns$__$","typeString":"function (bytes32,uint32) pure"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18587:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3784,"nodeType":"ExpressionStatement","src":"18587:35:20"},{"assignments":[3786,3788,3790],"declarations":[{"constant":false,"id":3786,"mutability":"mutable","name":"owner","nameLocation":"18641:5:20","nodeType":"VariableDeclaration","scope":3907,"src":"18633:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3785,"name":"address","nodeType":"ElementaryTypeName","src":"18633:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3788,"mutability":"mutable","name":"oldFuses","nameLocation":"18655:8:20","nodeType":"VariableDeclaration","scope":3907,"src":"18648:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3787,"name":"uint32","nodeType":"ElementaryTypeName","src":"18648:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3790,"mutability":"mutable","name":"oldExpiry","nameLocation":"18672:9:20","nodeType":"VariableDeclaration","scope":3907,"src":"18665:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3789,"name":"uint64","nodeType":"ElementaryTypeName","src":"18665:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":3797,"initialValue":{"arguments":[{"arguments":[{"id":3794,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"18714:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18706:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3792,"name":"uint256","nodeType":"ElementaryTypeName","src":"18706:7:20","typeDescriptions":{}}},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18706:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3791,"name":"getData","nodeType":"Identifier","overloadedDeclarations":[2866],"referencedDeclaration":2866,"src":"18685:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (uint256) view returns (address,uint32,uint64)"}},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18685:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"18632:97:20"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3798,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"18743:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18760:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18752:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3799,"name":"address","nodeType":"ElementaryTypeName","src":"18752:7:20","typeDescriptions":{}}},"id":3802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18752:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18743:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3806,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"18776:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3804,"name":"ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"18766:3:20","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"}},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18770:5:20","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1091,"src":"18766:9:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18766:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":3810,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"18793:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}],"id":3809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18785:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3808,"name":"address","nodeType":"ElementaryTypeName","src":"18785:7:20","typeDescriptions":{}}},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18785:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18766:32:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18743:55:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3818,"nodeType":"IfStatement","src":"18739:111:20","trueBody":{"id":3817,"nodeType":"Block","src":"18800:50:20","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3814,"name":"NameIsNotWrapped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"18821:16:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18821:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3816,"nodeType":"RevertStatement","src":"18814:25:20"}]}},{"assignments":[null,3820,3822],"declarations":[null,{"constant":false,"id":3820,"mutability":"mutable","name":"parentFuses","nameLocation":"18926:11:20","nodeType":"VariableDeclaration","scope":3907,"src":"18919:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3819,"name":"uint32","nodeType":"ElementaryTypeName","src":"18919:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3822,"mutability":"mutable","name":"maxExpiry","nameLocation":"18946:9:20","nodeType":"VariableDeclaration","scope":3907,"src":"18939:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3821,"name":"uint64","nodeType":"ElementaryTypeName","src":"18939:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":3829,"initialValue":{"arguments":[{"arguments":[{"id":3826,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"18975:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18967:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3824,"name":"uint256","nodeType":"ElementaryTypeName","src":"18967:7:20","typeDescriptions":{}}},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18967:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3823,"name":"getData","nodeType":"Identifier","overloadedDeclarations":[2866],"referencedDeclaration":2866,"src":"18959:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (uint256) view returns (address,uint32,uint64)"}},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18959:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"18916:71:20"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3830,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"19001:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3831,"name":"ROOT_NODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"19015:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"19001:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3862,"nodeType":"Block","src":"19164:138:20","statements":[{"condition":{"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19182:38:20","subExpression":{"arguments":[{"id":3849,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"19197:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3850,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19209:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19213:6:20","memberName":"sender","nodeType":"MemberAccess","src":"19209:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3848,"name":"canModifyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"19183:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19183:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3861,"nodeType":"IfStatement","src":"19178:114:20","trueBody":{"id":3860,"nodeType":"Block","src":"19222:70:20","statements":[{"errorCall":{"arguments":[{"id":3855,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"19260:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3856,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19266:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19270:6:20","memberName":"sender","nodeType":"MemberAccess","src":"19266:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3854,"name":"Unauthorised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"19247:12:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) pure"}},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19247:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3859,"nodeType":"RevertStatement","src":"19240:37:20"}]}}]},"id":3863,"nodeType":"IfStatement","src":"18997:305:20","trueBody":{"id":3847,"nodeType":"Block","src":"19026:132:20","statements":[{"condition":{"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19044:32:20","subExpression":{"arguments":[{"id":3834,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"19059:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3835,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19065:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19069:6:20","memberName":"sender","nodeType":"MemberAccess","src":"19065:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3833,"name":"canModifyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"19045:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19045:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3846,"nodeType":"IfStatement","src":"19040:108:20","trueBody":{"id":3845,"nodeType":"Block","src":"19078:70:20","statements":[{"errorCall":{"arguments":[{"id":3840,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"19116:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3841,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19122:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19126:6:20","memberName":"sender","nodeType":"MemberAccess","src":"19122:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3839,"name":"Unauthorised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"19103:12:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) pure"}},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19103:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3844,"nodeType":"RevertStatement","src":"19096:37:20"}]}}]}},{"expression":{"arguments":[{"id":3865,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"19330:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3866,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"19336:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3867,"name":"parentFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"19343:11:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":3864,"name":"_checkParentFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"19312:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint32_$_t_uint32_$returns$__$","typeString":"function (bytes32,uint32,uint32) pure"}},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19312:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3869,"nodeType":"ExpressionStatement","src":"19312:43:20"},{"expression":{"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3870,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"19366:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3872,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"19392:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3873,"name":"oldExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"19400:9:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3874,"name":"maxExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"19411:9:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3871,"name":"_normaliseExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"19375:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint64_$_t_uint64_$_t_uint64_$returns$_t_uint64_$","typeString":"function (uint64,uint64,uint64) pure returns (uint64)"}},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19375:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"19366:55:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3877,"nodeType":"ExpressionStatement","src":"19366:55:20"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3878,"name":"oldFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"19524:8:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3879,"name":"PARENT_CANNOT_CONTROL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"19535:21:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"19524:32:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19560:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19524:37:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3883,"name":"oldFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"19577:8:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":3884,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"19588:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"19577:16:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3886,"name":"oldFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"19597:8:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"19577:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19524:81:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3894,"nodeType":"IfStatement","src":"19507:166:20","trueBody":{"id":3893,"nodeType":"Block","src":"19616:57:20","statements":[{"errorCall":{"arguments":[{"id":3890,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"19657:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3889,"name":"OperationProhibited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"19637:19:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19637:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3892,"nodeType":"RevertStatement","src":"19630:32:20"}]}},{"expression":{"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3895,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"19682:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"id":3896,"name":"oldFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"19691:8:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"19682:17:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":3898,"nodeType":"ExpressionStatement","src":"19682:17:20"},{"expression":{"arguments":[{"id":3900,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"19719:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3901,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"19725:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3902,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"19732:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3903,"name":"oldExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"19739:9:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3904,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"19750:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3899,"name":"_setFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"19709:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_uint32_$_t_uint64_$_t_uint64_$returns$__$","typeString":"function (bytes32,address,uint32,uint64,uint64)"}},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19709:48:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3906,"nodeType":"ExpressionStatement","src":"19709:48:20"}]},"documentation":{"id":3762,"nodeType":"StructuredDocumentation","src":"17953:425:20","text":"/* @notice Sets fuses of a name that you own the parent of. Can also be called by the owner of a .eth name\n @param parentNode Parent namehash of the name e.g. vitalik.xyz would be namehash('xyz')\n @param labelhash Labelhash of the name, e.g. vitalik.xyz would be keccak256('vitalik')\n @param fuses Fuses to burn\n @param expiry When the name will expire in seconds since the Unix epoch"},"functionSelector":"33c69ea9","id":3908,"implemented":true,"kind":"function","modifiers":[],"name":"setChildFuses","nameLocation":"18393:13:20","nodeType":"FunctionDefinition","parameters":{"id":3771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3764,"mutability":"mutable","name":"parentNode","nameLocation":"18424:10:20","nodeType":"VariableDeclaration","scope":3908,"src":"18416:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3763,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18416:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3766,"mutability":"mutable","name":"labelhash","nameLocation":"18452:9:20","nodeType":"VariableDeclaration","scope":3908,"src":"18444:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3765,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18444:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3768,"mutability":"mutable","name":"fuses","nameLocation":"18478:5:20","nodeType":"VariableDeclaration","scope":3908,"src":"18471:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3767,"name":"uint32","nodeType":"ElementaryTypeName","src":"18471:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3770,"mutability":"mutable","name":"expiry","nameLocation":"18500:6:20","nodeType":"VariableDeclaration","scope":3908,"src":"18493:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3769,"name":"uint64","nodeType":"ElementaryTypeName","src":"18493:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"18406:106:20"},"returnParameters":{"id":3772,"nodeType":"ParameterList","parameters":[],"src":"18520:0:20"},"scope":5349,"src":"18384:1380:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2485],"body":{"id":4005,"nodeType":"Block","src":"20430:609:20","statements":[{"assignments":[3928],"declarations":[{"constant":false,"id":3928,"mutability":"mutable","name":"labelhash","nameLocation":"20448:9:20","nodeType":"VariableDeclaration","scope":4005,"src":"20440:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3927,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20440:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3935,"initialValue":{"arguments":[{"arguments":[{"id":3932,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"20476:5:20","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":3931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20470:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3930,"name":"bytes","nodeType":"ElementaryTypeName","src":"20470:5:20","typeDescriptions":{}}},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20470:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3929,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"20460:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20460:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"20440:43:20"},{"expression":{"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3936,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"20493:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3938,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"20510:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3939,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"20522:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3937,"name":"_makeNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"20500:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20500:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"20493:39:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3942,"nodeType":"ExpressionStatement","src":"20493:39:20"},{"expression":{"arguments":[{"id":3944,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"20571:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3945,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"20583:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3943,"name":"_checkCanCallSetSubnodeOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"20542:28:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32) view"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20542:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3947,"nodeType":"ExpressionStatement","src":"20542:46:20"},{"expression":{"arguments":[{"id":3949,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"20621:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3950,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"20627:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":3948,"name":"_checkFusesAreSettable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"20598:22:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint32_$returns$__$","typeString":"function (bytes32,uint32) pure"}},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20598:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3952,"nodeType":"ExpressionStatement","src":"20598:35:20"},{"assignments":[3954],"declarations":[{"constant":false,"id":3954,"mutability":"mutable","name":"name","nameLocation":"20656:4:20","nodeType":"VariableDeclaration","scope":4005,"src":"20643:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3953,"name":"bytes","nodeType":"ElementaryTypeName","src":"20643:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3960,"initialValue":{"arguments":[{"id":3956,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"20674:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3957,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"20686:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3958,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"20692:5:20","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":3955,"name":"_saveLabel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"20663:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes32,string memory) returns (bytes memory)"}},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20663:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"20643:55:20"},{"expression":{"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3961,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"20708:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3963,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"20744:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3964,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"20756:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3965,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"20762:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3966,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"20769:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3962,"name":"_checkParentFusesAndExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"20717:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_uint32_$_t_uint64_$returns$_t_uint64_$","typeString":"function (bytes32,bytes32,uint32,uint64) view returns (uint64)"}},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20717:59:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"20708:68:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3969,"nodeType":"ExpressionStatement","src":"20708:68:20"},{"condition":{"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"20791:16:20","subExpression":{"arguments":[{"id":3971,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"20802:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3970,"name":"isWrapped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"20792:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32) view returns (bool)"}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20792:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4003,"nodeType":"Block","src":"20950:83:20","statements":[{"expression":{"arguments":[{"id":3995,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"20976:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3996,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"20988:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3997,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"20994:5:20","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":3998,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"21001:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3999,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"21008:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4000,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"21015:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3994,"name":"_updateName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"20964:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$_t_address_$_t_uint32_$_t_uint64_$returns$__$","typeString":"function (bytes32,bytes32,string memory,address,uint32,uint64)"}},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20964:58:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4002,"nodeType":"ExpressionStatement","src":"20964:58:20"}]},"id":4004,"nodeType":"IfStatement","src":"20787:246:20","trueBody":{"id":3993,"nodeType":"Block","src":"20809:135:20","statements":[{"expression":{"arguments":[{"id":3977,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"20843:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3978,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"20855:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":3981,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"20874:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}],"id":3980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20866:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3979,"name":"address","nodeType":"ElementaryTypeName","src":"20866:7:20","typeDescriptions":{}}},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20866:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3974,"name":"ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"20823:3:20","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"}},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20827:15:20","memberName":"setSubnodeOwner","nodeType":"MemberAccess","referencedDeclaration":1056,"src":"20823:19:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,address) external returns (bytes32)"}},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20823:57:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3984,"nodeType":"ExpressionStatement","src":"20823:57:20"},{"expression":{"arguments":[{"id":3986,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"20900:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3987,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"20906:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3988,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"20912:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3989,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"20919:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3990,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"20926:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3985,"name":"_wrap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"20894:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint32_$_t_uint64_$returns$__$","typeString":"function (bytes32,bytes memory,address,uint32,uint64)"}},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20894:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3992,"nodeType":"ExpressionStatement","src":"20894:39:20"}]}}]},"documentation":{"id":3909,"nodeType":"StructuredDocumentation","src":"19770:439:20","text":" @notice Sets the subdomain owner in the registry and then wraps the subdomain\n @param parentNode Parent namehash of the subdomain\n @param label Label of the subdomain as a string\n @param owner New owner in the wrapper\n @param fuses Initial fuses for the wrapped subdomain\n @param expiry When the name will expire in seconds since the Unix epoch\n @return node Namehash of the subdomain"},"functionSelector":"c658e086","id":4006,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3922,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"20395:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3923,"kind":"modifierInvocation","modifierName":{"id":3921,"name":"onlyTokenOwner","nameLocations":["20380:14:20"],"nodeType":"IdentifierPath","referencedDeclaration":2992,"src":"20380:14:20"},"nodeType":"ModifierInvocation","src":"20380:26:20"}],"name":"setSubnodeOwner","nameLocation":"20224:15:20","nodeType":"FunctionDefinition","parameters":{"id":3920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3911,"mutability":"mutable","name":"parentNode","nameLocation":"20257:10:20","nodeType":"VariableDeclaration","scope":4006,"src":"20249:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3910,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20249:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3913,"mutability":"mutable","name":"label","nameLocation":"20293:5:20","nodeType":"VariableDeclaration","scope":4006,"src":"20277:21:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3912,"name":"string","nodeType":"ElementaryTypeName","src":"20277:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3915,"mutability":"mutable","name":"owner","nameLocation":"20316:5:20","nodeType":"VariableDeclaration","scope":4006,"src":"20308:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3914,"name":"address","nodeType":"ElementaryTypeName","src":"20308:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3917,"mutability":"mutable","name":"fuses","nameLocation":"20338:5:20","nodeType":"VariableDeclaration","scope":4006,"src":"20331:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3916,"name":"uint32","nodeType":"ElementaryTypeName","src":"20331:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3919,"mutability":"mutable","name":"expiry","nameLocation":"20360:6:20","nodeType":"VariableDeclaration","scope":4006,"src":"20353:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3918,"name":"uint64","nodeType":"ElementaryTypeName","src":"20353:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"20239:133:20"},"returnParameters":{"id":3926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3925,"mutability":"mutable","name":"node","nameLocation":"20424:4:20","nodeType":"VariableDeclaration","scope":4006,"src":"20416:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20416:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20415:14:20"},"scope":5349,"src":"20215:824:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2459],"body":{"id":4121,"nodeType":"Block","src":"21858:904:20","statements":[{"assignments":[4030],"declarations":[{"constant":false,"id":4030,"mutability":"mutable","name":"labelhash","nameLocation":"21876:9:20","nodeType":"VariableDeclaration","scope":4121,"src":"21868:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4029,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21868:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4037,"initialValue":{"arguments":[{"arguments":[{"id":4034,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"21904:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21898:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4032,"name":"bytes","nodeType":"ElementaryTypeName","src":"21898:5:20","typeDescriptions":{}}},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21898:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4031,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"21888:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21888:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"21868:43:20"},{"expression":{"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4038,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"21921:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4040,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"21938:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4041,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"21950:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4039,"name":"_makeNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"21928:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21928:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"21921:39:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4044,"nodeType":"ExpressionStatement","src":"21921:39:20"},{"expression":{"arguments":[{"id":4046,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"21999:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4047,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"22011:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4045,"name":"_checkCanCallSetSubnodeOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"21970:28:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32) view"}},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21970:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4049,"nodeType":"ExpressionStatement","src":"21970:46:20"},{"expression":{"arguments":[{"id":4051,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"22049:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4052,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"22055:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":4050,"name":"_checkFusesAreSettable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"22026:22:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint32_$returns$__$","typeString":"function (bytes32,uint32) pure"}},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22026:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4054,"nodeType":"ExpressionStatement","src":"22026:35:20"},{"expression":{"arguments":[{"id":4056,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"22082:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4057,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"22094:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4058,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"22100:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4055,"name":"_saveLabel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"22071:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes32,string memory) returns (bytes memory)"}},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22071:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4060,"nodeType":"ExpressionStatement","src":"22071:35:20"},{"expression":{"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4061,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"22116:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4063,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"22152:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4064,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"22164:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4065,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"22170:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4066,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"22177:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":4062,"name":"_checkParentFusesAndExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"22125:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_uint32_$_t_uint64_$returns$_t_uint64_$","typeString":"function (bytes32,bytes32,uint32,uint64) view returns (uint64)"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22125:59:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"22116:68:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4069,"nodeType":"ExpressionStatement","src":"22116:68:20"},{"condition":{"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"22198:16:20","subExpression":{"arguments":[{"id":4071,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"22209:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4070,"name":"isWrapped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"22199:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32) view returns (bool)"}},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22199:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4119,"nodeType":"Block","src":"22492:264:20","statements":[{"expression":{"arguments":[{"id":4100,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"22544:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4101,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"22572:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":4104,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"22607:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}],"id":4103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22599:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4102,"name":"address","nodeType":"ElementaryTypeName","src":"22599:7:20","typeDescriptions":{}}},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22599:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4106,"name":"resolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"22630:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4107,"name":"ttl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"22656:3:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":4097,"name":"ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"22506:3:20","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22510:16:20","memberName":"setSubnodeRecord","nodeType":"MemberAccess","referencedDeclaration":1045,"src":"22506:20:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$_t_address_$_t_uint64_$returns$__$","typeString":"function (bytes32,bytes32,address,address,uint64) external"}},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22506:167:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4109,"nodeType":"ExpressionStatement","src":"22506:167:20"},{"expression":{"arguments":[{"id":4111,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"22699:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4112,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"22711:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4113,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"22717:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4114,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"22724:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4115,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"22731:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4116,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"22738:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":4110,"name":"_updateName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"22687:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$_t_address_$_t_uint32_$_t_uint64_$returns$__$","typeString":"function (bytes32,bytes32,string memory,address,uint32,uint64)"}},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22687:58:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4118,"nodeType":"ExpressionStatement","src":"22687:58:20"}]},"id":4120,"nodeType":"IfStatement","src":"22194:562:20","trueBody":{"id":4096,"nodeType":"Block","src":"22216:270:20","statements":[{"expression":{"arguments":[{"id":4077,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"22268:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4078,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"22296:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":4081,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"22331:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}],"id":4080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22323:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4079,"name":"address","nodeType":"ElementaryTypeName","src":"22323:7:20","typeDescriptions":{}}},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22323:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4083,"name":"resolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"22354:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4084,"name":"ttl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"22380:3:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":4074,"name":"ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"22230:3:20","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22234:16:20","memberName":"setSubnodeRecord","nodeType":"MemberAccess","referencedDeclaration":1045,"src":"22230:20:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$_t_address_$_t_uint64_$returns$__$","typeString":"function (bytes32,bytes32,address,address,uint64) external"}},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22230:167:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4086,"nodeType":"ExpressionStatement","src":"22230:167:20"},{"expression":{"arguments":[{"id":4088,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"22429:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4089,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"22441:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4090,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"22447:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4091,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"22454:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4092,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"22461:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4093,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"22468:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":4087,"name":"_storeNameAndWrap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"22411:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$_t_address_$_t_uint32_$_t_uint64_$returns$__$","typeString":"function (bytes32,bytes32,string memory,address,uint32,uint64)"}},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22411:64:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4095,"nodeType":"ExpressionStatement","src":"22411:64:20"}]}}]},"documentation":{"id":4007,"nodeType":"StructuredDocumentation","src":"21045:547:20","text":" @notice Sets the subdomain owner in the registry with records and then wraps the subdomain\n @param parentNode parent namehash of the subdomain\n @param label label of the subdomain as a string\n @param owner new owner in the wrapper\n @param resolver resolver contract in the registry\n @param ttl ttl in the registry\n @param fuses initial fuses for the wrapped subdomain\n @param expiry When the name will expire in seconds since the Unix epoch\n @return node Namehash of the subdomain"},"functionSelector":"24c1af44","id":4122,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4024,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"21823:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4025,"kind":"modifierInvocation","modifierName":{"id":4023,"name":"onlyTokenOwner","nameLocations":["21808:14:20"],"nodeType":"IdentifierPath","referencedDeclaration":2992,"src":"21808:14:20"},"nodeType":"ModifierInvocation","src":"21808:26:20"}],"name":"setSubnodeRecord","nameLocation":"21607:16:20","nodeType":"FunctionDefinition","parameters":{"id":4022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4009,"mutability":"mutable","name":"parentNode","nameLocation":"21641:10:20","nodeType":"VariableDeclaration","scope":4122,"src":"21633:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4008,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21633:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4011,"mutability":"mutable","name":"label","nameLocation":"21675:5:20","nodeType":"VariableDeclaration","scope":4122,"src":"21661:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4010,"name":"string","nodeType":"ElementaryTypeName","src":"21661:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4013,"mutability":"mutable","name":"owner","nameLocation":"21698:5:20","nodeType":"VariableDeclaration","scope":4122,"src":"21690:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4012,"name":"address","nodeType":"ElementaryTypeName","src":"21690:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4015,"mutability":"mutable","name":"resolver","nameLocation":"21721:8:20","nodeType":"VariableDeclaration","scope":4122,"src":"21713:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4014,"name":"address","nodeType":"ElementaryTypeName","src":"21713:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4017,"mutability":"mutable","name":"ttl","nameLocation":"21746:3:20","nodeType":"VariableDeclaration","scope":4122,"src":"21739:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4016,"name":"uint64","nodeType":"ElementaryTypeName","src":"21739:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4019,"mutability":"mutable","name":"fuses","nameLocation":"21766:5:20","nodeType":"VariableDeclaration","scope":4122,"src":"21759:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4018,"name":"uint32","nodeType":"ElementaryTypeName","src":"21759:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4021,"mutability":"mutable","name":"expiry","nameLocation":"21788:6:20","nodeType":"VariableDeclaration","scope":4122,"src":"21781:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4020,"name":"uint64","nodeType":"ElementaryTypeName","src":"21781:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"21623:177:20"},"returnParameters":{"id":4028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4027,"mutability":"mutable","name":"node","nameLocation":"21852:4:20","nodeType":"VariableDeclaration","scope":4122,"src":"21844:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21844:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21843:14:20"},"scope":5349,"src":"21598:1164:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2470],"body":{"id":4215,"nodeType":"Block","src":"23342:459:20","statements":[{"expression":{"arguments":[{"id":4149,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"23366:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":4152,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"23380:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}],"id":4151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23372:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4150,"name":"address","nodeType":"ElementaryTypeName","src":"23372:7:20","typeDescriptions":{}}},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23372:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4154,"name":"resolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"23387:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4155,"name":"ttl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"23397:3:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":4146,"name":"ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"23352:3:20","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"}},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23356:9:20","memberName":"setRecord","nodeType":"MemberAccess","referencedDeclaration":1032,"src":"23352:13:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint64_$returns$__$","typeString":"function (bytes32,address,address,uint64) external"}},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23352:49:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4157,"nodeType":"ExpressionStatement","src":"23352:49:20"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4158,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"23415:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23432:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23424:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4159,"name":"address","nodeType":"ElementaryTypeName","src":"23424:7:20","typeDescriptions":{}}},"id":4162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23424:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23415:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4213,"nodeType":"Block","src":"23667:128:20","statements":[{"assignments":[4194],"declarations":[{"constant":false,"id":4194,"mutability":"mutable","name":"oldOwner","nameLocation":"23689:8:20","nodeType":"VariableDeclaration","scope":4213,"src":"23681:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4193,"name":"address","nodeType":"ElementaryTypeName","src":"23681:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4201,"initialValue":{"arguments":[{"arguments":[{"id":4198,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"23716:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23708:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4196,"name":"uint256","nodeType":"ElementaryTypeName","src":"23708:7:20","typeDescriptions":{}}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23708:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4195,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[2830],"referencedDeclaration":2830,"src":"23700:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23700:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"23681:41:20"},{"expression":{"arguments":[{"id":4203,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"23746:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4204,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"23756:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4207,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"23771:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23763:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4205,"name":"uint256","nodeType":"ElementaryTypeName","src":"23763:7:20","typeDescriptions":{}}},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23763:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":4209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23778:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23781:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":4202,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"23736:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23736:48:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4212,"nodeType":"ExpressionStatement","src":"23736:48:20"}]},"id":4214,"nodeType":"IfStatement","src":"23411:384:20","trueBody":{"id":4192,"nodeType":"Block","src":"23436:225:20","statements":[{"assignments":[null,4165,null],"declarations":[null,{"constant":false,"id":4165,"mutability":"mutable","name":"fuses","nameLocation":"23460:5:20","nodeType":"VariableDeclaration","scope":4192,"src":"23453:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4164,"name":"uint32","nodeType":"ElementaryTypeName","src":"23453:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},null],"id":4172,"initialValue":{"arguments":[{"arguments":[{"id":4169,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"23487:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23479:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4167,"name":"uint256","nodeType":"ElementaryTypeName","src":"23479:7:20","typeDescriptions":{}}},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23479:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4166,"name":"getData","nodeType":"Identifier","overloadedDeclarations":[2866],"referencedDeclaration":2866,"src":"23471:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (uint256) view returns (address,uint32,uint64)"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23471:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"23450:43:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4173,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"23511:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4174,"name":"IS_DOT_ETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"23519:10:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"23511:18:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4176,"name":"IS_DOT_ETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"23533:10:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"23511:32:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4183,"nodeType":"IfStatement","src":"23507:105:20","trueBody":{"id":4182,"nodeType":"Block","src":"23545:67:20","statements":[{"errorCall":{"arguments":[{"id":4179,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"23591:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4178,"name":"IncorrectTargetOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"23570:20:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23570:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4181,"nodeType":"RevertStatement","src":"23563:34:20"}]}},{"expression":{"arguments":[{"id":4185,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"23633:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23647:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23639:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4186,"name":"address","nodeType":"ElementaryTypeName","src":"23639:7:20","typeDescriptions":{}}},"id":4189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23639:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4184,"name":"_unwrap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"23625:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23625:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4191,"nodeType":"ExpressionStatement","src":"23625:25:20"}]}}]},"documentation":{"id":4123,"nodeType":"StructuredDocumentation","src":"22768:266:20","text":" @notice Sets records for the name in the ENS Registry\n @param node Namehash of the name to set a record for\n @param owner New owner in the registry\n @param resolver Resolver contract\n @param ttl Time to live in the registry"},"functionSelector":"cf408823","id":4216,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4135,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"23211:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4136,"kind":"modifierInvocation","modifierName":{"id":4134,"name":"onlyTokenOwner","nameLocations":["23196:14:20"],"nodeType":"IdentifierPath","referencedDeclaration":2992,"src":"23196:14:20"},"nodeType":"ModifierInvocation","src":"23196:20:20"},{"arguments":[{"id":4138,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"23255:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4139,"name":"CANNOT_TRANSFER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"23273:15:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":4140,"name":"CANNOT_SET_RESOLVER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"23291:19:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"23273:37:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":4142,"name":"CANNOT_SET_TTL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"23313:14:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"23273:54:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":4144,"kind":"modifierInvocation","modifierName":{"id":4137,"name":"operationAllowed","nameLocations":["23225:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":4293,"src":"23225:16:20"},"nodeType":"ModifierInvocation","src":"23225:112:20"}],"name":"setRecord","nameLocation":"23049:9:20","nodeType":"FunctionDefinition","overrides":{"id":4133,"nodeType":"OverrideSpecifier","overrides":[],"src":"23179:8:20"},"parameters":{"id":4132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4125,"mutability":"mutable","name":"node","nameLocation":"23076:4:20","nodeType":"VariableDeclaration","scope":4216,"src":"23068:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23068:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4127,"mutability":"mutable","name":"owner","nameLocation":"23098:5:20","nodeType":"VariableDeclaration","scope":4216,"src":"23090:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4126,"name":"address","nodeType":"ElementaryTypeName","src":"23090:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4129,"mutability":"mutable","name":"resolver","nameLocation":"23121:8:20","nodeType":"VariableDeclaration","scope":4216,"src":"23113:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4128,"name":"address","nodeType":"ElementaryTypeName","src":"23113:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4131,"mutability":"mutable","name":"ttl","nameLocation":"23146:3:20","nodeType":"VariableDeclaration","scope":4216,"src":"23139:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4130,"name":"uint64","nodeType":"ElementaryTypeName","src":"23139:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"23058:97:20"},"returnParameters":{"id":4145,"nodeType":"ParameterList","parameters":[],"src":"23342:0:20"},"scope":5349,"src":"23040:761:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2512],"body":{"id":4239,"nodeType":"Block","src":"24133:48:20","statements":[{"expression":{"arguments":[{"id":4235,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"24159:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4236,"name":"resolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"24165:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4232,"name":"ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"24143:3:20","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"}},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24147:11:20","memberName":"setResolver","nodeType":"MemberAccess","referencedDeclaration":1063,"src":"24143:15:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) external"}},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24143:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4238,"nodeType":"ExpressionStatement","src":"24143:31:20"}]},"documentation":{"id":4217,"nodeType":"StructuredDocumentation","src":"23807:150:20","text":" @notice Sets resolver contract in the registry\n @param node namehash of the name\n @param resolver the resolver contract"},"functionSelector":"1896f70a","id":4240,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4225,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"24071:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4226,"kind":"modifierInvocation","modifierName":{"id":4224,"name":"onlyTokenOwner","nameLocations":["24056:14:20"],"nodeType":"IdentifierPath","referencedDeclaration":2992,"src":"24056:14:20"},"nodeType":"ModifierInvocation","src":"24056:20:20"},{"arguments":[{"id":4228,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"24102:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4229,"name":"CANNOT_SET_RESOLVER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"24108:19:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":4230,"kind":"modifierInvocation","modifierName":{"id":4227,"name":"operationAllowed","nameLocations":["24085:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":4293,"src":"24085:16:20"},"nodeType":"ModifierInvocation","src":"24085:43:20"}],"name":"setResolver","nameLocation":"23972:11:20","nodeType":"FunctionDefinition","overrides":{"id":4223,"nodeType":"OverrideSpecifier","overrides":[],"src":"24039:8:20"},"parameters":{"id":4222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4219,"mutability":"mutable","name":"node","nameLocation":"23992:4:20","nodeType":"VariableDeclaration","scope":4240,"src":"23984:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23984:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4221,"mutability":"mutable","name":"resolver","nameLocation":"24006:8:20","nodeType":"VariableDeclaration","scope":4240,"src":"23998:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4220,"name":"address","nodeType":"ElementaryTypeName","src":"23998:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23983:32:20"},"returnParameters":{"id":4231,"nodeType":"ParameterList","parameters":[],"src":"24133:0:20"},"scope":5349,"src":"23963:218:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2519],"body":{"id":4263,"nodeType":"Block","src":"24476:38:20","statements":[{"expression":{"arguments":[{"id":4259,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"24497:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4260,"name":"ttl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"24503:3:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":4256,"name":"ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"24486:3:20","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"}},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24490:6:20","memberName":"setTTL","nodeType":"MemberAccess","referencedDeclaration":1077,"src":"24486:10:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$returns$__$","typeString":"function (bytes32,uint64) external"}},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24486:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4262,"nodeType":"ExpressionStatement","src":"24486:21:20"}]},"documentation":{"id":4241,"nodeType":"StructuredDocumentation","src":"24187:129:20","text":" @notice Sets TTL in the registry\n @param node Namehash of the name\n @param ttl TTL in the registry"},"functionSelector":"14ab9038","id":4264,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4249,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"24419:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4250,"kind":"modifierInvocation","modifierName":{"id":4248,"name":"onlyTokenOwner","nameLocations":["24404:14:20"],"nodeType":"IdentifierPath","referencedDeclaration":2992,"src":"24404:14:20"},"nodeType":"ModifierInvocation","src":"24404:20:20"},{"arguments":[{"id":4252,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"24450:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4253,"name":"CANNOT_SET_TTL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"24456:14:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":4254,"kind":"modifierInvocation","modifierName":{"id":4251,"name":"operationAllowed","nameLocations":["24433:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":4293,"src":"24433:16:20"},"nodeType":"ModifierInvocation","src":"24433:38:20"}],"name":"setTTL","nameLocation":"24331:6:20","nodeType":"FunctionDefinition","overrides":{"id":4247,"nodeType":"OverrideSpecifier","overrides":[],"src":"24387:8:20"},"parameters":{"id":4246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4243,"mutability":"mutable","name":"node","nameLocation":"24346:4:20","nodeType":"VariableDeclaration","scope":4264,"src":"24338:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24338:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4245,"mutability":"mutable","name":"ttl","nameLocation":"24359:3:20","nodeType":"VariableDeclaration","scope":4264,"src":"24352:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4244,"name":"uint64","nodeType":"ElementaryTypeName","src":"24352:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"24337:26:20"},"returnParameters":{"id":4255,"nodeType":"ParameterList","parameters":[],"src":"24476:0:20"},"scope":5349,"src":"24322:192:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4292,"nodeType":"Block","src":"24804:164:20","statements":[{"assignments":[null,4272,null],"declarations":[null,{"constant":false,"id":4272,"mutability":"mutable","name":"fuses","nameLocation":"24824:5:20","nodeType":"VariableDeclaration","scope":4292,"src":"24817:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4271,"name":"uint32","nodeType":"ElementaryTypeName","src":"24817:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},null],"id":4279,"initialValue":{"arguments":[{"arguments":[{"id":4276,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"24851:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24843:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4274,"name":"uint256","nodeType":"ElementaryTypeName","src":"24843:7:20","typeDescriptions":{}}},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24843:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4273,"name":"getData","nodeType":"Identifier","overloadedDeclarations":[2866],"referencedDeclaration":2866,"src":"24835:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (uint256) view returns (address,uint32,uint64)"}},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24835:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"24814:43:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4280,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"24871:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4281,"name":"fuseMask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"24879:8:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"24871:16:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24871:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4290,"nodeType":"IfStatement","src":"24867:84:20","trueBody":{"id":4289,"nodeType":"Block","src":"24894:57:20","statements":[{"errorCall":{"arguments":[{"id":4286,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"24935:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4285,"name":"OperationProhibited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"24915:19:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24915:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4288,"nodeType":"RevertStatement","src":"24908:32:20"}]}},{"id":4291,"nodeType":"PlaceholderStatement","src":"24960:1:20"}]},"documentation":{"id":4265,"nodeType":"StructuredDocumentation","src":"24520:221:20","text":" @dev Allows an operation only if none of the specified fuses are burned.\n @param node The namehash of the name to check fuses on.\n @param fuseMask A bitmask of fuses that must not be burned."},"id":4293,"name":"operationAllowed","nameLocation":"24756:16:20","nodeType":"ModifierDefinition","parameters":{"id":4270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4267,"mutability":"mutable","name":"node","nameLocation":"24781:4:20","nodeType":"VariableDeclaration","scope":4293,"src":"24773:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4266,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24773:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4269,"mutability":"mutable","name":"fuseMask","nameLocation":"24794:8:20","nodeType":"VariableDeclaration","scope":4293,"src":"24787:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4268,"name":"uint32","nodeType":"ElementaryTypeName","src":"24787:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"24772:31:20"},"src":"24747:221:20","virtual":false,"visibility":"internal"},{"body":{"id":4374,"nodeType":"Block","src":"25628:1161:20","statements":[{"assignments":[4302,4304,4306],"declarations":[{"constant":false,"id":4302,"mutability":"mutable","name":"subnodeOwner","nameLocation":"25660:12:20","nodeType":"VariableDeclaration","scope":4374,"src":"25652:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4301,"name":"address","nodeType":"ElementaryTypeName","src":"25652:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4304,"mutability":"mutable","name":"subnodeFuses","nameLocation":"25693:12:20","nodeType":"VariableDeclaration","scope":4374,"src":"25686:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4303,"name":"uint32","nodeType":"ElementaryTypeName","src":"25686:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4306,"mutability":"mutable","name":"subnodeExpiry","nameLocation":"25726:13:20","nodeType":"VariableDeclaration","scope":4374,"src":"25719:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4305,"name":"uint64","nodeType":"ElementaryTypeName","src":"25719:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":4313,"initialValue":{"arguments":[{"arguments":[{"id":4310,"name":"subnode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"25768:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25760:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4308,"name":"uint256","nodeType":"ElementaryTypeName","src":"25760:7:20","typeDescriptions":{}}},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25760:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4307,"name":"getData","nodeType":"Identifier","overloadedDeclarations":[2866],"referencedDeclaration":2866,"src":"25752:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (uint256) view returns (address,uint32,uint64)"}},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25752:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"25638:139:20"},{"assignments":[4315],"declarations":[{"constant":false,"id":4315,"mutability":"mutable","name":"expired","nameLocation":"25978:7:20","nodeType":"VariableDeclaration","scope":4374,"src":"25973:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4314,"name":"bool","nodeType":"ElementaryTypeName","src":"25973:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4320,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4316,"name":"subnodeExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"25988:13:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4317,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"26004:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26010:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"26004:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25988:31:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"25973:46:20"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4321,"name":"expired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4315,"src":"26046:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4322,"name":"subnodeOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"26209:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26233:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26225:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4323,"name":"address","nodeType":"ElementaryTypeName","src":"26225:7:20","typeDescriptions":{}}},"id":4326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26225:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"26209:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4330,"name":"subnode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"26395:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4328,"name":"ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"26385:3:20","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"}},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26389:5:20","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1091,"src":"26385:9:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26385:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26415:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26407:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4332,"name":"address","nodeType":"ElementaryTypeName","src":"26407:7:20","typeDescriptions":{}}},"id":4335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26407:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"26385:32:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26209:208:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4338,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26208:210:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26046:372:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4372,"nodeType":"Block","src":"26644:139:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4361,"name":"subnodeFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"26662:12:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4362,"name":"PARENT_CANNOT_CONTROL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"26677:21:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"26662:36:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26702:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26662:41:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4371,"nodeType":"IfStatement","src":"26658:115:20","trueBody":{"id":4370,"nodeType":"Block","src":"26705:68:20","statements":[{"errorCall":{"arguments":[{"id":4367,"name":"subnode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"26750:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4366,"name":"OperationProhibited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"26730:19:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26730:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4369,"nodeType":"RevertStatement","src":"26723:35:20"}]}}]},"id":4373,"nodeType":"IfStatement","src":"26029:754:20","trueBody":{"id":4360,"nodeType":"Block","src":"26429:209:20","statements":[{"assignments":[null,4341,null],"declarations":[null,{"constant":false,"id":4341,"mutability":"mutable","name":"parentFuses","nameLocation":"26453:11:20","nodeType":"VariableDeclaration","scope":4360,"src":"26446:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4340,"name":"uint32","nodeType":"ElementaryTypeName","src":"26446:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},null],"id":4348,"initialValue":{"arguments":[{"arguments":[{"id":4345,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"26486:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26478:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4343,"name":"uint256","nodeType":"ElementaryTypeName","src":"26478:7:20","typeDescriptions":{}}},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26478:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4342,"name":"getData","nodeType":"Identifier","overloadedDeclarations":[2866],"referencedDeclaration":2866,"src":"26470:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (uint256) view returns (address,uint32,uint64)"}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26470:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"26443:55:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4349,"name":"parentFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"26516:11:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4350,"name":"CANNOT_CREATE_SUBDOMAIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"26530:23:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"26516:37:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26557:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26516:42:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4359,"nodeType":"IfStatement","src":"26512:116:20","trueBody":{"id":4358,"nodeType":"Block","src":"26560:68:20","statements":[{"errorCall":{"arguments":[{"id":4355,"name":"subnode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"26605:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4354,"name":"OperationProhibited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"26585:19:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26585:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4357,"nodeType":"RevertStatement","src":"26578:35:20"}]}}]}}]},"documentation":{"id":4294,"nodeType":"StructuredDocumentation","src":"24974:539:20","text":" @notice Check whether a name can call setSubnodeOwner/setSubnodeRecord\n @dev Checks both CANNOT_CREATE_SUBDOMAIN and PARENT_CANNOT_CONTROL and whether not they have been burnt\n      and checks whether the owner of the subdomain is 0x0 for creating or already exists for\n      replacing a subdomain. If either conditions are true, then it is possible to call\n      setSubnodeOwner\n @param parentNode Namehash of the parent name to check\n @param subnode Namehash of the subname to check"},"id":4375,"implemented":true,"kind":"function","modifiers":[],"name":"_checkCanCallSetSubnodeOwner","nameLocation":"25528:28:20","nodeType":"FunctionDefinition","parameters":{"id":4299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4296,"mutability":"mutable","name":"parentNode","nameLocation":"25565:10:20","nodeType":"VariableDeclaration","scope":4375,"src":"25557:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25557:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4298,"mutability":"mutable","name":"subnode","nameLocation":"25585:7:20","nodeType":"VariableDeclaration","scope":4375,"src":"25577:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25577:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25556:37:20"},"returnParameters":{"id":4300,"nodeType":"ParameterList","parameters":[],"src":"25628:0:20"},"scope":5349,"src":"25519:1270:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[2546],"body":{"id":4401,"nodeType":"Block","src":"27173:105:20","statements":[{"assignments":[null,4387,null],"declarations":[null,{"constant":false,"id":4387,"mutability":"mutable","name":"fuses","nameLocation":"27193:5:20","nodeType":"VariableDeclaration","scope":4401,"src":"27186:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4386,"name":"uint32","nodeType":"ElementaryTypeName","src":"27186:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},null],"id":4394,"initialValue":{"arguments":[{"arguments":[{"id":4391,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"27220:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27212:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4389,"name":"uint256","nodeType":"ElementaryTypeName","src":"27212:7:20","typeDescriptions":{}}},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27212:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4388,"name":"getData","nodeType":"Identifier","overloadedDeclarations":[2866],"referencedDeclaration":2866,"src":"27204:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (uint256) view returns (address,uint32,uint64)"}},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27204:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"27183:43:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4395,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"27243:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4396,"name":"fuseMask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"27251:8:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"27243:16:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4398,"name":"fuseMask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"27263:8:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"27243:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4385,"id":4400,"nodeType":"Return","src":"27236:35:20"}]},"documentation":{"id":4376,"nodeType":"StructuredDocumentation","src":"26795:245:20","text":" @notice Checks all Fuses in the mask are burned for the node\n @param node Namehash of the name\n @param fuseMask The fuses you want to check\n @return Boolean of whether or not all the selected fuses are burned"},"functionSelector":"adf4960a","id":4402,"implemented":true,"kind":"function","modifiers":[],"name":"allFusesBurned","nameLocation":"27055:14:20","nodeType":"FunctionDefinition","overrides":{"id":4382,"nodeType":"OverrideSpecifier","overrides":[],"src":"27137:8:20"},"parameters":{"id":4381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4378,"mutability":"mutable","name":"node","nameLocation":"27078:4:20","nodeType":"VariableDeclaration","scope":4402,"src":"27070:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27070:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4380,"mutability":"mutable","name":"fuseMask","nameLocation":"27091:8:20","nodeType":"VariableDeclaration","scope":4402,"src":"27084:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4379,"name":"uint32","nodeType":"ElementaryTypeName","src":"27084:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"27069:31:20"},"returnParameters":{"id":4385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4402,"src":"27163:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4383,"name":"bool","nodeType":"ElementaryTypeName","src":"27163:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"27162:6:20"},"scope":5349,"src":"27046:232:20","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4431,"nodeType":"Block","src":"27344:120:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4412,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"27389:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27381:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4410,"name":"uint256","nodeType":"ElementaryTypeName","src":"27381:7:20","typeDescriptions":{}}},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27381:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4409,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[2830],"referencedDeclaration":2830,"src":"27373:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27373:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27407:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27399:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4415,"name":"address","nodeType":"ElementaryTypeName","src":"27399:7:20","typeDescriptions":{}}},"id":4418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27399:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"27373:36:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4422,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"27435:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4420,"name":"ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"27425:3:20","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"}},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27429:5:20","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1091,"src":"27425:9:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27425:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":4426,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"27452:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}],"id":4425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27444:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4424,"name":"address","nodeType":"ElementaryTypeName","src":"27444:7:20","typeDescriptions":{}}},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27444:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"27425:32:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27373:84:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4408,"id":4430,"nodeType":"Return","src":"27354:103:20"}]},"functionSelector":"fd0cd0d9","id":4432,"implemented":true,"kind":"function","modifiers":[],"name":"isWrapped","nameLocation":"27293:9:20","nodeType":"FunctionDefinition","parameters":{"id":4405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4404,"mutability":"mutable","name":"node","nameLocation":"27311:4:20","nodeType":"VariableDeclaration","scope":4432,"src":"27303:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4403,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27303:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"27302:14:20"},"returnParameters":{"id":4408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4432,"src":"27338:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4406,"name":"bool","nodeType":"ElementaryTypeName","src":"27338:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"27337:6:20"},"scope":5349,"src":"27284:180:20","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[501],"body":{"id":4532,"nodeType":"Block","src":"27626:858:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4446,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"27689:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27693:6:20","memberName":"sender","nodeType":"MemberAccess","src":"27689:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":4450,"name":"registrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"27711:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaseRegistrar_$985","typeString":"contract IBaseRegistrar"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBaseRegistrar_$985","typeString":"contract IBaseRegistrar"}],"id":4449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27703:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4448,"name":"address","nodeType":"ElementaryTypeName","src":"27703:7:20","typeDescriptions":{}}},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27703:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"27689:32:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4457,"nodeType":"IfStatement","src":"27685:90:20","trueBody":{"id":4456,"nodeType":"Block","src":"27723:52:20","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4453,"name":"IncorrectTokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"27744:18:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27744:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4455,"nodeType":"RevertStatement","src":"27737:27:20"}]}},{"assignments":[4459,4461,4463,4465],"declarations":[{"constant":false,"id":4459,"mutability":"mutable","name":"label","nameLocation":"27813:5:20","nodeType":"VariableDeclaration","scope":4532,"src":"27799:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4458,"name":"string","nodeType":"ElementaryTypeName","src":"27799:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4461,"mutability":"mutable","name":"owner","nameLocation":"27840:5:20","nodeType":"VariableDeclaration","scope":4532,"src":"27832:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4460,"name":"address","nodeType":"ElementaryTypeName","src":"27832:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4463,"mutability":"mutable","name":"ownerControlledFuses","nameLocation":"27866:20:20","nodeType":"VariableDeclaration","scope":4532,"src":"27859:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4462,"name":"uint16","nodeType":"ElementaryTypeName","src":"27859:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4465,"mutability":"mutable","name":"resolver","nameLocation":"27908:8:20","nodeType":"VariableDeclaration","scope":4532,"src":"27900:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4464,"name":"address","nodeType":"ElementaryTypeName","src":"27900:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4479,"initialValue":{"arguments":[{"id":4468,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"27940:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":4470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27947:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4469,"name":"string","nodeType":"ElementaryTypeName","src":"27947:6:20","typeDescriptions":{}}},{"id":4472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27955:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4471,"name":"address","nodeType":"ElementaryTypeName","src":"27955:7:20","typeDescriptions":{}}},{"id":4474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27964:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4473,"name":"uint16","nodeType":"ElementaryTypeName","src":"27964:6:20","typeDescriptions":{}}},{"id":4476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27972:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4475,"name":"address","nodeType":"ElementaryTypeName","src":"27972:7:20","typeDescriptions":{}}}],"id":4477,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27946:34:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_string_storage_ptr_$_$_t_type$_t_address_$_$_t_type$_t_uint16_$_$_t_type$_t_address_$_$","typeString":"tuple(type(string storage pointer),type(address),type(uint16),type(address))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_tuple$_t_type$_t_string_storage_ptr_$_$_t_type$_t_address_$_$_t_type$_t_uint16_$_$_t_type$_t_address_$_$","typeString":"tuple(type(string storage pointer),type(address),type(uint16),type(address))"}],"expression":{"id":4466,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"27929:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"27933:6:20","memberName":"decode","nodeType":"MemberAccess","src":"27929:10:20","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27929:52:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_address_payable_$_t_uint16_$_t_address_payable_$","typeString":"tuple(string memory,address payable,uint16,address payable)"}},"nodeType":"VariableDeclarationStatement","src":"27785:196:20"},{"assignments":[4481],"declarations":[{"constant":false,"id":4481,"mutability":"mutable","name":"labelhash","nameLocation":"28000:9:20","nodeType":"VariableDeclaration","scope":4532,"src":"27992:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4480,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27992:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4486,"initialValue":{"arguments":[{"id":4484,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"28020:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28012:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"28012:7:20","typeDescriptions":{}}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28012:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"27992:36:20"},{"assignments":[4488],"declarations":[{"constant":false,"id":4488,"mutability":"mutable","name":"labelhashFromData","nameLocation":"28046:17:20","nodeType":"VariableDeclaration","scope":4532,"src":"28038:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4487,"name":"bytes32","nodeType":"ElementaryTypeName","src":"28038:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4495,"initialValue":{"arguments":[{"arguments":[{"id":4492,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"28082:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28076:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4490,"name":"bytes","nodeType":"ElementaryTypeName","src":"28076:5:20","typeDescriptions":{}}},"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28076:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4489,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"28066:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28066:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"28038:51:20"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4496,"name":"labelhashFromData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"28104:17:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4497,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"28125:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"28104:30:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4505,"nodeType":"IfStatement","src":"28100:111:20","trueBody":{"id":4504,"nodeType":"Block","src":"28136:75:20","statements":[{"errorCall":{"arguments":[{"id":4500,"name":"labelhashFromData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"28171:17:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4501,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"28190:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4499,"name":"LabelMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"28157:13:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32) pure"}},"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28157:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4503,"nodeType":"RevertStatement","src":"28150:50:20"}]}},{"expression":{"arguments":[{"arguments":[{"id":4511,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"28320:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28312:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4509,"name":"uint256","nodeType":"ElementaryTypeName","src":"28312:7:20","typeDescriptions":{}}},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28312:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4515,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"28340:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NameWrapper_$5349","typeString":"contract NameWrapper"}],"id":4514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28332:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4513,"name":"address","nodeType":"ElementaryTypeName","src":"28332:7:20","typeDescriptions":{}}},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28332:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4506,"name":"registrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"28294:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaseRegistrar_$985","typeString":"contract IBaseRegistrar"}},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28304:7:20","memberName":"reclaim","nodeType":"MemberAccess","referencedDeclaration":984,"src":"28294:17:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address) external"}},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28294:52:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4518,"nodeType":"ExpressionStatement","src":"28294:52:20"},{"expression":{"arguments":[{"id":4520,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"28369:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4521,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"28376:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4522,"name":"ownerControlledFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"28383:20:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4523,"name":"resolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"28405:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4519,"name":"_wrapETH2LD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"28357:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint16_$_t_address_$returns$__$","typeString":"function (string memory,address,uint16,address)"}},"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28357:57:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4525,"nodeType":"ExpressionStatement","src":"28357:57:20"},{"expression":{"expression":{"expression":{"arguments":[{"id":4527,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"28448:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4526,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"28432:15:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$502_$","typeString":"type(contract IERC721Receiver)"}},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28432:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$502","typeString":"contract IERC721Receiver"}},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28452:16:20","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":501,"src":"28432:36:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28469:8:20","memberName":"selector","nodeType":"MemberAccess","src":"28432:45:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":4445,"id":4531,"nodeType":"Return","src":"28425:52:20"}]},"functionSelector":"150b7a02","id":4533,"implemented":true,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"27479:16:20","nodeType":"FunctionDefinition","overrides":{"id":4442,"nodeType":"OverrideSpecifier","overrides":[],"src":"27600:8:20"},"parameters":{"id":4441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4434,"mutability":"mutable","name":"to","nameLocation":"27513:2:20","nodeType":"VariableDeclaration","scope":4533,"src":"27505:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4433,"name":"address","nodeType":"ElementaryTypeName","src":"27505:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4533,"src":"27525:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4435,"name":"address","nodeType":"ElementaryTypeName","src":"27525:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4438,"mutability":"mutable","name":"tokenId","nameLocation":"27550:7:20","nodeType":"VariableDeclaration","scope":4533,"src":"27542:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4437,"name":"uint256","nodeType":"ElementaryTypeName","src":"27542:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4440,"mutability":"mutable","name":"data","nameLocation":"27582:4:20","nodeType":"VariableDeclaration","scope":4533,"src":"27567:19:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4439,"name":"bytes","nodeType":"ElementaryTypeName","src":"27567:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"27495:97:20"},"returnParameters":{"id":4445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4533,"src":"27618:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4443,"name":"bytes4","nodeType":"ElementaryTypeName","src":"27618:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"27617:8:20"},"scope":5349,"src":"27470:1014:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1845],"body":{"id":4588,"nodeType":"Block","src":"28660:634:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4545,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"28763:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4546,"name":"IS_DOT_ETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"28771:10:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"28763:18:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4548,"name":"IS_DOT_ETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"28785:10:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"28763:32:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4555,"nodeType":"IfStatement","src":"28759:85:20","trueBody":{"id":4554,"nodeType":"Block","src":"28797:47:20","statements":[{"expression":{"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4550,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"28811:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4551,"name":"GRACE_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"28821:12:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"28811:22:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4553,"nodeType":"ExpressionStatement","src":"28811:22:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4556,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"28858:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4557,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"28867:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28873:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"28867:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28858:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4586,"nodeType":"Block","src":"29099:189:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4572,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"29176:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4573,"name":"CANNOT_TRANSFER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"29184:15:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"29176:23:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29203:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29176:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4585,"nodeType":"IfStatement","src":"29172:106:20","trueBody":{"id":4584,"nodeType":"Block","src":"29206:72:20","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":4580,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"29259:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29251:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4578,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29251:7:20","typeDescriptions":{}}},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29251:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4577,"name":"OperationProhibited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"29231:19:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29231:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4583,"nodeType":"RevertStatement","src":"29224:39:20"}]}}]},"id":4587,"nodeType":"IfStatement","src":"28854:434:20","trueBody":{"id":4571,"nodeType":"Block","src":"28884:209:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4560,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"28962:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4561,"name":"PARENT_CANNOT_CONTROL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"28970:21:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"28962:29:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28995:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"28962:34:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4570,"nodeType":"IfStatement","src":"28958:125:20","trueBody":{"id":4569,"nodeType":"Block","src":"28998:85:20","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572","id":4566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29023:44:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""},"value":"ERC1155: insufficient balance for transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""}],"id":4565,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"29016:6:20","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29016:52:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4568,"nodeType":"ExpressionStatement","src":"29016:52:20"}]}}]}}]},"id":4589,"implemented":true,"kind":"function","modifiers":[],"name":"_preTransferCheck","nameLocation":"28533:17:20","nodeType":"FunctionDefinition","overrides":{"id":4541,"nodeType":"OverrideSpecifier","overrides":[],"src":"28636:8:20"},"parameters":{"id":4540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4535,"mutability":"mutable","name":"id","nameLocation":"28568:2:20","nodeType":"VariableDeclaration","scope":4589,"src":"28560:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4534,"name":"uint256","nodeType":"ElementaryTypeName","src":"28560:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4537,"mutability":"mutable","name":"fuses","nameLocation":"28587:5:20","nodeType":"VariableDeclaration","scope":4589,"src":"28580:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4536,"name":"uint32","nodeType":"ElementaryTypeName","src":"28580:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4539,"mutability":"mutable","name":"expiry","nameLocation":"28609:6:20","nodeType":"VariableDeclaration","scope":4589,"src":"28602:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4538,"name":"uint64","nodeType":"ElementaryTypeName","src":"28602:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"28550:71:20"},"returnParameters":{"id":4544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4589,"src":"28654:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4542,"name":"bool","nodeType":"ElementaryTypeName","src":"28654:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28653:6:20"},"scope":5349,"src":"28524:770:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[1858],"body":{"id":4631,"nodeType":"Block","src":"29452:236:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4603,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"29466:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4604,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"29475:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29481:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"29475:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29466:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4626,"nodeType":"IfStatement","src":"29462:188:20","trueBody":{"id":4625,"nodeType":"Block","src":"29492:158:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4607,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"29510:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4608,"name":"PARENT_CANNOT_CONTROL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"29518:21:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"29510:29:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4610,"name":"PARENT_CANNOT_CONTROL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"29543:21:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"29510:54:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4620,"nodeType":"IfStatement","src":"29506:111:20","trueBody":{"id":4619,"nodeType":"Block","src":"29566:51:20","statements":[{"expression":{"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4612,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"29584:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":4615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29600:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29592:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4613,"name":"address","nodeType":"ElementaryTypeName","src":"29592:7:20","typeDescriptions":{}}},"id":4616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29592:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"29584:18:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4618,"nodeType":"ExpressionStatement","src":"29584:18:20"}]}},{"expression":{"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4621,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"29630:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29638:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29630:9:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":4624,"nodeType":"ExpressionStatement","src":"29630:9:20"}]}},{"expression":{"components":[{"id":4627,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"29668:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4628,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"29675:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":4629,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"29667:14:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$","typeString":"tuple(address,uint32)"}},"functionReturnParameters":4602,"id":4630,"nodeType":"Return","src":"29660:21:20"}]},"id":4632,"implemented":true,"kind":"function","modifiers":[],"name":"_clearOwnerAndFuses","nameLocation":"29309:19:20","nodeType":"FunctionDefinition","overrides":{"id":4597,"nodeType":"OverrideSpecifier","overrides":[],"src":"29417:8:20"},"parameters":{"id":4596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4591,"mutability":"mutable","name":"owner","nameLocation":"29346:5:20","nodeType":"VariableDeclaration","scope":4632,"src":"29338:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4590,"name":"address","nodeType":"ElementaryTypeName","src":"29338:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4593,"mutability":"mutable","name":"fuses","nameLocation":"29368:5:20","nodeType":"VariableDeclaration","scope":4632,"src":"29361:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4592,"name":"uint32","nodeType":"ElementaryTypeName","src":"29361:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4595,"mutability":"mutable","name":"expiry","nameLocation":"29390:6:20","nodeType":"VariableDeclaration","scope":4632,"src":"29383:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4594,"name":"uint64","nodeType":"ElementaryTypeName","src":"29383:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"29328:74:20"},"returnParameters":{"id":4602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4632,"src":"29435:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4598,"name":"address","nodeType":"ElementaryTypeName","src":"29435:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4632,"src":"29444:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4600,"name":"uint32","nodeType":"ElementaryTypeName","src":"29444:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"29434:17:20"},"scope":5349,"src":"29300:388:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4649,"nodeType":"Block","src":"29805:68:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":4644,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"29849:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4645,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"29855:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4642,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"29832:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"29836:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"29832:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29832:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4641,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"29822:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29822:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4640,"id":4648,"nodeType":"Return","src":"29815:51:20"}]},"id":4650,"implemented":true,"kind":"function","modifiers":[],"name":"_makeNode","nameLocation":"29703:9:20","nodeType":"FunctionDefinition","parameters":{"id":4637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4634,"mutability":"mutable","name":"node","nameLocation":"29721:4:20","nodeType":"VariableDeclaration","scope":4650,"src":"29713:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4633,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29713:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4636,"mutability":"mutable","name":"labelhash","nameLocation":"29735:9:20","nodeType":"VariableDeclaration","scope":4650,"src":"29727:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4635,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29727:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"29712:33:20"},"returnParameters":{"id":4640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4650,"src":"29792:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4638,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29792:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"29791:9:20"},"scope":5349,"src":"29694:179:20","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4698,"nodeType":"Block","src":"30007:257:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4661,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"30027:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30021:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4659,"name":"bytes","nodeType":"ElementaryTypeName","src":"30021:5:20","typeDescriptions":{}}},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30021:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30034:6:20","memberName":"length","nodeType":"MemberAccess","src":"30021:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":4664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30043:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30021:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4670,"nodeType":"IfStatement","src":"30017:76:20","trueBody":{"id":4669,"nodeType":"Block","src":"30046:47:20","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4666,"name":"LabelTooShort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"30067:13:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30067:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4668,"nodeType":"RevertStatement","src":"30060:22:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4673,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"30112:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30106:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4671,"name":"bytes","nodeType":"ElementaryTypeName","src":"30106:5:20","typeDescriptions":{}}},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30106:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30119:6:20","memberName":"length","nodeType":"MemberAccess","src":"30106:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"323535","id":4676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30128:3:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"30106:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4683,"nodeType":"IfStatement","src":"30102:82:20","trueBody":{"id":4682,"nodeType":"Block","src":"30133:51:20","statements":[{"errorCall":{"arguments":[{"id":4679,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"30167:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4678,"name":"LabelTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"30154:12:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30154:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4681,"nodeType":"RevertStatement","src":"30147:26:20"}]}},{"expression":{"arguments":[{"arguments":[{"expression":{"arguments":[{"id":4690,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"30229:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30223:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4688,"name":"bytes","nodeType":"ElementaryTypeName","src":"30223:5:20","typeDescriptions":{}}},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30223:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30236:6:20","memberName":"length","nodeType":"MemberAccess","src":"30223:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30217:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4686,"name":"uint8","nodeType":"ElementaryTypeName","src":"30217:5:20","typeDescriptions":{}}},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30217:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4694,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"30245:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4695,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"30252:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4684,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"30200:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"30204:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"30200:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30200:57:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4658,"id":4697,"nodeType":"Return","src":"30193:64:20"}]},"id":4699,"implemented":true,"kind":"function","modifiers":[],"name":"_addLabel","nameLocation":"29888:9:20","nodeType":"FunctionDefinition","parameters":{"id":4655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4652,"mutability":"mutable","name":"label","nameLocation":"29912:5:20","nodeType":"VariableDeclaration","scope":4699,"src":"29898:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4651,"name":"string","nodeType":"ElementaryTypeName","src":"29898:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4654,"mutability":"mutable","name":"name","nameLocation":"29932:4:20","nodeType":"VariableDeclaration","scope":4699,"src":"29919:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4653,"name":"bytes","nodeType":"ElementaryTypeName","src":"29919:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29897:40:20"},"returnParameters":{"id":4658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4657,"mutability":"mutable","name":"ret","nameLocation":"29998:3:20","nodeType":"VariableDeclaration","scope":4699,"src":"29985:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4656,"name":"bytes","nodeType":"ElementaryTypeName","src":"29985:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29984:18:20"},"scope":5349,"src":"29879:385:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[1989],"body":{"id":4758,"nodeType":"Block","src":"30399:345:20","statements":[{"expression":{"arguments":[{"id":4712,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"30427:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4713,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"30433:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":4711,"name":"_canFusesBeBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"30409:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint32_$returns$__$","typeString":"function (bytes32,uint32) pure"}},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30409:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4715,"nodeType":"ExpressionStatement","src":"30409:30:20"},{"assignments":[4717,null,null],"declarations":[{"constant":false,"id":4717,"mutability":"mutable","name":"oldOwner","nameLocation":"30458:8:20","nodeType":"VariableDeclaration","scope":4758,"src":"30450:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4716,"name":"address","nodeType":"ElementaryTypeName","src":"30450:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},null,null],"id":4725,"initialValue":{"arguments":[{"arguments":[{"id":4722,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"30496:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30488:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4720,"name":"uint256","nodeType":"ElementaryTypeName","src":"30488:7:20","typeDescriptions":{}}},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30488:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4718,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"30474:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NameWrapper_$5349_$","typeString":"type(contract super NameWrapper)"}},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30480:7:20","memberName":"getData","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"30474:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (uint256) view returns (address,uint32,uint64)"}},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30474:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"30449:53:20"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4726,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"30516:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30536:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30528:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4727,"name":"address","nodeType":"ElementaryTypeName","src":"30528:7:20","typeDescriptions":{}}},"id":4730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30528:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"30516:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4748,"nodeType":"IfStatement","src":"30512:177:20","trueBody":{"id":4747,"nodeType":"Block","src":"30540:149:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":4735,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"30622:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30614:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4733,"name":"uint256","nodeType":"ElementaryTypeName","src":"30614:7:20","typeDescriptions":{}}},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30614:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4732,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"30608:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30608:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4738,"nodeType":"ExpressionStatement","src":"30608:20:20"},{"eventCall":{"arguments":[{"id":4740,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"30661:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":4743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30675:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30667:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4741,"name":"address","nodeType":"ElementaryTypeName","src":"30667:7:20","typeDescriptions":{}}},"id":4744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30667:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4739,"name":"NameUnwrapped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"30647:13:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30647:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4746,"nodeType":"EmitStatement","src":"30642:36:20"}]}},{"expression":{"arguments":[{"id":4752,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"30710:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4753,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"30716:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4754,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"30723:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4755,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"30730:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":4749,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"30698:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NameWrapper_$5349_$","typeString":"type(contract super NameWrapper)"}},"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30704:5:20","memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":1989,"src":"30698:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_uint32_$_t_uint64_$returns$__$","typeString":"function (bytes32,address,uint32,uint64)"}},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30698:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4757,"nodeType":"ExpressionStatement","src":"30698:39:20"}]},"id":4759,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"30279:5:20","nodeType":"FunctionDefinition","overrides":{"id":4709,"nodeType":"OverrideSpecifier","overrides":[],"src":"30390:8:20"},"parameters":{"id":4708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4701,"mutability":"mutable","name":"node","nameLocation":"30302:4:20","nodeType":"VariableDeclaration","scope":4759,"src":"30294:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4700,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30294:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4703,"mutability":"mutable","name":"owner","nameLocation":"30324:5:20","nodeType":"VariableDeclaration","scope":4759,"src":"30316:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4702,"name":"address","nodeType":"ElementaryTypeName","src":"30316:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4705,"mutability":"mutable","name":"fuses","nameLocation":"30346:5:20","nodeType":"VariableDeclaration","scope":4759,"src":"30339:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4704,"name":"uint32","nodeType":"ElementaryTypeName","src":"30339:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4707,"mutability":"mutable","name":"expiry","nameLocation":"30368:6:20","nodeType":"VariableDeclaration","scope":4759,"src":"30361:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4706,"name":"uint64","nodeType":"ElementaryTypeName","src":"30361:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"30284:96:20"},"returnParameters":{"id":4710,"nodeType":"ParameterList","parameters":[],"src":"30399:0:20"},"scope":5349,"src":"30270:474:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4787,"nodeType":"Block","src":"30904:124:20","statements":[{"expression":{"arguments":[{"id":4773,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"30920:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4774,"name":"wrappedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"30926:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4775,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"30940:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4776,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"30947:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":4772,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[4759],"referencedDeclaration":4759,"src":"30914:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_uint32_$_t_uint64_$returns$__$","typeString":"function (bytes32,address,uint32,uint64)"}},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30914:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4778,"nodeType":"ExpressionStatement","src":"30914:40:20"},{"eventCall":{"arguments":[{"id":4780,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"30981:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4781,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"30987:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4782,"name":"wrappedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"30993:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4783,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"31007:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4784,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"31014:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":4779,"name":"NameWrapped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"30969:11:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint32_$_t_uint64_$returns$__$","typeString":"function (bytes32,bytes memory,address,uint32,uint64)"}},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30969:52:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4786,"nodeType":"EmitStatement","src":"30964:57:20"}]},"id":4788,"implemented":true,"kind":"function","modifiers":[],"name":"_wrap","nameLocation":"30759:5:20","nodeType":"FunctionDefinition","parameters":{"id":4770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4761,"mutability":"mutable","name":"node","nameLocation":"30782:4:20","nodeType":"VariableDeclaration","scope":4788,"src":"30774:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4760,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30774:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4763,"mutability":"mutable","name":"name","nameLocation":"30809:4:20","nodeType":"VariableDeclaration","scope":4788,"src":"30796:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4762,"name":"bytes","nodeType":"ElementaryTypeName","src":"30796:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4765,"mutability":"mutable","name":"wrappedOwner","nameLocation":"30831:12:20","nodeType":"VariableDeclaration","scope":4788,"src":"30823:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4764,"name":"address","nodeType":"ElementaryTypeName","src":"30823:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4767,"mutability":"mutable","name":"fuses","nameLocation":"30860:5:20","nodeType":"VariableDeclaration","scope":4788,"src":"30853:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4766,"name":"uint32","nodeType":"ElementaryTypeName","src":"30853:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4769,"mutability":"mutable","name":"expiry","nameLocation":"30882:6:20","nodeType":"VariableDeclaration","scope":4788,"src":"30875:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4768,"name":"uint64","nodeType":"ElementaryTypeName","src":"30875:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"30764:130:20"},"returnParameters":{"id":4771,"nodeType":"ParameterList","parameters":[],"src":"30904:0:20"},"scope":5349,"src":"30750:278:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4820,"nodeType":"Block","src":"31223:121:20","statements":[{"assignments":[4804],"declarations":[{"constant":false,"id":4804,"mutability":"mutable","name":"name","nameLocation":"31246:4:20","nodeType":"VariableDeclaration","scope":4820,"src":"31233:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4803,"name":"bytes","nodeType":"ElementaryTypeName","src":"31233:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4811,"initialValue":{"arguments":[{"id":4806,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4794,"src":"31263:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"id":4807,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"31270:5:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":4809,"indexExpression":{"id":4808,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4790,"src":"31276:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31270:17:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}],"id":4805,"name":"_addLabel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"31253:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory,bytes memory) pure returns (bytes memory)"}},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31253:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"31233:55:20"},{"expression":{"arguments":[{"id":4813,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"31304:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4814,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"31310:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4815,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"31316:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4816,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"31323:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4817,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"31330:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":4812,"name":"_wrap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"31298:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint32_$_t_uint64_$returns$__$","typeString":"function (bytes32,bytes memory,address,uint32,uint64)"}},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31298:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4819,"nodeType":"ExpressionStatement","src":"31298:39:20"}]},"id":4821,"implemented":true,"kind":"function","modifiers":[],"name":"_storeNameAndWrap","nameLocation":"31043:17:20","nodeType":"FunctionDefinition","parameters":{"id":4801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4790,"mutability":"mutable","name":"parentNode","nameLocation":"31078:10:20","nodeType":"VariableDeclaration","scope":4821,"src":"31070:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4789,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31070:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4792,"mutability":"mutable","name":"node","nameLocation":"31106:4:20","nodeType":"VariableDeclaration","scope":4821,"src":"31098:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4791,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31098:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4794,"mutability":"mutable","name":"label","nameLocation":"31134:5:20","nodeType":"VariableDeclaration","scope":4821,"src":"31120:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4793,"name":"string","nodeType":"ElementaryTypeName","src":"31120:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4796,"mutability":"mutable","name":"owner","nameLocation":"31157:5:20","nodeType":"VariableDeclaration","scope":4821,"src":"31149:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4795,"name":"address","nodeType":"ElementaryTypeName","src":"31149:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4798,"mutability":"mutable","name":"fuses","nameLocation":"31179:5:20","nodeType":"VariableDeclaration","scope":4821,"src":"31172:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4797,"name":"uint32","nodeType":"ElementaryTypeName","src":"31172:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4800,"mutability":"mutable","name":"expiry","nameLocation":"31201:6:20","nodeType":"VariableDeclaration","scope":4821,"src":"31194:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4799,"name":"uint64","nodeType":"ElementaryTypeName","src":"31194:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"31060:153:20"},"returnParameters":{"id":4802,"nodeType":"ParameterList","parameters":[],"src":"31223:0:20"},"scope":5349,"src":"31034:310:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4849,"nodeType":"Block","src":"31487:121:20","statements":[{"assignments":[4833],"declarations":[{"constant":false,"id":4833,"mutability":"mutable","name":"name","nameLocation":"31510:4:20","nodeType":"VariableDeclaration","scope":4849,"src":"31497:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4832,"name":"bytes","nodeType":"ElementaryTypeName","src":"31497:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4840,"initialValue":{"arguments":[{"id":4835,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"31527:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"id":4836,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"31534:5:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":4838,"indexExpression":{"id":4837,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"31540:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31534:17:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}],"id":4834,"name":"_addLabel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"31517:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory,bytes memory) pure returns (bytes memory)"}},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31517:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"31497:55:20"},{"expression":{"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4841,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"31562:5:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":4843,"indexExpression":{"id":4842,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"31568:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"31562:11:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4844,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"31576:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"31562:18:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":4846,"nodeType":"ExpressionStatement","src":"31562:18:20"},{"expression":{"id":4847,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"31597:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4831,"id":4848,"nodeType":"Return","src":"31590:11:20"}]},"id":4850,"implemented":true,"kind":"function","modifiers":[],"name":"_saveLabel","nameLocation":"31359:10:20","nodeType":"FunctionDefinition","parameters":{"id":4828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4823,"mutability":"mutable","name":"parentNode","nameLocation":"31387:10:20","nodeType":"VariableDeclaration","scope":4850,"src":"31379:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4822,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31379:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4825,"mutability":"mutable","name":"node","nameLocation":"31415:4:20","nodeType":"VariableDeclaration","scope":4850,"src":"31407:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31407:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4827,"mutability":"mutable","name":"label","nameLocation":"31443:5:20","nodeType":"VariableDeclaration","scope":4850,"src":"31429:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4826,"name":"string","nodeType":"ElementaryTypeName","src":"31429:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31369:85:20"},"returnParameters":{"id":4831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4850,"src":"31473:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4829,"name":"bytes","nodeType":"ElementaryTypeName","src":"31473:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"31472:14:20"},"scope":5349,"src":"31350:258:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4908,"nodeType":"Block","src":"31780:306:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4863,"name":"upgradeContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"31802:15:20","typeDescriptions":{"typeIdentifier":"t_contract$_INameWrapperUpgrade_$2580","typeString":"contract INameWrapperUpgrade"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_INameWrapperUpgrade_$2580","typeString":"contract INameWrapperUpgrade"}],"id":4862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31794:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4861,"name":"address","nodeType":"ElementaryTypeName","src":"31794:7:20","typeDescriptions":{}}},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31794:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31830:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31822:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4865,"name":"address","nodeType":"ElementaryTypeName","src":"31822:7:20","typeDescriptions":{}}},"id":4868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"31794:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4874,"nodeType":"IfStatement","src":"31790:91:20","trueBody":{"id":4873,"nodeType":"Block","src":"31834:47:20","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4870,"name":"CannotUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"31855:13:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31855:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4872,"nodeType":"RevertStatement","src":"31848:22:20"}]}},{"condition":{"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"31895:32:20","subExpression":{"arguments":[{"id":4876,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"31910:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4877,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"31916:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31920:6:20","memberName":"sender","nodeType":"MemberAccess","src":"31916:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4875,"name":"canModifyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"31896:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31896:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4888,"nodeType":"IfStatement","src":"31891:100:20","trueBody":{"id":4887,"nodeType":"Block","src":"31929:62:20","statements":[{"errorCall":{"arguments":[{"id":4882,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"31963:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4883,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"31969:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31973:6:20","memberName":"sender","nodeType":"MemberAccess","src":"31969:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4881,"name":"Unauthorised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"31950:12:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) pure"}},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31950:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4886,"nodeType":"RevertStatement","src":"31943:37:20"}]}},{"expression":{"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4889,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"32002:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4890,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"32009:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4891,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4859,"src":"32016:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":4892,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"32001:22:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4896,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"32042:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32034:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4894,"name":"uint256","nodeType":"ElementaryTypeName","src":"32034:7:20","typeDescriptions":{}}},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32034:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4893,"name":"getData","nodeType":"Identifier","overloadedDeclarations":[2866],"referencedDeclaration":2866,"src":"32026:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (uint256) view returns (address,uint32,uint64)"}},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32026:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"src":"32001:47:20","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4900,"nodeType":"ExpressionStatement","src":"32001:47:20"},{"expression":{"arguments":[{"arguments":[{"id":4904,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"32073:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32065:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4902,"name":"uint256","nodeType":"ElementaryTypeName","src":"32065:7:20","typeDescriptions":{}}},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32065:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4901,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"32059:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32059:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4907,"nodeType":"ExpressionStatement","src":"32059:20:20"}]},"id":4909,"implemented":true,"kind":"function","modifiers":[],"name":"_prepareUpgrade","nameLocation":"31623:15:20","nodeType":"FunctionDefinition","parameters":{"id":4853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4852,"mutability":"mutable","name":"node","nameLocation":"31647:4:20","nodeType":"VariableDeclaration","scope":4909,"src":"31639:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31639:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"31638:14:20"},"returnParameters":{"id":4860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4855,"mutability":"mutable","name":"owner","nameLocation":"31707:5:20","nodeType":"VariableDeclaration","scope":4909,"src":"31699:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4854,"name":"address","nodeType":"ElementaryTypeName","src":"31699:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4857,"mutability":"mutable","name":"fuses","nameLocation":"31733:5:20","nodeType":"VariableDeclaration","scope":4909,"src":"31726:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4856,"name":"uint32","nodeType":"ElementaryTypeName","src":"31726:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4859,"mutability":"mutable","name":"expiry","nameLocation":"31759:6:20","nodeType":"VariableDeclaration","scope":4909,"src":"31752:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4858,"name":"uint64","nodeType":"ElementaryTypeName","src":"31752:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"31685:90:20"},"scope":5349,"src":"31614:472:20","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4998,"nodeType":"Block","src":"32275:498:20","statements":[{"assignments":[4925,4927,4929],"declarations":[{"constant":false,"id":4925,"mutability":"mutable","name":"oldOwner","nameLocation":"32294:8:20","nodeType":"VariableDeclaration","scope":4998,"src":"32286:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4924,"name":"address","nodeType":"ElementaryTypeName","src":"32286:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4927,"mutability":"mutable","name":"oldFuses","nameLocation":"32311:8:20","nodeType":"VariableDeclaration","scope":4998,"src":"32304:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4926,"name":"uint32","nodeType":"ElementaryTypeName","src":"32304:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4929,"mutability":"mutable","name":"oldExpiry","nameLocation":"32328:9:20","nodeType":"VariableDeclaration","scope":4998,"src":"32321:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4928,"name":"uint64","nodeType":"ElementaryTypeName","src":"32321:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":4936,"initialValue":{"arguments":[{"arguments":[{"id":4933,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"32370:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32362:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4931,"name":"uint256","nodeType":"ElementaryTypeName","src":"32362:7:20","typeDescriptions":{}}},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32362:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4930,"name":"getData","nodeType":"Identifier","overloadedDeclarations":[2866],"referencedDeclaration":2866,"src":"32341:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (uint256) view returns (address,uint32,uint64)"}},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32341:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"32285:100:20"},{"assignments":[4938],"declarations":[{"constant":false,"id":4938,"mutability":"mutable","name":"name","nameLocation":"32408:4:20","nodeType":"VariableDeclaration","scope":4998,"src":"32395:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4937,"name":"bytes","nodeType":"ElementaryTypeName","src":"32395:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4945,"initialValue":{"arguments":[{"id":4940,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"32425:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"id":4941,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"32432:5:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":4943,"indexExpression":{"id":4942,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"32438:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"32432:17:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}],"id":4939,"name":"_addLabel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"32415:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory,bytes memory) pure returns (bytes memory)"}},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32415:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"32395:55:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4946,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"32464:5:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":4948,"indexExpression":{"id":4947,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"32470:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"32464:11:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32476:6:20","memberName":"length","nodeType":"MemberAccess","src":"32464:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32486:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"32464:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4959,"nodeType":"IfStatement","src":"32460:72:20","trueBody":{"id":4958,"nodeType":"Block","src":"32489:43:20","statements":[{"expression":{"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4952,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"32503:5:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":4954,"indexExpression":{"id":4953,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"32509:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"32503:11:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4955,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"32517:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"32503:18:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":4957,"nodeType":"ExpressionStatement","src":"32503:18:20"}]}},{"expression":{"arguments":[{"id":4961,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"32551:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4962,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"32557:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4963,"name":"oldFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"32567:8:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":4964,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"32578:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"32567:16:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4966,"name":"oldExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"32585:9:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4967,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"32596:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":4960,"name":"_setFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"32541:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_uint32_$_t_uint64_$_t_uint64_$returns$__$","typeString":"function (bytes32,address,uint32,uint64,uint64)"}},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32541:62:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4969,"nodeType":"ExpressionStatement","src":"32541:62:20"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4970,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"32617:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32634:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32626:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4971,"name":"address","nodeType":"ElementaryTypeName","src":"32626:7:20","typeDescriptions":{}}},"id":4974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32626:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"32617:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4996,"nodeType":"Block","src":"32694:73:20","statements":[{"expression":{"arguments":[{"id":4986,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"32718:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4987,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"32728:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4990,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"32743:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32735:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4988,"name":"uint256","nodeType":"ElementaryTypeName","src":"32735:7:20","typeDescriptions":{}}},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32735:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":4992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32750:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"","id":4993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32753:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":4985,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"32708:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32708:48:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4995,"nodeType":"ExpressionStatement","src":"32708:48:20"}]},"id":4997,"nodeType":"IfStatement","src":"32613:154:20","trueBody":{"id":4984,"nodeType":"Block","src":"32638:50:20","statements":[{"expression":{"arguments":[{"id":4977,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"32660:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":4980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32674:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32666:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4978,"name":"address","nodeType":"ElementaryTypeName","src":"32666:7:20","typeDescriptions":{}}},"id":4981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32666:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4976,"name":"_unwrap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"32652:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32652:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4983,"nodeType":"ExpressionStatement","src":"32652:25:20"}]}}]},"id":4999,"implemented":true,"kind":"function","modifiers":[],"name":"_updateName","nameLocation":"32101:11:20","nodeType":"FunctionDefinition","parameters":{"id":4922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4911,"mutability":"mutable","name":"parentNode","nameLocation":"32130:10:20","nodeType":"VariableDeclaration","scope":4999,"src":"32122:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4910,"name":"bytes32","nodeType":"ElementaryTypeName","src":"32122:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4913,"mutability":"mutable","name":"node","nameLocation":"32158:4:20","nodeType":"VariableDeclaration","scope":4999,"src":"32150:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"32150:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4915,"mutability":"mutable","name":"label","nameLocation":"32186:5:20","nodeType":"VariableDeclaration","scope":4999,"src":"32172:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4914,"name":"string","nodeType":"ElementaryTypeName","src":"32172:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4917,"mutability":"mutable","name":"owner","nameLocation":"32209:5:20","nodeType":"VariableDeclaration","scope":4999,"src":"32201:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4916,"name":"address","nodeType":"ElementaryTypeName","src":"32201:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4919,"mutability":"mutable","name":"fuses","nameLocation":"32231:5:20","nodeType":"VariableDeclaration","scope":4999,"src":"32224:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4918,"name":"uint32","nodeType":"ElementaryTypeName","src":"32224:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4921,"mutability":"mutable","name":"expiry","nameLocation":"32253:6:20","nodeType":"VariableDeclaration","scope":4999,"src":"32246:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4920,"name":"uint64","nodeType":"ElementaryTypeName","src":"32246:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"32112:153:20"},"returnParameters":{"id":4923,"nodeType":"ParameterList","parameters":[],"src":"32275:0:20"},"scope":5349,"src":"32092:681:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5044,"nodeType":"Block","src":"32987:261:20","statements":[{"assignments":[null,null,5013],"declarations":[null,null,{"constant":false,"id":5013,"mutability":"mutable","name":"oldExpiry","nameLocation":"33009:9:20","nodeType":"VariableDeclaration","scope":5044,"src":"33002:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5012,"name":"uint64","nodeType":"ElementaryTypeName","src":"33002:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":5020,"initialValue":{"arguments":[{"arguments":[{"id":5017,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"33038:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33030:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5015,"name":"uint256","nodeType":"ElementaryTypeName","src":"33030:7:20","typeDescriptions":{}}},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33030:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5014,"name":"getData","nodeType":"Identifier","overloadedDeclarations":[2866],"referencedDeclaration":2866,"src":"33022:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (uint256) view returns (address,uint32,uint64)"}},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33022:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"32997:47:20"},{"assignments":[null,5022,5024],"declarations":[null,{"constant":false,"id":5022,"mutability":"mutable","name":"parentFuses","nameLocation":"33064:11:20","nodeType":"VariableDeclaration","scope":5044,"src":"33057:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5021,"name":"uint32","nodeType":"ElementaryTypeName","src":"33057:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":5024,"mutability":"mutable","name":"maxExpiry","nameLocation":"33084:9:20","nodeType":"VariableDeclaration","scope":5044,"src":"33077:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5023,"name":"uint64","nodeType":"ElementaryTypeName","src":"33077:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":5031,"initialValue":{"arguments":[{"arguments":[{"id":5028,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"33113:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33105:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5026,"name":"uint256","nodeType":"ElementaryTypeName","src":"33105:7:20","typeDescriptions":{}}},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33105:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5025,"name":"getData","nodeType":"Identifier","overloadedDeclarations":[2866],"referencedDeclaration":2866,"src":"33097:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint32_$_t_uint64_$","typeString":"function (uint256) view returns (address,uint32,uint64)"}},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33097:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint32_$_t_uint64_$","typeString":"tuple(address,uint32,uint64)"}},"nodeType":"VariableDeclarationStatement","src":"33054:71:20"},{"expression":{"arguments":[{"id":5033,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"33153:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5034,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"33159:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":5035,"name":"parentFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"33166:11:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":5032,"name":"_checkParentFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"33135:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint32_$_t_uint32_$returns$__$","typeString":"function (bytes32,uint32,uint32) pure"}},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33135:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5037,"nodeType":"ExpressionStatement","src":"33135:43:20"},{"expression":{"arguments":[{"id":5039,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"33212:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":5040,"name":"oldExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"33220:9:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":5041,"name":"maxExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"33231:9:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":5038,"name":"_normaliseExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"33195:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint64_$_t_uint64_$_t_uint64_$returns$_t_uint64_$","typeString":"function (uint64,uint64,uint64) pure returns (uint64)"}},"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33195:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5011,"id":5043,"nodeType":"Return","src":"33188:53:20"}]},"id":5045,"implemented":true,"kind":"function","modifiers":[],"name":"_checkParentFusesAndExpiry","nameLocation":"32828:26:20","nodeType":"FunctionDefinition","parameters":{"id":5008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5001,"mutability":"mutable","name":"parentNode","nameLocation":"32872:10:20","nodeType":"VariableDeclaration","scope":5045,"src":"32864:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5000,"name":"bytes32","nodeType":"ElementaryTypeName","src":"32864:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5003,"mutability":"mutable","name":"node","nameLocation":"32900:4:20","nodeType":"VariableDeclaration","scope":5045,"src":"32892:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"32892:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5005,"mutability":"mutable","name":"fuses","nameLocation":"32921:5:20","nodeType":"VariableDeclaration","scope":5045,"src":"32914:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5004,"name":"uint32","nodeType":"ElementaryTypeName","src":"32914:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":5007,"mutability":"mutable","name":"expiry","nameLocation":"32943:6:20","nodeType":"VariableDeclaration","scope":5045,"src":"32936:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5006,"name":"uint64","nodeType":"ElementaryTypeName","src":"32936:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"32854:101:20"},"returnParameters":{"id":5011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5045,"src":"32979:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5009,"name":"uint64","nodeType":"ElementaryTypeName","src":"32979:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"32978:8:20"},"scope":5349,"src":"32819:429:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5079,"nodeType":"Block","src":"33373:301:20","statements":[{"assignments":[5055],"declarations":[{"constant":false,"id":5055,"mutability":"mutable","name":"isBurningParentControlledFuses","nameLocation":"33388:30:20","nodeType":"VariableDeclaration","scope":5079,"src":"33383:35:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5054,"name":"bool","nodeType":"ElementaryTypeName","src":"33383:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5061,"initialValue":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5056,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5049,"src":"33421:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5057,"name":"PARENT_CONTROLLED_FUSES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"33429:23:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"33421:31:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33468:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"33421:48:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"33383:86:20"},{"assignments":[5063],"declarations":[{"constant":false,"id":5063,"mutability":"mutable","name":"parentHasNotBurnedCU","nameLocation":"33485:20:20","nodeType":"VariableDeclaration","scope":5079,"src":"33480:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5062,"name":"bool","nodeType":"ElementaryTypeName","src":"33480:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5069,"initialValue":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5064,"name":"parentFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"33508:11:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5065,"name":"CANNOT_UNWRAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"33522:13:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"33508:27:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33539:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"33508:32:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"33480:60:20"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5070,"name":"isBurningParentControlledFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"33555:30:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":5071,"name":"parentHasNotBurnedCU","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"33589:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"33555:54:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5078,"nodeType":"IfStatement","src":"33551:117:20","trueBody":{"id":5077,"nodeType":"Block","src":"33611:57:20","statements":[{"errorCall":{"arguments":[{"id":5074,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5047,"src":"33652:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5073,"name":"OperationProhibited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"33632:19:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33632:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5076,"nodeType":"RevertStatement","src":"33625:32:20"}]}}]},"id":5080,"implemented":true,"kind":"function","modifiers":[],"name":"_checkParentFuses","nameLocation":"33263:17:20","nodeType":"FunctionDefinition","parameters":{"id":5052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5047,"mutability":"mutable","name":"node","nameLocation":"33298:4:20","nodeType":"VariableDeclaration","scope":5080,"src":"33290:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5046,"name":"bytes32","nodeType":"ElementaryTypeName","src":"33290:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5049,"mutability":"mutable","name":"fuses","nameLocation":"33319:5:20","nodeType":"VariableDeclaration","scope":5080,"src":"33312:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5048,"name":"uint32","nodeType":"ElementaryTypeName","src":"33312:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":5051,"mutability":"mutable","name":"parentFuses","nameLocation":"33341:11:20","nodeType":"VariableDeclaration","scope":5080,"src":"33334:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5050,"name":"uint32","nodeType":"ElementaryTypeName","src":"33334:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"33280:78:20"},"returnParameters":{"id":5053,"nodeType":"ParameterList","parameters":[],"src":"33373:0:20"},"scope":5349,"src":"33254:420:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5111,"nodeType":"Block","src":"33818:352:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5091,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"33952:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5092,"name":"maxExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"33961:9:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"33952:18:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5099,"nodeType":"IfStatement","src":"33948:67:20","trueBody":{"id":5098,"nodeType":"Block","src":"33972:43:20","statements":[{"expression":{"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5094,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"33986:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5095,"name":"maxExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"33995:9:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"33986:18:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":5097,"nodeType":"ExpressionStatement","src":"33986:18:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5100,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"34077:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5101,"name":"oldExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"34086:9:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"34077:18:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5108,"nodeType":"IfStatement","src":"34073:67:20","trueBody":{"id":5107,"nodeType":"Block","src":"34097:43:20","statements":[{"expression":{"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5103,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"34111:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5104,"name":"oldExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"34120:9:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"34111:18:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":5106,"nodeType":"ExpressionStatement","src":"34111:18:20"}]}},{"expression":{"id":5109,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"34157:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5090,"id":5110,"nodeType":"Return","src":"34150:13:20"}]},"id":5112,"implemented":true,"kind":"function","modifiers":[],"name":"_normaliseExpiry","nameLocation":"33689:16:20","nodeType":"FunctionDefinition","parameters":{"id":5087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"expiry","nameLocation":"33722:6:20","nodeType":"VariableDeclaration","scope":5112,"src":"33715:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5081,"name":"uint64","nodeType":"ElementaryTypeName","src":"33715:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":5084,"mutability":"mutable","name":"oldExpiry","nameLocation":"33745:9:20","nodeType":"VariableDeclaration","scope":5112,"src":"33738:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5083,"name":"uint64","nodeType":"ElementaryTypeName","src":"33738:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":5086,"mutability":"mutable","name":"maxExpiry","nameLocation":"33771:9:20","nodeType":"VariableDeclaration","scope":5112,"src":"33764:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5085,"name":"uint64","nodeType":"ElementaryTypeName","src":"33764:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"33705:81:20"},"returnParameters":{"id":5090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5112,"src":"33810:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5088,"name":"uint64","nodeType":"ElementaryTypeName","src":"33810:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"33809:8:20"},"scope":5349,"src":"33680:490:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5194,"nodeType":"Block","src":"34333:639:20","statements":[{"assignments":[5124],"declarations":[{"constant":false,"id":5124,"mutability":"mutable","name":"labelhash","nameLocation":"34351:9:20","nodeType":"VariableDeclaration","scope":5194,"src":"34343:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5123,"name":"bytes32","nodeType":"ElementaryTypeName","src":"34343:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5131,"initialValue":{"arguments":[{"arguments":[{"id":5128,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"34379:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34373:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5126,"name":"bytes","nodeType":"ElementaryTypeName","src":"34373:5:20","typeDescriptions":{}}},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34373:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5125,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"34363:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34363:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"34343:43:20"},{"assignments":[5133],"declarations":[{"constant":false,"id":5133,"mutability":"mutable","name":"node","nameLocation":"34404:4:20","nodeType":"VariableDeclaration","scope":5194,"src":"34396:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"34396:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5138,"initialValue":{"arguments":[{"id":5135,"name":"ETH_NODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"34421:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5136,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"34431:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5134,"name":"_makeNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"34411:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34411:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"34396:45:20"},{"assignments":[5140],"declarations":[{"constant":false,"id":5140,"mutability":"mutable","name":"name","nameLocation":"34523:4:20","nodeType":"VariableDeclaration","scope":5194,"src":"34510:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5139,"name":"bytes","nodeType":"ElementaryTypeName","src":"34510:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5145,"initialValue":{"arguments":[{"id":5142,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"34540:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"0365746800","id":5143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34547:13:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c65934a88d283a635602ca15e14e8b9a9a3d150eacacca3b07f4a85f5fdbface","typeString":"literal_string hex\"0365746800\""},"value":"\u0003eth\u0000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_c65934a88d283a635602ca15e14e8b9a9a3d150eacacca3b07f4a85f5fdbface","typeString":"literal_string hex\"0365746800\""}],"id":5141,"name":"_addLabel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"34530:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory,bytes memory) pure returns (bytes memory)"}},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34530:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"34510:51:20"},{"expression":{"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5146,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"34571:5:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":5148,"indexExpression":{"id":5147,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"34577:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"34571:11:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5149,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5140,"src":"34585:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"34571:18:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":5151,"nodeType":"ExpressionStatement","src":"34571:18:20"},{"assignments":[5153],"declarations":[{"constant":false,"id":5153,"mutability":"mutable","name":"expiry","nameLocation":"34607:6:20","nodeType":"VariableDeclaration","scope":5194,"src":"34600:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5152,"name":"uint64","nodeType":"ElementaryTypeName","src":"34600:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":5166,"initialValue":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":5160,"name":"labelhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"34653:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34645:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5158,"name":"uint256","nodeType":"ElementaryTypeName","src":"34645:7:20","typeDescriptions":{}}},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34645:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5156,"name":"registrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"34623:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaseRegistrar_$985","typeString":"contract IBaseRegistrar"}},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34633:11:20","memberName":"nameExpires","nodeType":"MemberAccess","referencedDeclaration":948,"src":"34623:21:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34623:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34616:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5154,"name":"uint64","nodeType":"ElementaryTypeName","src":"34616:6:20","typeDescriptions":{}}},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34616:49:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5164,"name":"GRACE_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"34680:12:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"34616:76:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"34600:92:20"},{"expression":{"arguments":[{"id":5168,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"34722:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5169,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5140,"src":"34740:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5170,"name":"wrappedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"34758:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5171,"name":"ownerControlledFuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"34784:20:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":5172,"name":"PARENT_CANNOT_CONTROL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"34807:21:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"34784:44:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":5174,"name":"IS_DOT_ETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"34831:10:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"34784:57:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":5176,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"34855:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":5167,"name":"_wrap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"34703:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint32_$_t_uint64_$returns$__$","typeString":"function (bytes32,bytes memory,address,uint32,uint64)"}},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34703:168:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5178,"nodeType":"ExpressionStatement","src":"34703:168:20"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5179,"name":"resolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"34886:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34906:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34898:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5180,"name":"address","nodeType":"ElementaryTypeName","src":"34898:7:20","typeDescriptions":{}}},"id":5183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34898:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"34886:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5193,"nodeType":"IfStatement","src":"34882:84:20","trueBody":{"id":5192,"nodeType":"Block","src":"34910:56:20","statements":[{"expression":{"arguments":[{"id":5188,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"34940:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5189,"name":"resolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"34946:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5185,"name":"ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"34924:3:20","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"}},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34928:11:20","memberName":"setResolver","nodeType":"MemberAccess","referencedDeclaration":1063,"src":"34924:15:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) external"}},"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34924:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5191,"nodeType":"ExpressionStatement","src":"34924:31:20"}]}}]},"id":5195,"implemented":true,"kind":"function","modifiers":[],"name":"_wrapETH2LD","nameLocation":"34185:11:20","nodeType":"FunctionDefinition","parameters":{"id":5121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5114,"mutability":"mutable","name":"label","nameLocation":"34220:5:20","nodeType":"VariableDeclaration","scope":5195,"src":"34206:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5113,"name":"string","nodeType":"ElementaryTypeName","src":"34206:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5116,"mutability":"mutable","name":"wrappedOwner","nameLocation":"34243:12:20","nodeType":"VariableDeclaration","scope":5195,"src":"34235:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5115,"name":"address","nodeType":"ElementaryTypeName","src":"34235:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5118,"mutability":"mutable","name":"ownerControlledFuses","nameLocation":"34272:20:20","nodeType":"VariableDeclaration","scope":5195,"src":"34265:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5117,"name":"uint16","nodeType":"ElementaryTypeName","src":"34265:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5120,"mutability":"mutable","name":"resolver","nameLocation":"34310:8:20","nodeType":"VariableDeclaration","scope":5195,"src":"34302:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5119,"name":"address","nodeType":"ElementaryTypeName","src":"34302:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"34196:128:20"},"returnParameters":{"id":5122,"nodeType":"ParameterList","parameters":[],"src":"34333:0:20"},"scope":5349,"src":"34176:796:20","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5231,"nodeType":"Block","src":"35032:258:20","statements":[{"condition":{"arguments":[{"id":5203,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"35061:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5204,"name":"CANNOT_UNWRAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"35067:13:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":5202,"name":"allFusesBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"35046:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint32_$returns$_t_bool_$","typeString":"function (bytes32,uint32) view returns (bool)"}},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35046:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5211,"nodeType":"IfStatement","src":"35042:98:20","trueBody":{"id":5210,"nodeType":"Block","src":"35083:57:20","statements":[{"errorCall":{"arguments":[{"id":5207,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"35124:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5206,"name":"OperationProhibited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"35104:19:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35104:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5209,"nodeType":"RevertStatement","src":"35097:32:20"}]}},{"expression":{"arguments":[{"arguments":[{"id":5215,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"35200:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35192:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5213,"name":"uint256","nodeType":"ElementaryTypeName","src":"35192:7:20","typeDescriptions":{}}},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35192:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5212,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"35186:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35186:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5218,"nodeType":"ExpressionStatement","src":"35186:20:20"},{"expression":{"arguments":[{"id":5222,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"35229:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5223,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"35235:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5219,"name":"ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"35216:3:20","typeDescriptions":{"typeIdentifier":"t_contract$_ENS_$1122","typeString":"contract ENS"}},"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35220:8:20","memberName":"setOwner","nodeType":"MemberAccess","referencedDeclaration":1070,"src":"35216:12:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) external"}},"id":5224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35216:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5225,"nodeType":"ExpressionStatement","src":"35216:25:20"},{"eventCall":{"arguments":[{"id":5227,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"35271:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5228,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"35277:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5226,"name":"NameUnwrapped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"35257:13:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35257:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5230,"nodeType":"EmitStatement","src":"35252:31:20"}]},"id":5232,"implemented":true,"kind":"function","modifiers":[],"name":"_unwrap","nameLocation":"34987:7:20","nodeType":"FunctionDefinition","parameters":{"id":5200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5197,"mutability":"mutable","name":"node","nameLocation":"35003:4:20","nodeType":"VariableDeclaration","scope":5232,"src":"34995:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"34995:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5199,"mutability":"mutable","name":"owner","nameLocation":"35017:5:20","nodeType":"VariableDeclaration","scope":5232,"src":"35009:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5198,"name":"address","nodeType":"ElementaryTypeName","src":"35009:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"34994:29:20"},"returnParameters":{"id":5201,"nodeType":"ParameterList","parameters":[],"src":"35032:0:20"},"scope":5349,"src":"34978:312:20","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5267,"nodeType":"Block","src":"35446:180:20","statements":[{"expression":{"arguments":[{"id":5246,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"35465:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5247,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5236,"src":"35471:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5248,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"35478:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":5249,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"35485:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":5245,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[5297,1834],"referencedDeclaration":5297,"src":"35456:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_uint32_$_t_uint64_$returns$__$","typeString":"function (bytes32,address,uint32,uint64)"}},"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35456:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5251,"nodeType":"ExpressionStatement","src":"35456:36:20"},{"eventCall":{"arguments":[{"id":5253,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"35516:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5254,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"35522:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":5252,"name":"FusesSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"35507:8:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint32_$returns$__$","typeString":"function (bytes32,uint32)"}},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35507:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5256,"nodeType":"EmitStatement","src":"35502:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5257,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"35542:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5258,"name":"oldExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"35551:9:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"35542:18:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5266,"nodeType":"IfStatement","src":"35538:82:20","trueBody":{"id":5265,"nodeType":"Block","src":"35562:58:20","statements":[{"eventCall":{"arguments":[{"id":5261,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"35596:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5262,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"35602:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":5260,"name":"ExpiryExtended","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"35581:14:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint64_$returns$__$","typeString":"function (bytes32,uint64)"}},"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35581:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5264,"nodeType":"EmitStatement","src":"35576:33:20"}]}}]},"id":5268,"implemented":true,"kind":"function","modifiers":[],"name":"_setFuses","nameLocation":"35305:9:20","nodeType":"FunctionDefinition","parameters":{"id":5243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5234,"mutability":"mutable","name":"node","nameLocation":"35332:4:20","nodeType":"VariableDeclaration","scope":5268,"src":"35324:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5233,"name":"bytes32","nodeType":"ElementaryTypeName","src":"35324:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5236,"mutability":"mutable","name":"owner","nameLocation":"35354:5:20","nodeType":"VariableDeclaration","scope":5268,"src":"35346:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5235,"name":"address","nodeType":"ElementaryTypeName","src":"35346:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5238,"mutability":"mutable","name":"fuses","nameLocation":"35376:5:20","nodeType":"VariableDeclaration","scope":5268,"src":"35369:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5237,"name":"uint32","nodeType":"ElementaryTypeName","src":"35369:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":5240,"mutability":"mutable","name":"oldExpiry","nameLocation":"35398:9:20","nodeType":"VariableDeclaration","scope":5268,"src":"35391:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5239,"name":"uint64","nodeType":"ElementaryTypeName","src":"35391:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":5242,"mutability":"mutable","name":"expiry","nameLocation":"35424:6:20","nodeType":"VariableDeclaration","scope":5268,"src":"35417:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5241,"name":"uint64","nodeType":"ElementaryTypeName","src":"35417:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"35314:122:20"},"returnParameters":{"id":5244,"nodeType":"ParameterList","parameters":[],"src":"35446:0:20"},"scope":5349,"src":"35296:330:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5296,"nodeType":"Block","src":"35755:108:20","statements":[{"expression":{"arguments":[{"id":5280,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"35783:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5281,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"35789:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":5279,"name":"_canFusesBeBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"35765:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint32_$returns$__$","typeString":"function (bytes32,uint32) pure"}},"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35765:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5283,"nodeType":"ExpressionStatement","src":"35765:30:20"},{"expression":{"arguments":[{"arguments":[{"id":5289,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"35828:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35820:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5287,"name":"uint256","nodeType":"ElementaryTypeName","src":"35820:7:20","typeDescriptions":{}}},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35820:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5291,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"35835:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5292,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"35842:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":5293,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"35849:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":5284,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"35805:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NameWrapper_$5349_$","typeString":"type(contract super NameWrapper)"}},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35811:8:20","memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":1834,"src":"35805:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint32_$_t_uint64_$returns$__$","typeString":"function (uint256,address,uint32,uint64)"}},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35805:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5295,"nodeType":"ExpressionStatement","src":"35805:51:20"}]},"id":5297,"implemented":true,"kind":"function","modifiers":[],"name":"_setData","nameLocation":"35641:8:20","nodeType":"FunctionDefinition","parameters":{"id":5277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5270,"mutability":"mutable","name":"node","nameLocation":"35667:4:20","nodeType":"VariableDeclaration","scope":5297,"src":"35659:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"35659:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5272,"mutability":"mutable","name":"owner","nameLocation":"35689:5:20","nodeType":"VariableDeclaration","scope":5297,"src":"35681:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5271,"name":"address","nodeType":"ElementaryTypeName","src":"35681:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5274,"mutability":"mutable","name":"fuses","nameLocation":"35711:5:20","nodeType":"VariableDeclaration","scope":5297,"src":"35704:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5273,"name":"uint32","nodeType":"ElementaryTypeName","src":"35704:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":5276,"mutability":"mutable","name":"expiry","nameLocation":"35733:6:20","nodeType":"VariableDeclaration","scope":5297,"src":"35726:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5275,"name":"uint64","nodeType":"ElementaryTypeName","src":"35726:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"35649:96:20"},"returnParameters":{"id":5278,"nodeType":"ParameterList","parameters":[],"src":"35755:0:20"},"scope":5349,"src":"35632:231:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5328,"nodeType":"Block","src":"35938:343:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5304,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5301,"src":"36052:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"36060:24:20","subExpression":{"id":5305,"name":"PARENT_CONTROLLED_FUSES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"36061:23:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"36052:32:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36088:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"36052:37:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5310,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5301,"src":"36105:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":5311,"name":"PARENT_CANNOT_CONTROL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"36114:21:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":5312,"name":"CANNOT_UNWRAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"36138:13:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"36114:37:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":5314,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"36113:39:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"36105:47:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":5316,"name":"PARENT_CANNOT_CONTROL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"36169:21:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":5317,"name":"CANNOT_UNWRAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"36193:13:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"36169:37:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":5319,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"36168:39:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"36105:102:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"36052:155:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5327,"nodeType":"IfStatement","src":"36035:240:20","trueBody":{"id":5326,"nodeType":"Block","src":"36218:57:20","statements":[{"errorCall":{"arguments":[{"id":5323,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5299,"src":"36259:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5322,"name":"OperationProhibited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"36239:19:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36239:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5325,"nodeType":"RevertStatement","src":"36232:32:20"}]}}]},"id":5329,"implemented":true,"kind":"function","modifiers":[],"name":"_canFusesBeBurned","nameLocation":"35878:17:20","nodeType":"FunctionDefinition","parameters":{"id":5302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5299,"mutability":"mutable","name":"node","nameLocation":"35904:4:20","nodeType":"VariableDeclaration","scope":5329,"src":"35896:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"35896:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5301,"mutability":"mutable","name":"fuses","nameLocation":"35917:5:20","nodeType":"VariableDeclaration","scope":5329,"src":"35910:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5300,"name":"uint32","nodeType":"ElementaryTypeName","src":"35910:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"35895:28:20"},"returnParameters":{"id":5303,"nodeType":"ParameterList","parameters":[],"src":"35938:0:20"},"scope":5349,"src":"35869:412:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5347,"nodeType":"Block","src":"36361:195:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5336,"name":"fuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"36375:5:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":5337,"name":"USER_SETTABLE_FUSES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"36383:19:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"36375:27:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5339,"name":"USER_SETTABLE_FUSES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"36406:19:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"36375:50:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5346,"nodeType":"IfStatement","src":"36371:179:20","trueBody":{"id":5345,"nodeType":"Block","src":"36427:123:20","statements":[{"errorCall":{"arguments":[{"id":5342,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"36534:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5341,"name":"OperationProhibited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"36514:19:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36514:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5344,"nodeType":"RevertStatement","src":"36507:32:20"}]}}]},"id":5348,"implemented":true,"kind":"function","modifiers":[],"name":"_checkFusesAreSettable","nameLocation":"36296:22:20","nodeType":"FunctionDefinition","parameters":{"id":5334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5331,"mutability":"mutable","name":"node","nameLocation":"36327:4:20","nodeType":"VariableDeclaration","scope":5348,"src":"36319:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36319:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5333,"mutability":"mutable","name":"fuses","nameLocation":"36340:5:20","nodeType":"VariableDeclaration","scope":5348,"src":"36333:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5332,"name":"uint32","nodeType":"ElementaryTypeName","src":"36333:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"36318:28:20"},"returnParameters":{"id":5335,"nodeType":"ParameterList","parameters":[],"src":"36361:0:20"},"scope":5349,"src":"36287:269:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5350,"src":"1329:35229:20","usedErrors":[2623,2625,2627,2633,2635,2639,2643,2645,2649,2651]}],"src":"31:36528:20"},"id":20}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._","events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."},"setApprovalForAll(address,bool)":{"details":"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"_Available since v3.1._","kind":"dev","methods":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":{"details":"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","ids":"An array containing ids of each token being transferred (order and length must match values array)","operator":"The address which initiated the batch transfer (i.e. msg.sender)","values":"An array containing amounts of each token being transferred (order and length must match ids array)"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"}},"onERC1155Received(address,address,uint256,uint256,bytes)":{"details":"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","id":"The ID of the token being transferred","operator":"The address which initiated the transfer (i.e. msg.sender)","value":"The amount of tokens being transferred"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._","kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."},"setApprovalForAll(address,bool)":{"details":"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"uri(uint256)":{"details":"Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122068613e07839c24d2b5d1194ff8face551238dbb92af19d496b5335c16d1f821064736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x613E07839C24D2B5D1 NOT 0x4F 0xF8 STATICCALL 0xCE SSTORE SLT CODESIZE 0xDB 0xB9 0x2A CALL SWAP14 0x49 PUSH12 0x5335C16D1F821064736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"194:8964:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8964:7;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122068613e07839c24d2b5d1194ff8face551238dbb92af19d496b5335c16d1f821064736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x613E07839C24D2B5D1 NOT 0x4F 0xF8 STATICCALL 0xCE SSTORE SLT CODESIZE 0xDB 0xB9 0x2A CALL SWAP14 0x49 PUSH12 0x5335C16D1F821064736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"194:8964:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ethregistrar/IBaseRegistrar.sol":{"IBaseRegistrar":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"controller","type":"address"}],"name":"ControllerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"controller","type":"address"}],"name":"ControllerRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"expires","type":"uint256"}],"name":"NameMigrated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"expires","type":"uint256"}],"name":"NameRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"expires","type":"uint256"}],"name":"NameRenewed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"controller","type":"address"}],"name":"addController","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"available","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"nameExpires","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"reclaim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"duration","type":"uint256"}],"name":"register","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"controller","type":"address"}],"name":"removeController","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"}],"name":"renew","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"resolver","type":"address"}],"name":"setResolver","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"reclaim(uint256,address)":{"details":"Reclaim ownership of a name in ENS, if you own it in the registrar."},"register(uint256,address,uint256)":{"details":"Register a name."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"addController(address)":"a7fc7a07","approve(address,uint256)":"095ea7b3","available(uint256)":"96e494e8","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","nameExpires(uint256)":"d6e4fa86","ownerOf(uint256)":"6352211e","reclaim(uint256,address)":"28ed4f6c","register(uint256,address,uint256)":"fca247ac","removeController(address)":"f6a74ed7","renew(uint256,uint256)":"c475abff","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setResolver(address)":"4e543b26","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"ControllerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"ControllerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"}],\"name\":\"NameMigrated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"}],\"name\":\"NameRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"}],\"name\":\"NameRenewed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"available\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"nameExpires\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"reclaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"register\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"removeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"renew\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"setResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"reclaim(uint256,address)\":{\"details\":\"Reclaim ownership of a name in ENS, if you own it in the registrar.\"},\"register(uint256,address,uint256)\":{\"details\":\"Register a name.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ethregistrar/IBaseRegistrar.sol\":\"IBaseRegistrar\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/ethregistrar/IBaseRegistrar.sol\":{\"content\":\"import \\\"../registry/ENS.sol\\\";\\nimport \\\"./IBaseRegistrar.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\ninterface IBaseRegistrar is IERC721 {\\n    event ControllerAdded(address indexed controller);\\n    event ControllerRemoved(address indexed controller);\\n    event NameMigrated(\\n        uint256 indexed id,\\n        address indexed owner,\\n        uint256 expires\\n    );\\n    event NameRegistered(\\n        uint256 indexed id,\\n        address indexed owner,\\n        uint256 expires\\n    );\\n    event NameRenewed(uint256 indexed id, uint256 expires);\\n\\n    // Authorises a controller, who can register and renew domains.\\n    function addController(address controller) external;\\n\\n    // Revoke controller permission for an address.\\n    function removeController(address controller) external;\\n\\n    // Set the resolver for the TLD this registrar manages.\\n    function setResolver(address resolver) external;\\n\\n    // Returns the expiration timestamp of the specified label hash.\\n    function nameExpires(uint256 id) external view returns (uint256);\\n\\n    // Returns true iff the specified name is available for registration.\\n    function available(uint256 id) external view returns (bool);\\n\\n    /**\\n     * @dev Register a name.\\n     */\\n    function register(\\n        uint256 id,\\n        address owner,\\n        uint256 duration\\n    ) external returns (uint256);\\n\\n    function renew(uint256 id, uint256 duration) external returns (uint256);\\n\\n    /**\\n     * @dev Reclaim ownership of a name in ENS, if you own it in the registrar.\\n     */\\n    function reclaim(uint256 id, address owner) external;\\n}\\n\",\"keccak256\":\"0x9ac51351ff72d73083aed62b7cdad4c07e9d1eb68401d7fd8457bdd828f2c6fe\"},\"contracts/registry/ENS.sol\":{\"content\":\"pragma solidity >=0.8.4;\\n\\ninterface ENS {\\n    // Logged when the owner of a node assigns a new owner to a subnode.\\n    event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\\n\\n    // Logged when the owner of a node transfers ownership to a new account.\\n    event Transfer(bytes32 indexed node, address owner);\\n\\n    // Logged when the resolver for a node changes.\\n    event NewResolver(bytes32 indexed node, address resolver);\\n\\n    // Logged when the TTL of a node changes\\n    event NewTTL(bytes32 indexed node, uint64 ttl);\\n\\n    // Logged when an operator is added or removed.\\n    event ApprovalForAll(\\n        address indexed owner,\\n        address indexed operator,\\n        bool approved\\n    );\\n\\n    function setRecord(\\n        bytes32 node,\\n        address owner,\\n        address resolver,\\n        uint64 ttl\\n    ) external;\\n\\n    function setSubnodeRecord(\\n        bytes32 node,\\n        bytes32 label,\\n        address owner,\\n        address resolver,\\n        uint64 ttl\\n    ) external;\\n\\n    function setSubnodeOwner(\\n        bytes32 node,\\n        bytes32 label,\\n        address owner\\n    ) external returns (bytes32);\\n\\n    function setResolver(bytes32 node, address resolver) external;\\n\\n    function setOwner(bytes32 node, address owner) external;\\n\\n    function setTTL(bytes32 node, uint64 ttl) external;\\n\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    function owner(bytes32 node) external view returns (address);\\n\\n    function resolver(bytes32 node) external view returns (address);\\n\\n    function ttl(bytes32 node) external view returns (uint64);\\n\\n    function recordExists(bytes32 node) external view returns (bool);\\n\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool);\\n}\\n\",\"keccak256\":\"0xf79be82c1a2eb0a77fba4e0972221912e803309081ca460fd2cf61653e55758a\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/registry/ENS.sol":{"ENS":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"node","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"label","type":"bytes32"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"NewOwner","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"node","type":"bytes32"},{"indexed":false,"internalType":"address","name":"resolver","type":"address"}],"name":"NewResolver","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"node","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"ttl","type":"uint64"}],"name":"NewTTL","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"node","type":"bytes32"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"}],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"}],"name":"recordExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"}],"name":"resolver","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"resolver","type":"address"},{"internalType":"uint64","name":"ttl","type":"uint64"}],"name":"setRecord","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"address","name":"resolver","type":"address"}],"name":"setResolver","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"bytes32","name":"label","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"}],"name":"setSubnodeOwner","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"bytes32","name":"label","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"resolver","type":"address"},{"internalType":"uint64","name":"ttl","type":"uint64"}],"name":"setSubnodeRecord","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"uint64","name":"ttl","type":"uint64"}],"name":"setTTL","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"}],"name":"ttl","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"isApprovedForAll(address,address)":"e985e9c5","owner(bytes32)":"02571be3","recordExists(bytes32)":"f79fe538","resolver(bytes32)":"0178b8bf","setApprovalForAll(address,bool)":"a22cb465","setOwner(bytes32,address)":"5b0fc9c3","setRecord(bytes32,address,address,uint64)":"cf408823","setResolver(bytes32,address)":"1896f70a","setSubnodeOwner(bytes32,bytes32,address)":"06ab5923","setSubnodeRecord(bytes32,bytes32,address,address,uint64)":"5ef2c7f0","setTTL(bytes32,uint64)":"14ab9038","ttl(bytes32)":"16a25cbd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"NewOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"NewResolver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"}],\"name\":\"NewTTL\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"recordExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"resolver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"}],\"name\":\"setRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"setResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"setSubnodeOwner\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"}],\"name\":\"setSubnodeRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"}],\"name\":\"setTTL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"ttl\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/registry/ENS.sol\":\"ENS\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2500},\"remappings\":[]},\"sources\":{\"contracts/registry/ENS.sol\":{\"content\":\"pragma solidity >=0.8.4;\\n\\ninterface ENS {\\n    // Logged when the owner of a node assigns a new owner to a subnode.\\n    event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\\n\\n    // Logged when the owner of a node transfers ownership to a new account.\\n    event Transfer(bytes32 indexed node, address owner);\\n\\n    // Logged when the resolver for a node changes.\\n    event NewResolver(bytes32 indexed node, address resolver);\\n\\n    // Logged when the TTL of a node changes\\n    event NewTTL(bytes32 indexed node, uint64 ttl);\\n\\n    // Logged when an operator is added or removed.\\n    event ApprovalForAll(\\n        address indexed owner,\\n        address indexed operator,\\n        bool approved\\n    );\\n\\n    function setRecord(\\n        bytes32 node,\\n        address owner,\\n        address resolver,\\n        uint64 ttl\\n    ) external;\\n\\n    function setSubnodeRecord(\\n        bytes32 node,\\n        bytes32 label,\\n        address owner,\\n        address resolver,\\n        uint64 ttl\\n    ) external;\\n\\n    function setSubnodeOwner(\\n        bytes32 node,\\n        bytes32 label,\\n        address owner\\n    ) external returns (bytes32);\\n\\n    function setResolver(bytes32 node, address resolver) external;\\n\\n    function setOwner(bytes32 node, address owner) external;\\n\\n    function setTTL(bytes32 node, uint64 ttl) external;\\n\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    function owner(bytes32 node) external view returns (address);\\n\\n    function resolver(bytes32 node) external view returns (address);\\n\\n    function ttl(bytes32 node) external view returns (uint64);\\n\\n    function recordExists(bytes32 node) external view returns (bool);\\n\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool);\\n}\\n\",\"keccak256\":\"0xf79be82c1a2eb0a77fba4e0972221912e803309081ca460fd2cf61653e55758a\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/utils/ERC20Recoverable.sol":{"ERC20Recoverable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"recoverFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"recoverFunds(address,address,uint256)":{"details":"The contract is Ownable and only the owner can call the recover function.","params":{"_amount":"The amount of tokens to recover.","_to":"The address to send the tokens to.","_token":"The address of the ERC20 token to recover"}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_msgSender_844":{"entryPoint":null,"id":844,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":31,"id":111,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103f98061007e6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80635d3590d514610051578063715018a6146100665780638da5cb5b1461006e578063f2fde38b1461009a575b600080fd5b61006461005f366004610343565b6100ad565b005b610064610154565b6000546040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100646100a836600461037f565b610168565b6100b5610224565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af115801561012a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014e91906103a1565b50505050565b61015c610224565b61016660006102a5565b565b610170610224565b73ffffffffffffffffffffffffffffffffffffffff8116610218576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610221816102a5565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610166576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161020f565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461033e57600080fd5b919050565b60008060006060848603121561035857600080fd5b6103618461031a565b925061036f6020850161031a565b9150604084013590509250925092565b60006020828403121561039157600080fd5b61039a8261031a565b9392505050565b6000602082840312156103b357600080fd5b8151801515811461039a57600080fdfea2646970667358221220b9a464484e90ec316074da459a9272374141efeae2faa4693a6b272650e8b90064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x6F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x3F9 DUP1 PUSH2 0x7E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D3590D5 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x343 JUMP JUMPDEST PUSH2 0xAD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64 PUSH2 0x154 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH2 0xA8 CALLDATASIZE PUSH1 0x4 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x168 JUMP JUMPDEST PUSH2 0xB5 PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x3A1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x15C PUSH2 0x224 JUMP JUMPDEST PUSH2 0x166 PUSH1 0x0 PUSH2 0x2A5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x170 PUSH2 0x224 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x218 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x221 DUP2 PUSH2 0x2A5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x166 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x20F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x361 DUP5 PUSH2 0x31A JUMP JUMPDEST SWAP3 POP PUSH2 0x36F PUSH1 0x20 DUP6 ADD PUSH2 0x31A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x39A DUP3 PUSH2 0x31A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 LOG4 PUSH5 0x484E90EC31 PUSH1 0x74 0xDA GASLIMIT SWAP11 SWAP3 PUSH19 0x374141EFEAE2FAA4693A6B272650E8B9006473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"271:535:13:-:0;;;;;;;;;;;;-1:-1:-1;936:32:0;719:10:8;936:18:0;:32::i;:::-;271:535:13;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;271:535:13:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_54":{"entryPoint":548,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_844":{"entryPoint":null,"id":844,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":677,"id":111,"parameterSlots":1,"returnSlots":0},"@owner_40":{"entryPoint":null,"id":40,"parameterSlots":0,"returnSlots":1},"@recoverFunds_1150":{"entryPoint":173,"id":1150,"parameterSlots":3,"returnSlots":0},"@renounceOwnership_68":{"entryPoint":340,"id":68,"parameterSlots":0,"returnSlots":0},"@transferOwnership_91":{"entryPoint":360,"id":91,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":794,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":895,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":835,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":929,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2319:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:147:21","statements":[{"nodeType":"YulAssignment","src":"73:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:21"},"nodeType":"YulFunctionCall","src":"82:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:21"}]},{"body":{"nodeType":"YulBlock","src":"188:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"200:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"190:6:21"},"nodeType":"YulFunctionCall","src":"190:12:21"},"nodeType":"YulExpressionStatement","src":"190:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"142:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:21"},"nodeType":"YulFunctionCall","src":"131:54:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:21"},"nodeType":"YulFunctionCall","src":"121:65:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:21"},"nodeType":"YulFunctionCall","src":"114:73:21"},"nodeType":"YulIf","src":"111:93:21"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:21","type":""}],"src":"14:196:21"},{"body":{"nodeType":"YulBlock","src":"319:224:21","statements":[{"body":{"nodeType":"YulBlock","src":"365:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"374:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"377:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"367:6:21"},"nodeType":"YulFunctionCall","src":"367:12:21"},"nodeType":"YulExpressionStatement","src":"367:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"340:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"349:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"336:3:21"},"nodeType":"YulFunctionCall","src":"336:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"361:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"332:3:21"},"nodeType":"YulFunctionCall","src":"332:32:21"},"nodeType":"YulIf","src":"329:52:21"},{"nodeType":"YulAssignment","src":"390:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"419:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"400:18:21"},"nodeType":"YulFunctionCall","src":"400:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"390:6:21"}]},{"nodeType":"YulAssignment","src":"438:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"471:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"482:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"467:3:21"},"nodeType":"YulFunctionCall","src":"467:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"448:18:21"},"nodeType":"YulFunctionCall","src":"448:38:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"438:6:21"}]},{"nodeType":"YulAssignment","src":"495:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"522:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"533:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"518:3:21"},"nodeType":"YulFunctionCall","src":"518:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"505:12:21"},"nodeType":"YulFunctionCall","src":"505:32:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"495:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"269:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"280:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"292:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"300:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"308:6:21","type":""}],"src":"215:328:21"},{"body":{"nodeType":"YulBlock","src":"649:125:21","statements":[{"nodeType":"YulAssignment","src":"659:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"671:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"682:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"667:3:21"},"nodeType":"YulFunctionCall","src":"667:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"659:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"701:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"716:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"724:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"712:3:21"},"nodeType":"YulFunctionCall","src":"712:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"694:6:21"},"nodeType":"YulFunctionCall","src":"694:74:21"},"nodeType":"YulExpressionStatement","src":"694:74:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"618:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"629:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"640:4:21","type":""}],"src":"548:226:21"},{"body":{"nodeType":"YulBlock","src":"849:116:21","statements":[{"body":{"nodeType":"YulBlock","src":"895:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"904:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"907:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"897:6:21"},"nodeType":"YulFunctionCall","src":"897:12:21"},"nodeType":"YulExpressionStatement","src":"897:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"870:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"879:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"866:3:21"},"nodeType":"YulFunctionCall","src":"866:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"891:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"862:3:21"},"nodeType":"YulFunctionCall","src":"862:32:21"},"nodeType":"YulIf","src":"859:52:21"},{"nodeType":"YulAssignment","src":"920:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"949:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"930:18:21"},"nodeType":"YulFunctionCall","src":"930:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"920:6:21"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"815:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"826:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"838:6:21","type":""}],"src":"779:186:21"},{"body":{"nodeType":"YulBlock","src":"1099:168:21","statements":[{"nodeType":"YulAssignment","src":"1109:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:21"},"nodeType":"YulFunctionCall","src":"1117:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1166:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1174:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1162:3:21"},"nodeType":"YulFunctionCall","src":"1162:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:21"},"nodeType":"YulFunctionCall","src":"1144:74:21"},"nodeType":"YulExpressionStatement","src":"1144:74:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1238:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1249:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1234:3:21"},"nodeType":"YulFunctionCall","src":"1234:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"1254:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1227:6:21"},"nodeType":"YulFunctionCall","src":"1227:34:21"},"nodeType":"YulExpressionStatement","src":"1227:34:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1060:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1071:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:21","type":""}],"src":"970:297:21"},{"body":{"nodeType":"YulBlock","src":"1350:199:21","statements":[{"body":{"nodeType":"YulBlock","src":"1396:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1405:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1408:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1398:6:21"},"nodeType":"YulFunctionCall","src":"1398:12:21"},"nodeType":"YulExpressionStatement","src":"1398:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1371:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1380:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1367:3:21"},"nodeType":"YulFunctionCall","src":"1367:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1392:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1363:3:21"},"nodeType":"YulFunctionCall","src":"1363:32:21"},"nodeType":"YulIf","src":"1360:52:21"},{"nodeType":"YulVariableDeclaration","src":"1421:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1440:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1434:5:21"},"nodeType":"YulFunctionCall","src":"1434:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1425:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1503:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1512:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1515:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1505:6:21"},"nodeType":"YulFunctionCall","src":"1505:12:21"},"nodeType":"YulExpressionStatement","src":"1505:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1472:5:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1493:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1486:6:21"},"nodeType":"YulFunctionCall","src":"1486:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1479:6:21"},"nodeType":"YulFunctionCall","src":"1479:21:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1469:2:21"},"nodeType":"YulFunctionCall","src":"1469:32:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1462:6:21"},"nodeType":"YulFunctionCall","src":"1462:40:21"},"nodeType":"YulIf","src":"1459:60:21"},{"nodeType":"YulAssignment","src":"1528:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"1538:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1528:6:21"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1316:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1327:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1339:6:21","type":""}],"src":"1272:277:21"},{"body":{"nodeType":"YulBlock","src":"1728:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1745:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1756:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1738:6:21"},"nodeType":"YulFunctionCall","src":"1738:21:21"},"nodeType":"YulExpressionStatement","src":"1738:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1779:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1790:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1775:3:21"},"nodeType":"YulFunctionCall","src":"1775:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"1795:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1768:6:21"},"nodeType":"YulFunctionCall","src":"1768:30:21"},"nodeType":"YulExpressionStatement","src":"1768:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1818:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1829:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1814:3:21"},"nodeType":"YulFunctionCall","src":"1814:18:21"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"1834:34:21","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1807:6:21"},"nodeType":"YulFunctionCall","src":"1807:62:21"},"nodeType":"YulExpressionStatement","src":"1807:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1889:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1900:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1885:3:21"},"nodeType":"YulFunctionCall","src":"1885:18:21"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"1905:8:21","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1878:6:21"},"nodeType":"YulFunctionCall","src":"1878:36:21"},"nodeType":"YulExpressionStatement","src":"1878:36:21"},{"nodeType":"YulAssignment","src":"1923:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1935:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1946:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1931:3:21"},"nodeType":"YulFunctionCall","src":"1931:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1923:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1705:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1719:4:21","type":""}],"src":"1554:402:21"},{"body":{"nodeType":"YulBlock","src":"2135:182:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2152:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2163:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2145:6:21"},"nodeType":"YulFunctionCall","src":"2145:21:21"},"nodeType":"YulExpressionStatement","src":"2145:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2186:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2197:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2182:3:21"},"nodeType":"YulFunctionCall","src":"2182:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"2202:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2175:6:21"},"nodeType":"YulFunctionCall","src":"2175:30:21"},"nodeType":"YulExpressionStatement","src":"2175:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2225:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2236:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2221:3:21"},"nodeType":"YulFunctionCall","src":"2221:18:21"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"2241:34:21","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2214:6:21"},"nodeType":"YulFunctionCall","src":"2214:62:21"},"nodeType":"YulExpressionStatement","src":"2214:62:21"},{"nodeType":"YulAssignment","src":"2285:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2297:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2308:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2293:3:21"},"nodeType":"YulFunctionCall","src":"2293:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2285:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2112:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2126:4:21","type":""}],"src":"1961:356:21"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004c5760003560e01c80635d3590d514610051578063715018a6146100665780638da5cb5b1461006e578063f2fde38b1461009a575b600080fd5b61006461005f366004610343565b6100ad565b005b610064610154565b6000546040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100646100a836600461037f565b610168565b6100b5610224565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af115801561012a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014e91906103a1565b50505050565b61015c610224565b61016660006102a5565b565b610170610224565b73ffffffffffffffffffffffffffffffffffffffff8116610218576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610221816102a5565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610166576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161020f565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461033e57600080fd5b919050565b60008060006060848603121561035857600080fd5b6103618461031a565b925061036f6020850161031a565b9150604084013590509250925092565b60006020828403121561039157600080fd5b61039a8261031a565b9392505050565b6000602082840312156103b357600080fd5b8151801515811461039a57600080fdfea2646970667358221220b9a464484e90ec316074da459a9272374141efeae2faa4693a6b272650e8b90064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D3590D5 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x343 JUMP JUMPDEST PUSH2 0xAD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64 PUSH2 0x154 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH2 0xA8 CALLDATASIZE PUSH1 0x4 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x168 JUMP JUMPDEST PUSH2 0xB5 PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x3A1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x15C PUSH2 0x224 JUMP JUMPDEST PUSH2 0x166 PUSH1 0x0 PUSH2 0x2A5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x170 PUSH2 0x224 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x218 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x221 DUP2 PUSH2 0x2A5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x166 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x20F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x361 DUP5 PUSH2 0x31A JUMP JUMPDEST SWAP3 POP PUSH2 0x36F PUSH1 0x20 DUP6 ADD PUSH2 0x31A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x39A DUP3 PUSH2 0x31A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 LOG4 PUSH5 0x484E90EC31 PUSH1 0x74 0xDA GASLIMIT SWAP11 SWAP3 PUSH19 0x374141EFEAE2FAA4693A6B272650E8B9006473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"271:535:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;633:171;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;:::i;1201:85::-;1247:7;1273:6;1201:85;;;1273:6;;;;694:74:21;;1201:85:0;;;;;682:2:21;1201:85:0;;;2081:198;;;;;;:::i;:::-;;:::i;633:171:13:-;1094:13:0;:11;:13::i;:::-;760:37:13::1;::::0;;;;:23:::1;1162:55:21::0;;;760:37:13::1;::::0;::::1;1144:74:21::0;1234:18;;;1227:34;;;760:23:13;::::1;::::0;::::1;::::0;1117:18:21;;760:37:13::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;633:171:::0;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2081:198::-;1094:13;:11;:13::i;:::-;2169:22:::1;::::0;::::1;2161:73;;;::::0;::::1;::::0;;1756:2:21;2161:73:0::1;::::0;::::1;1738:21:21::0;1795:2;1775:18;;;1768:30;1834:34;1814:18;;;1807:62;1905:8;1885:18;;;1878:36;1931:19;;2161:73:0::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;1422:23;1273:6;719:10:8;1422:23:0;1414:68;;;;;;;2163:2:21;1414:68:0;;;2145:21:21;;;2182:18;;;2175:30;2241:34;2221:18;;;2214:62;2293:18;;1414:68:0;1961:356:21;2433:187:0;2506:16;2525:6;;;2541:17;;;;;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:196:21:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:328::-;292:6;300;308;361:2;349:9;340:7;336:23;332:32;329:52;;;377:1;374;367:12;329:52;400:29;419:9;400:29;:::i;:::-;390:39;;448:38;482:2;471:9;467:18;448:38;:::i;:::-;438:48;;533:2;522:9;518:18;505:32;495:42;;215:328;;;;;:::o;779:186::-;838:6;891:2;879:9;870:7;866:23;862:32;859:52;;;907:1;904;897:12;859:52;930:29;949:9;930:29;:::i;:::-;920:39;779:186;-1:-1:-1;;;779:186:21:o;1272:277::-;1339:6;1392:2;1380:9;1371:7;1367:23;1363:32;1360:52;;;1408:1;1405;1398:12;1360:52;1440:9;1434:16;1493:5;1486:13;1479:21;1472:5;1469:32;1459:60;;1515:1;1512;1505:12"},"gasEstimates":{"creation":{"codeDepositCost":"203400","executionCost":"26086","totalCost":"229486"},"external":{"owner()":"2302","recoverFunds(address,address,uint256)":"infinite","renounceOwnership()":"infinite","transferOwnership(address)":"28314"}},"methodIdentifiers":{"owner()":"8da5cb5b","recoverFunds(address,address,uint256)":"5d3590d5","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"recoverFunds(address,address,uint256)\":{\"details\":\"The contract is Ownable and only the owner can call the recover function.\",\"params\":{\"_amount\":\"The amount of tokens to recover.\",\"_to\":\"The address to send the tokens to.\",\"_token\":\"The address of the ERC20 token to recover\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"recoverFunds(address,address,uint256)\":{\"notice\":\"Recover ERC20 tokens sent to the contract by mistake.\"}},\"notice\":\"Contract is used to recover ERC20 tokens sent to the contract by mistake.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/ERC20Recoverable.sol\":\"ERC20Recoverable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/utils/ERC20Recoverable.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity >=0.8.17 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n    @notice Contract is used to recover ERC20 tokens sent to the contract by mistake.\\n */\\n\\ncontract ERC20Recoverable is Ownable {\\n    /**\\n    @notice Recover ERC20 tokens sent to the contract by mistake.\\n    @dev The contract is Ownable and only the owner can call the recover function.\\n    @param _to The address to send the tokens to.\\n@param _token The address of the ERC20 token to recover\\n    @param _amount The amount of tokens to recover.\\n */\\n    function recoverFunds(\\n        address _token,\\n        address _to,\\n        uint256 _amount\\n    ) external onlyOwner {\\n        IERC20(_token).transfer(_to, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0x793a38091e1f81499a29ddba82c2b2f3cdd07071b81a832886e8e02a45ff352a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/utils/ERC20Recoverable.sol:ERC20Recoverable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"recoverFunds(address,address,uint256)":{"notice":"Recover ERC20 tokens sent to the contract by mistake."}},"notice":"Contract is used to recover ERC20 tokens sent to the contract by mistake.","version":1}}},"contracts/wrapper/BytesUtils.sol":{"BytesUtils":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220587d15e00864e55f553286e71cda080cc7e22487c9d95efa4ec5b7d7133e37dc64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC PUSH30 0x15E00864E55F553286E71CDA080CC7E22487C9D95EFA4EC5B7D7133E37DC PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"57:2078:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;57:2078:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220587d15e00864e55f553286e71cda080cc7e22487c9d95efa4ec5b7d7133e37dc64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC PUSH30 0x15E00864E55F553286E71CDA080CC7E22487C9D95EFA4EC5B7D7133E37DC PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"57:2078:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"keccak(bytes memory,uint256,uint256)":"infinite","namehash(bytes memory,uint256)":"infinite","readLabel(bytes memory,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/wrapper/BytesUtils.sol\":\"BytesUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2500},\"remappings\":[]},\"sources\":{\"contracts/wrapper/BytesUtils.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ~0.8.17;\\n\\nlibrary BytesUtils {\\n    /*\\n     * @dev Returns the keccak-256 hash of a byte range.\\n     * @param self The byte string to hash.\\n     * @param offset The position to start hashing at.\\n     * @param len The number of bytes to hash.\\n     * @return The hash of the byte range.\\n     */\\n    function keccak(\\n        bytes memory self,\\n        uint256 offset,\\n        uint256 len\\n    ) internal pure returns (bytes32 ret) {\\n        require(offset + len <= self.length);\\n        assembly {\\n            ret := keccak256(add(add(self, 32), offset), len)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the ENS namehash of a DNS-encoded name.\\n     * @param self The DNS-encoded name to hash.\\n     * @param offset The offset at which to start hashing.\\n     * @return The namehash of the name.\\n     */\\n    function namehash(bytes memory self, uint256 offset)\\n        internal\\n        pure\\n        returns (bytes32)\\n    {\\n        (bytes32 labelhash, uint256 newOffset) = readLabel(self, offset);\\n        if (labelhash == bytes32(0)) {\\n            require(offset == self.length - 1, \\\"namehash: Junk at end of name\\\");\\n            return bytes32(0);\\n        }\\n        return\\n            keccak256(abi.encodePacked(namehash(self, newOffset), labelhash));\\n    }\\n\\n    /**\\n     * @dev Returns the keccak-256 hash of a DNS-encoded label, and the offset to the start of the next label.\\n     * @param self The byte string to read a label from.\\n     * @param idx The index to read a label at.\\n     * @return labelhash The hash of the label at the specified index, or 0 if it is the last label.\\n     * @return newIdx The index of the start of the next label.\\n     */\\n    function readLabel(bytes memory self, uint256 idx)\\n        internal\\n        pure\\n        returns (bytes32 labelhash, uint256 newIdx)\\n    {\\n        require(idx < self.length, \\\"readLabel: Index out of bounds\\\");\\n        uint256 len = uint256(uint8(self[idx]));\\n        if (len > 0) {\\n            labelhash = keccak(self, idx + 1, len);\\n        } else {\\n            labelhash = bytes32(0);\\n        }\\n        newIdx = idx + len + 1;\\n    }\\n}\\n\",\"keccak256\":\"0xc0d13fcaccd6c3af927106b2ea48eec83c5d0a18d608bde013a53742ac058526\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/wrapper/Controllable.sol":{"Controllable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"controller","type":"address"},{"indexed":false,"internalType":"bool","name":"active","type":"bool"}],"name":"ControllerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"controllers","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"controller","type":"address"},{"internalType":"bool","name":"active","type":"bool"}],"name":"setController","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_msgSender_844":{"entryPoint":null,"id":844,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":31,"id":111,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104118061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063da8c229e11610050578063da8c229e146100a3578063e0dba60f146100d6578063f2fde38b146100e957600080fd5b8063715018a61461006c5780638da5cb5b14610076575b600080fd5b6100746100fc565b005b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100c66100b136600461037d565b60016020526000908152604090205460ff1681565b604051901515815260200161009a565b6100746100e436600461039f565b610110565b6100746100f736600461037d565b6101a2565b61010461025e565b61010e60006102df565b565b61011861025e565b73ffffffffffffffffffffffffffffffffffffffff821660008181526001602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915591519182527f4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf87910160405180910390a25050565b6101aa61025e565b73ffffffffffffffffffffffffffffffffffffffff8116610252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61025b816102df565b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461010e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610249565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461037857600080fd5b919050565b60006020828403121561038f57600080fd5b61039882610354565b9392505050565b600080604083850312156103b257600080fd5b6103bb83610354565b9150602083013580151581146103d057600080fd5b80915050925092905056fea2646970667358221220f0364d055e4d00e4bac1697e91ab2584effc0e05ed9592a871a56e19eb2e285764736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x6F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x411 DUP1 PUSH2 0x7E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x67 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDA8C229E GT PUSH2 0x50 JUMPI DUP1 PUSH4 0xDA8C229E EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0xE0DBA60F EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x76 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74 PUSH2 0xFC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x37D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9A JUMP JUMPDEST PUSH2 0x74 PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0x39F JUMP JUMPDEST PUSH2 0x110 JUMP JUMPDEST PUSH2 0x74 PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x37D JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x25E JUMP JUMPDEST PUSH2 0x10E PUSH1 0x0 PUSH2 0x2DF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x118 PUSH2 0x25E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x4C97694570A07277810AF7E5669FFD5F6A2D6B74B6E9A274B8B870FD5114CF87 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x1AA PUSH2 0x25E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x252 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25B DUP2 PUSH2 0x2DF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x10E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x249 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x398 DUP3 PUSH2 0x354 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3BB DUP4 PUSH2 0x354 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE CALLDATASIZE 0x4D SDIV 0x5E 0x4D STOP 0xE4 0xBA 0xC1 PUSH10 0x7E91AB2584EFFC0E05ED SWAP6 SWAP3 0xA8 PUSH18 0xA56E19EB2E285764736F6C63430008110033 ","sourceMap":"111:506:15:-:0;;;;;;;;;;;;-1:-1:-1;936:32:0;719:10:8;936:18:0;:32::i;:::-;111:506:15;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;111:506:15:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_54":{"entryPoint":606,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_844":{"entryPoint":null,"id":844,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":735,"id":111,"parameterSlots":1,"returnSlots":0},"@controllers_1303":{"entryPoint":null,"id":1303,"parameterSlots":0,"returnSlots":0},"@owner_40":{"entryPoint":null,"id":40,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":252,"id":68,"parameterSlots":0,"returnSlots":0},"@setController_1330":{"entryPoint":272,"id":1330,"parameterSlots":2,"returnSlots":0},"@transferOwnership_91":{"entryPoint":418,"id":91,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":852,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":893,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bool":{"entryPoint":927,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1946:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:125:21","statements":[{"nodeType":"YulAssignment","src":"125:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:21"},"nodeType":"YulFunctionCall","src":"133:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"190:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:21"},"nodeType":"YulFunctionCall","src":"178:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:21"},"nodeType":"YulFunctionCall","src":"160:74:21"},"nodeType":"YulExpressionStatement","src":"160:74:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:21","type":""}],"src":"14:226:21"},{"body":{"nodeType":"YulBlock","src":"294:147:21","statements":[{"nodeType":"YulAssignment","src":"304:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"326:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"313:12:21"},"nodeType":"YulFunctionCall","src":"313:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"304:5:21"}]},{"body":{"nodeType":"YulBlock","src":"419:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"428:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"431:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"421:6:21"},"nodeType":"YulFunctionCall","src":"421:12:21"},"nodeType":"YulExpressionStatement","src":"421:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"355:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"366:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"373:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"362:3:21"},"nodeType":"YulFunctionCall","src":"362:54:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"352:2:21"},"nodeType":"YulFunctionCall","src":"352:65:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"345:6:21"},"nodeType":"YulFunctionCall","src":"345:73:21"},"nodeType":"YulIf","src":"342:93:21"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"273:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"284:5:21","type":""}],"src":"245:196:21"},{"body":{"nodeType":"YulBlock","src":"516:116:21","statements":[{"body":{"nodeType":"YulBlock","src":"562:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"571:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"574:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"564:6:21"},"nodeType":"YulFunctionCall","src":"564:12:21"},"nodeType":"YulExpressionStatement","src":"564:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"537:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"546:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"533:3:21"},"nodeType":"YulFunctionCall","src":"533:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"558:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"529:3:21"},"nodeType":"YulFunctionCall","src":"529:32:21"},"nodeType":"YulIf","src":"526:52:21"},{"nodeType":"YulAssignment","src":"587:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"616:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"597:18:21"},"nodeType":"YulFunctionCall","src":"597:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"587:6:21"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"482:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"493:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"505:6:21","type":""}],"src":"446:186:21"},{"body":{"nodeType":"YulBlock","src":"732:92:21","statements":[{"nodeType":"YulAssignment","src":"742:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"754:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"765:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"750:3:21"},"nodeType":"YulFunctionCall","src":"750:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"742:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"784:9:21"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"809:6:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"802:6:21"},"nodeType":"YulFunctionCall","src":"802:14:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"795:6:21"},"nodeType":"YulFunctionCall","src":"795:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"777:6:21"},"nodeType":"YulFunctionCall","src":"777:41:21"},"nodeType":"YulExpressionStatement","src":"777:41:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"701:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"712:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"723:4:21","type":""}],"src":"637:187:21"},{"body":{"nodeType":"YulBlock","src":"913:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"959:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"968:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"971:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"961:6:21"},"nodeType":"YulFunctionCall","src":"961:12:21"},"nodeType":"YulExpressionStatement","src":"961:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"934:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"943:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"930:3:21"},"nodeType":"YulFunctionCall","src":"930:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"955:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"926:3:21"},"nodeType":"YulFunctionCall","src":"926:32:21"},"nodeType":"YulIf","src":"923:52:21"},{"nodeType":"YulAssignment","src":"984:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1013:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"994:18:21"},"nodeType":"YulFunctionCall","src":"994:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"984:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"1032:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1062:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1073:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1058:3:21"},"nodeType":"YulFunctionCall","src":"1058:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1045:12:21"},"nodeType":"YulFunctionCall","src":"1045:32:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1036:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1130:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1139:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1142:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1132:6:21"},"nodeType":"YulFunctionCall","src":"1132:12:21"},"nodeType":"YulExpressionStatement","src":"1132:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1099:5:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1120:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1113:6:21"},"nodeType":"YulFunctionCall","src":"1113:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1106:6:21"},"nodeType":"YulFunctionCall","src":"1106:21:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1096:2:21"},"nodeType":"YulFunctionCall","src":"1096:32:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1089:6:21"},"nodeType":"YulFunctionCall","src":"1089:40:21"},"nodeType":"YulIf","src":"1086:60:21"},{"nodeType":"YulAssignment","src":"1155:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"1165:5:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1155:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"871:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"882:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"894:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"902:6:21","type":""}],"src":"829:347:21"},{"body":{"nodeType":"YulBlock","src":"1355:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1372:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1383:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1365:6:21"},"nodeType":"YulFunctionCall","src":"1365:21:21"},"nodeType":"YulExpressionStatement","src":"1365:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1406:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1417:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1402:3:21"},"nodeType":"YulFunctionCall","src":"1402:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"1422:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1395:6:21"},"nodeType":"YulFunctionCall","src":"1395:30:21"},"nodeType":"YulExpressionStatement","src":"1395:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1445:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1456:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1441:3:21"},"nodeType":"YulFunctionCall","src":"1441:18:21"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"1461:34:21","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1434:6:21"},"nodeType":"YulFunctionCall","src":"1434:62:21"},"nodeType":"YulExpressionStatement","src":"1434:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1516:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1527:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1512:3:21"},"nodeType":"YulFunctionCall","src":"1512:18:21"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"1532:8:21","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1505:6:21"},"nodeType":"YulFunctionCall","src":"1505:36:21"},"nodeType":"YulExpressionStatement","src":"1505:36:21"},{"nodeType":"YulAssignment","src":"1550:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1562:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1573:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1558:3:21"},"nodeType":"YulFunctionCall","src":"1558:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1550:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1332:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1346:4:21","type":""}],"src":"1181:402:21"},{"body":{"nodeType":"YulBlock","src":"1762:182:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1779:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1790:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1772:6:21"},"nodeType":"YulFunctionCall","src":"1772:21:21"},"nodeType":"YulExpressionStatement","src":"1772:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1813:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1824:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1809:3:21"},"nodeType":"YulFunctionCall","src":"1809:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"1829:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1802:6:21"},"nodeType":"YulFunctionCall","src":"1802:30:21"},"nodeType":"YulExpressionStatement","src":"1802:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1852:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1863:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1848:3:21"},"nodeType":"YulFunctionCall","src":"1848:18:21"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"1868:34:21","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1841:6:21"},"nodeType":"YulFunctionCall","src":"1841:62:21"},"nodeType":"YulExpressionStatement","src":"1841:62:21"},{"nodeType":"YulAssignment","src":"1912:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1924:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1935:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1920:3:21"},"nodeType":"YulFunctionCall","src":"1920:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1912:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1739:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1753:4:21","type":""}],"src":"1588:356:21"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100675760003560e01c8063da8c229e11610050578063da8c229e146100a3578063e0dba60f146100d6578063f2fde38b146100e957600080fd5b8063715018a61461006c5780638da5cb5b14610076575b600080fd5b6100746100fc565b005b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100c66100b136600461037d565b60016020526000908152604090205460ff1681565b604051901515815260200161009a565b6100746100e436600461039f565b610110565b6100746100f736600461037d565b6101a2565b61010461025e565b61010e60006102df565b565b61011861025e565b73ffffffffffffffffffffffffffffffffffffffff821660008181526001602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915591519182527f4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf87910160405180910390a25050565b6101aa61025e565b73ffffffffffffffffffffffffffffffffffffffff8116610252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61025b816102df565b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461010e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610249565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461037857600080fd5b919050565b60006020828403121561038f57600080fd5b61039882610354565b9392505050565b600080604083850312156103b257600080fd5b6103bb83610354565b9150602083013580151581146103d057600080fd5b80915050925092905056fea2646970667358221220f0364d055e4d00e4bac1697e91ab2584effc0e05ed9592a871a56e19eb2e285764736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x67 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDA8C229E GT PUSH2 0x50 JUMPI DUP1 PUSH4 0xDA8C229E EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0xE0DBA60F EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x76 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74 PUSH2 0xFC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x37D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9A JUMP JUMPDEST PUSH2 0x74 PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0x39F JUMP JUMPDEST PUSH2 0x110 JUMP JUMPDEST PUSH2 0x74 PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x37D JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x25E JUMP JUMPDEST PUSH2 0x10E PUSH1 0x0 PUSH2 0x2DF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x118 PUSH2 0x25E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x4C97694570A07277810AF7E5669FFD5F6A2D6B74B6E9A274B8B870FD5114CF87 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x1AA PUSH2 0x25E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x252 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25B DUP2 PUSH2 0x2DF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x10E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x249 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x398 DUP3 PUSH2 0x354 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3BB DUP4 PUSH2 0x354 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE CALLDATASIZE 0x4D SDIV 0x5E 0x4D STOP 0xE4 0xBA 0xC1 PUSH10 0x7E91AB2584EFFC0E05ED SWAP6 SWAP3 0xA8 PUSH18 0xA56E19EB2E285764736F6C63430008110033 ","sourceMap":"111:506:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1831:101:0;;;:::i;:::-;;1201:85;1247:7;1273:6;1201:85;;1273:6;;;;160:74:21;;148:2;133:18;1201:85:0;;;;;;;;150:43:15;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;802:14:21;;795:22;777:41;;765:2;750:18;150:43:15;637:187:21;271:174:15;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;1831:101::-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;271:174:15:-;1094:13:0;:11;:13::i;:::-;354:23:15::1;::::0;::::1;;::::0;;;:11:::1;:23;::::0;;;;;;;;:32;;;::::1;::::0;::::1;;::::0;;::::1;::::0;;;401:37;;777:41:21;;;401:37:15::1;::::0;750:18:21;401:37:15::1;;;;;;;271:174:::0;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2169:22:::1;::::0;::::1;2161:73;;;::::0;::::1;::::0;;1383:2:21;2161:73:0::1;::::0;::::1;1365:21:21::0;1422:2;1402:18;;;1395:30;1461:34;1441:18;;;1434:62;1532:8;1512:18;;;1505:36;1558:19;;2161:73:0::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;1422:23;1273:6;719:10:8;1422:23:0;1414:68;;;;;;;1790:2:21;1414:68:0;;;1772:21:21;;;1809:18;;;1802:30;1868:34;1848:18;;;1841:62;1920:18;;1414:68:0;1588:356:21;2433:187:0;2506:16;2525:6;;;2541:17;;;;;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;245:196:21:-;313:20;;373:42;362:54;;352:65;;342:93;;431:1;428;421:12;342:93;245:196;;;:::o;446:186::-;505:6;558:2;546:9;537:7;533:23;529:32;526:52;;;574:1;571;564:12;526:52;597:29;616:9;597:29;:::i;:::-;587:39;446:186;-1:-1:-1;;;446:186:21:o;829:347::-;894:6;902;955:2;943:9;934:7;930:23;926:32;923:52;;;971:1;968;961:12;923:52;994:29;1013:9;994:29;:::i;:::-;984:39;;1073:2;1062:9;1058:18;1045:32;1120:5;1113:13;1106:21;1099:5;1096:32;1086:60;;1142:1;1139;1132:12;1086:60;1165:5;1155:15;;;829:347;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"208200","executionCost":"26092","totalCost":"234292"},"external":{"controllers(address)":"2519","owner()":"2301","renounceOwnership()":"infinite","setController(address,bool)":"28280","transferOwnership(address)":"28314"}},"methodIdentifiers":{"controllers(address)":"da8c229e","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setController(address,bool)":"e0dba60f","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"ControllerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/wrapper/Controllable.sol\":\"Controllable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/wrapper/Controllable.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ~0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Controllable is Ownable {\\n    mapping(address => bool) public controllers;\\n\\n    event ControllerChanged(address indexed controller, bool active);\\n\\n    function setController(address controller, bool active) public onlyOwner {\\n        controllers[controller] = active;\\n        emit ControllerChanged(controller, active);\\n    }\\n\\n    modifier onlyController() {\\n        require(\\n            controllers[msg.sender],\\n            \\\"Controllable: Caller is not a controller\\\"\\n        );\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x9a9191656a82eda6763cda29ce893ddbfddb6c43559ff3b90c00a184e14e1fa1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/wrapper/Controllable.sol:Controllable","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":1303,"contract":"contracts/wrapper/Controllable.sol:Controllable","label":"controllers","offset":0,"slot":"1","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/wrapper/ERC1155Fuse.sol":{"ERC1155Fuse":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_tokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getData","outputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint32","name":"fuses","type":"uint32"},{"internalType":"uint64","name":"expiry","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"getData(uint256)":{"details":"Returns the Name's owner address and fuses"},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"uri(uint256)":{"details":"Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"_tokens(uint256)":"ed70554d","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","getData(uint256)":"0178fe3f","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"fuses\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"expiry\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"getData(uint256)\":{\"details\":\"Returns the Name's owner address and fuses\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/wrapper/ERC1155Fuse.sol\":\"ERC1155Fuse\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/wrapper/ERC1155Fuse.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ~0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/utils/introspection/ERC165.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\n\\n/* This contract is a variation on ERC1155 with the additions of _setData, getData and _preTransferCheck and ownerOf. _setData and getData allows the use of the other 96 bits next to the address of the owner for extra data. We use this to store 'fuses' that control permissions that can be burnt. 32 bits are used for the fuses themselves and 64 bits are used for the expiry of the name. When a name has expired, its fuses will be be set back to 0 */\\n\\nabstract contract ERC1155Fuse is ERC165, IERC1155, IERC1155MetadataURI {\\n    using Address for address;\\n    mapping(uint256 => uint256) public _tokens;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**************************************************************************\\n     * ERC721 methods\\n     *************************************************************************/\\n\\n    function ownerOf(uint256 id) public view virtual returns (address) {\\n        (address owner, , ) = getData(id);\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId)\\n        public\\n        view\\n        virtual\\n        override(ERC165, IERC165)\\n        returns (bool)\\n    {\\n        return\\n            interfaceId == type(IERC1155).interfaceId ||\\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (uint256)\\n    {\\n        require(\\n            account != address(0),\\n            \\\"ERC1155: balance query for the zero address\\\"\\n        );\\n        address owner = ownerOf(id);\\n        if (owner == account) {\\n            return 1;\\n        }\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOfBatch}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (uint256[] memory)\\n    {\\n        require(\\n            accounts.length == ids.length,\\n            \\\"ERC1155: accounts and ids length mismatch\\\"\\n        );\\n\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\n\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\\n        }\\n\\n        return batchBalances;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved)\\n        public\\n        virtual\\n        override\\n    {\\n        require(\\n            msg.sender != operator,\\n            \\\"ERC1155: setting approval status for self\\\"\\n        );\\n\\n        _operatorApprovals[msg.sender][operator] = approved;\\n        emit ApprovalForAll(msg.sender, operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (bool)\\n    {\\n        return _operatorApprovals[account][operator];\\n    }\\n\\n    /**\\n     * @dev Returns the Name's owner address and fuses\\n     */\\n    function getData(uint256 tokenId)\\n        public\\n        view\\n        virtual\\n        returns (\\n            address owner,\\n            uint32 fuses,\\n            uint64 expiry\\n        )\\n    {\\n        uint256 t = _tokens[tokenId];\\n        owner = address(uint160(t));\\n        expiry = uint64(t >> 192);\\n        fuses = uint32(t >> 160);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) public virtual override {\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n        require(\\n            from == msg.sender || isApprovedForAll(from, msg.sender),\\n            \\\"ERC1155: caller is not owner nor approved\\\"\\n        );\\n\\n        _transfer(from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            ids.length == amounts.length,\\n            \\\"ERC1155: ids and amounts length mismatch\\\"\\n        );\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n        require(\\n            from == msg.sender || isApprovedForAll(from, msg.sender),\\n            \\\"ERC1155: transfer caller is not owner nor approved\\\"\\n        );\\n\\n        for (uint256 i = 0; i < ids.length; ++i) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            (address oldOwner, uint32 fuses, uint64 expiry) = getData(id);\\n\\n            _preTransferCheck(id, fuses, expiry);\\n\\n            require(\\n                amount == 1 && oldOwner == from,\\n                \\\"ERC1155: insufficient balance for transfer\\\"\\n            );\\n            _setData(id, to, fuses, expiry);\\n        }\\n\\n        emit TransferBatch(msg.sender, from, to, ids, amounts);\\n\\n        _doSafeBatchTransferAcceptanceCheck(\\n            msg.sender,\\n            from,\\n            to,\\n            ids,\\n            amounts,\\n            data\\n        );\\n    }\\n\\n    /**************************************************************************\\n     * Internal/private methods\\n     *************************************************************************/\\n\\n    /**\\n     * @dev Sets the Name's owner address and fuses\\n     */\\n    function _setData(\\n        uint256 tokenId,\\n        address owner,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) internal virtual {\\n        _tokens[tokenId] =\\n            uint256(uint160(owner)) |\\n            (uint256(fuses) << 160) |\\n            (uint256(expiry) << 192);\\n    }\\n\\n    function _preTransferCheck(\\n        uint256 id,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) internal virtual returns (bool);\\n\\n    function _clearOwnerAndFuses(\\n        address owner,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) internal virtual returns (address, uint32);\\n\\n    function _mint(\\n        bytes32 node,\\n        address owner,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) internal virtual {\\n        uint256 tokenId = uint256(node);\\n        (address oldOwner, uint32 oldFuses, uint64 oldExpiry) = getData(\\n            uint256(node)\\n        );\\n\\n        uint32 parentControlledFuses = (uint32(type(uint16).max) << 16) &\\n            oldFuses;\\n\\n        if (oldExpiry > expiry) {\\n            expiry = oldExpiry;\\n        }\\n\\n        if (oldExpiry >= block.timestamp) {\\n            fuses = fuses | parentControlledFuses;\\n        }\\n\\n        require(oldOwner == address(0), \\\"ERC1155: mint of existing token\\\");\\n        require(owner != address(0), \\\"ERC1155: mint to the zero address\\\");\\n        require(\\n            owner != address(this),\\n            \\\"ERC1155: newOwner cannot be the NameWrapper contract\\\"\\n        );\\n\\n        _setData(tokenId, owner, fuses, expiry);\\n        emit TransferSingle(msg.sender, address(0x0), owner, tokenId, 1);\\n        _doSafeTransferAcceptanceCheck(\\n            msg.sender,\\n            address(0),\\n            owner,\\n            tokenId,\\n            1,\\n            \\\"\\\"\\n        );\\n    }\\n\\n    function _burn(uint256 tokenId) internal virtual {\\n        (address oldOwner, uint32 fuses, uint64 expiry) = ERC1155Fuse.getData(\\n            tokenId\\n        );\\n        (, fuses) = _clearOwnerAndFuses(oldOwner, fuses, expiry);\\n        // Fuses and expiry are kept on burn\\n        _setData(tokenId, address(0x0), fuses, expiry);\\n        emit TransferSingle(msg.sender, oldOwner, address(0x0), tokenId, 1);\\n    }\\n\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal {\\n        (address oldOwner, uint32 fuses, uint64 expiry) = getData(id);\\n\\n        _preTransferCheck(id, fuses, expiry);\\n\\n        require(\\n            amount == 1 && oldOwner == from,\\n            \\\"ERC1155: insufficient balance for transfer\\\"\\n        );\\n\\n        if (oldOwner == to) {\\n            return;\\n        }\\n\\n        _setData(id, to, fuses, expiry);\\n\\n        emit TransferSingle(msg.sender, from, to, id, amount);\\n\\n        _doSafeTransferAcceptanceCheck(msg.sender, from, to, id, amount, data);\\n    }\\n\\n    function _doSafeTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try\\n                IERC1155Receiver(to).onERC1155Received(\\n                    operator,\\n                    from,\\n                    id,\\n                    amount,\\n                    data\\n                )\\n            returns (bytes4 response) {\\n                if (\\n                    response != IERC1155Receiver(to).onERC1155Received.selector\\n                ) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _doSafeBatchTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try\\n                IERC1155Receiver(to).onERC1155BatchReceived(\\n                    operator,\\n                    from,\\n                    ids,\\n                    amounts,\\n                    data\\n                )\\n            returns (bytes4 response) {\\n                if (\\n                    response !=\\n                    IERC1155Receiver(to).onERC1155BatchReceived.selector\\n                ) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x51b40cc5f2af5b3ea265af206aa5d8d80da5a5470d4751e05c9670cd1dc5441a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1363,"contract":"contracts/wrapper/ERC1155Fuse.sol:ERC1155Fuse","label":"_tokens","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1369,"contract":"contracts/wrapper/ERC1155Fuse.sol:ERC1155Fuse","label":"_operatorApprovals","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/wrapper/IMetadataService.sol":{"IMetadataService":{"abi":[{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/wrapper/IMetadataService.sol\":\"IMetadataService\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2500},\"remappings\":[]},\"sources\":{\"contracts/wrapper/IMetadataService.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ~0.8.17;\\n\\ninterface IMetadataService {\\n    function uri(uint256) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xb3f1cf6df01ed7b15e5f2318f6823afbdb586ca38c2124c67955c645647ae9a2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/wrapper/INameWrapper.sol":{"INameWrapper":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"node","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"expiry","type":"uint64"}],"name":"ExpiryExtended","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"node","type":"bytes32"},{"indexed":false,"internalType":"uint32","name":"fuses","type":"uint32"}],"name":"FusesSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"node","type":"bytes32"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"NameUnwrapped","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"node","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"name","type":"bytes"},{"indexed":false,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint32","name":"fuses","type":"uint32"},{"indexed":false,"internalType":"uint64","name":"expiry","type":"uint64"}],"name":"NameWrapped","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"uint32","name":"fuseMask","type":"uint32"}],"name":"allFusesBurned","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"address","name":"addr","type":"address"}],"name":"canModifyName","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"ens","outputs":[{"internalType":"contract ENS","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"bytes32","name":"labelhash","type":"bytes32"},{"internalType":"uint64","name":"expiry","type":"uint64"}],"name":"extendExpiry","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getData","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"metadataService","outputs":[{"internalType":"contract IMetadataService","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"names","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"label","type":"string"},{"internalType":"address","name":"wrappedOwner","type":"address"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"address","name":"resolver","type":"address"},{"internalType":"uint16","name":"ownerControlledFuses","type":"uint16"}],"name":"registerAndWrapETH2LD","outputs":[{"internalType":"uint256","name":"registrarExpiry","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"registrar","outputs":[{"internalType":"contract IBaseRegistrar","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"labelHash","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"}],"name":"renew","outputs":[{"internalType":"uint256","name":"expires","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"bytes32","name":"labelhash","type":"bytes32"},{"internalType":"uint32","name":"fuses","type":"uint32"},{"internalType":"uint64","name":"expiry","type":"uint64"}],"name":"setChildFuses","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"uint16","name":"ownerControlledFuses","type":"uint16"}],"name":"setFuses","outputs":[{"internalType":"uint32","name":"newFuses","type":"uint32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"resolver","type":"address"},{"internalType":"uint64","name":"ttl","type":"uint64"}],"name":"setRecord","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"address","name":"resolver","type":"address"}],"name":"setResolver","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"string","name":"label","type":"string"},{"internalType":"address","name":"newOwner","type":"address"},{"internalType":"uint32","name":"fuses","type":"uint32"},{"internalType":"uint64","name":"expiry","type":"uint64"}],"name":"setSubnodeOwner","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"string","name":"label","type":"string"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"resolver","type":"address"},{"internalType":"uint64","name":"ttl","type":"uint64"},{"internalType":"uint32","name":"fuses","type":"uint32"},{"internalType":"uint64","name":"expiry","type":"uint64"}],"name":"setSubnodeRecord","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"uint64","name":"ttl","type":"uint64"}],"name":"setTTL","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"bytes32","name":"label","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"}],"name":"unwrap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"label","type":"bytes32"},{"internalType":"address","name":"newRegistrant","type":"address"},{"internalType":"address","name":"newController","type":"address"}],"name":"unwrapETH2LD","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"name","type":"bytes"},{"internalType":"address","name":"wrappedOwner","type":"address"},{"internalType":"address","name":"resolver","type":"address"}],"name":"wrap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"label","type":"string"},{"internalType":"address","name":"wrappedOwner","type":"address"},{"internalType":"uint16","name":"ownerControlledFuses","type":"uint16"},{"internalType":"address","name":"resolver","type":"address"}],"name":"wrapETH2LD","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."},"setApprovalForAll(address,bool)":{"details":"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allFusesBurned(bytes32,uint32)":"adf4960a","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","canModifyName(bytes32,address)":"41415eab","ens()":"3f15457f","extendExpiry(bytes32,bytes32,uint64)":"6e5d6ad2","getData(uint256)":"0178fe3f","isApprovedForAll(address,address)":"e985e9c5","metadataService()":"53095467","names(bytes32)":"20c38e2b","ownerOf(uint256)":"6352211e","registerAndWrapETH2LD(string,address,uint256,address,uint16)":"a4014982","registrar()":"2b20e397","renew(uint256,uint256)":"c475abff","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setChildFuses(bytes32,bytes32,uint32,uint64)":"33c69ea9","setFuses(bytes32,uint16)":"402906fc","setRecord(bytes32,address,address,uint64)":"cf408823","setResolver(bytes32,address)":"1896f70a","setSubnodeOwner(bytes32,string,address,uint32,uint64)":"c658e086","setSubnodeRecord(bytes32,string,address,address,uint64,uint32,uint64)":"24c1af44","setTTL(bytes32,uint64)":"14ab9038","supportsInterface(bytes4)":"01ffc9a7","unwrap(bytes32,bytes32,address)":"d8c9921a","unwrapETH2LD(bytes32,address,address)":"8b4dfa75","wrap(bytes,address,address)":"eb8ae530","wrapETH2LD(string,address,uint16,address)":"8cf8b41e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"expiry\",\"type\":\"uint64\"}],\"name\":\"ExpiryExtended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"fuses\",\"type\":\"uint32\"}],\"name\":\"FusesSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"NameUnwrapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"name\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"fuses\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"expiry\",\"type\":\"uint64\"}],\"name\":\"NameWrapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"fuseMask\",\"type\":\"uint32\"}],\"name\":\"allFusesBurned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"canModifyName\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ens\",\"outputs\":[{\"internalType\":\"contract ENS\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"labelhash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"expiry\",\"type\":\"uint64\"}],\"name\":\"extendExpiry\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metadataService\",\"outputs\":[{\"internalType\":\"contract IMetadataService\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"names\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wrappedOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"ownerControlledFuses\",\"type\":\"uint16\"}],\"name\":\"registerAndWrapETH2LD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"registrarExpiry\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registrar\",\"outputs\":[{\"internalType\":\"contract IBaseRegistrar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"labelHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"renew\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"labelhash\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"fuses\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"expiry\",\"type\":\"uint64\"}],\"name\":\"setChildFuses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"ownerControlledFuses\",\"type\":\"uint16\"}],\"name\":\"setFuses\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"newFuses\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"}],\"name\":\"setRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"setResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"fuses\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"expiry\",\"type\":\"uint64\"}],\"name\":\"setSubnodeOwner\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"fuses\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"expiry\",\"type\":\"uint64\"}],\"name\":\"setSubnodeRecord\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"}],\"name\":\"setTTL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newRegistrant\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"unwrapETH2LD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"name\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"wrappedOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"wrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wrappedOwner\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"ownerControlledFuses\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"wrapETH2LD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/wrapper/INameWrapper.sol\":\"INameWrapper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/ethregistrar/IBaseRegistrar.sol\":{\"content\":\"import \\\"../registry/ENS.sol\\\";\\nimport \\\"./IBaseRegistrar.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\ninterface IBaseRegistrar is IERC721 {\\n    event ControllerAdded(address indexed controller);\\n    event ControllerRemoved(address indexed controller);\\n    event NameMigrated(\\n        uint256 indexed id,\\n        address indexed owner,\\n        uint256 expires\\n    );\\n    event NameRegistered(\\n        uint256 indexed id,\\n        address indexed owner,\\n        uint256 expires\\n    );\\n    event NameRenewed(uint256 indexed id, uint256 expires);\\n\\n    // Authorises a controller, who can register and renew domains.\\n    function addController(address controller) external;\\n\\n    // Revoke controller permission for an address.\\n    function removeController(address controller) external;\\n\\n    // Set the resolver for the TLD this registrar manages.\\n    function setResolver(address resolver) external;\\n\\n    // Returns the expiration timestamp of the specified label hash.\\n    function nameExpires(uint256 id) external view returns (uint256);\\n\\n    // Returns true iff the specified name is available for registration.\\n    function available(uint256 id) external view returns (bool);\\n\\n    /**\\n     * @dev Register a name.\\n     */\\n    function register(\\n        uint256 id,\\n        address owner,\\n        uint256 duration\\n    ) external returns (uint256);\\n\\n    function renew(uint256 id, uint256 duration) external returns (uint256);\\n\\n    /**\\n     * @dev Reclaim ownership of a name in ENS, if you own it in the registrar.\\n     */\\n    function reclaim(uint256 id, address owner) external;\\n}\\n\",\"keccak256\":\"0x9ac51351ff72d73083aed62b7cdad4c07e9d1eb68401d7fd8457bdd828f2c6fe\"},\"contracts/registry/ENS.sol\":{\"content\":\"pragma solidity >=0.8.4;\\n\\ninterface ENS {\\n    // Logged when the owner of a node assigns a new owner to a subnode.\\n    event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\\n\\n    // Logged when the owner of a node transfers ownership to a new account.\\n    event Transfer(bytes32 indexed node, address owner);\\n\\n    // Logged when the resolver for a node changes.\\n    event NewResolver(bytes32 indexed node, address resolver);\\n\\n    // Logged when the TTL of a node changes\\n    event NewTTL(bytes32 indexed node, uint64 ttl);\\n\\n    // Logged when an operator is added or removed.\\n    event ApprovalForAll(\\n        address indexed owner,\\n        address indexed operator,\\n        bool approved\\n    );\\n\\n    function setRecord(\\n        bytes32 node,\\n        address owner,\\n        address resolver,\\n        uint64 ttl\\n    ) external;\\n\\n    function setSubnodeRecord(\\n        bytes32 node,\\n        bytes32 label,\\n        address owner,\\n        address resolver,\\n        uint64 ttl\\n    ) external;\\n\\n    function setSubnodeOwner(\\n        bytes32 node,\\n        bytes32 label,\\n        address owner\\n    ) external returns (bytes32);\\n\\n    function setResolver(bytes32 node, address resolver) external;\\n\\n    function setOwner(bytes32 node, address owner) external;\\n\\n    function setTTL(bytes32 node, uint64 ttl) external;\\n\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    function owner(bytes32 node) external view returns (address);\\n\\n    function resolver(bytes32 node) external view returns (address);\\n\\n    function ttl(bytes32 node) external view returns (uint64);\\n\\n    function recordExists(bytes32 node) external view returns (bool);\\n\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool);\\n}\\n\",\"keccak256\":\"0xf79be82c1a2eb0a77fba4e0972221912e803309081ca460fd2cf61653e55758a\"},\"contracts/wrapper/IMetadataService.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ~0.8.17;\\n\\ninterface IMetadataService {\\n    function uri(uint256) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xb3f1cf6df01ed7b15e5f2318f6823afbdb586ca38c2124c67955c645647ae9a2\",\"license\":\"MIT\"},\"contracts/wrapper/INameWrapper.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ~0.8.17;\\n\\nimport \\\"../registry/ENS.sol\\\";\\nimport \\\"../ethregistrar/IBaseRegistrar.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\\\";\\nimport \\\"./IMetadataService.sol\\\";\\n\\nuint32 constant CANNOT_UNWRAP = 1;\\nuint32 constant CANNOT_BURN_FUSES = 2;\\nuint32 constant CANNOT_TRANSFER = 4;\\nuint32 constant CANNOT_SET_RESOLVER = 8;\\nuint32 constant CANNOT_SET_TTL = 16;\\nuint32 constant CANNOT_CREATE_SUBDOMAIN = 32;\\n//uint16 reserved for parent controlled fuses from bit 17 to bit 32\\nuint32 constant PARENT_CANNOT_CONTROL = 1 << 16;\\nuint32 constant IS_DOT_ETH = 1 << 17;\\nuint32 constant CAN_EXTEND_EXPIRY = 1 << 18;\\nuint32 constant CAN_DO_EVERYTHING = 0;\\nuint32 constant PARENT_CONTROLLED_FUSES = 0xFFFF0000;\\n// all fuses apart from IS_DOT_ETH\\nuint32 constant USER_SETTABLE_FUSES = 0xFFFDFFFF;\\n\\ninterface INameWrapper is IERC1155 {\\n    event NameWrapped(\\n        bytes32 indexed node,\\n        bytes name,\\n        address owner,\\n        uint32 fuses,\\n        uint64 expiry\\n    );\\n\\n    event NameUnwrapped(bytes32 indexed node, address owner);\\n\\n    event FusesSet(bytes32 indexed node, uint32 fuses);\\n    event ExpiryExtended(bytes32 indexed node, uint64 expiry);\\n\\n    function ens() external view returns (ENS);\\n\\n    function registrar() external view returns (IBaseRegistrar);\\n\\n    function metadataService() external view returns (IMetadataService);\\n\\n    function names(bytes32) external view returns (bytes memory);\\n\\n    function wrap(\\n        bytes calldata name,\\n        address wrappedOwner,\\n        address resolver\\n    ) external;\\n\\n    function wrapETH2LD(\\n        string calldata label,\\n        address wrappedOwner,\\n        uint16 ownerControlledFuses,\\n        address resolver\\n    ) external;\\n\\n    function registerAndWrapETH2LD(\\n        string calldata label,\\n        address wrappedOwner,\\n        uint256 duration,\\n        address resolver,\\n        uint16 ownerControlledFuses\\n    ) external returns (uint256 registrarExpiry);\\n\\n    function renew(uint256 labelHash, uint256 duration)\\n        external\\n        returns (uint256 expires);\\n\\n    function unwrap(\\n        bytes32 node,\\n        bytes32 label,\\n        address owner\\n    ) external;\\n\\n    function unwrapETH2LD(\\n        bytes32 label,\\n        address newRegistrant,\\n        address newController\\n    ) external;\\n\\n    function setFuses(bytes32 node, uint16 ownerControlledFuses)\\n        external\\n        returns (uint32 newFuses);\\n\\n    function setChildFuses(\\n        bytes32 parentNode,\\n        bytes32 labelhash,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) external;\\n\\n    function setSubnodeRecord(\\n        bytes32 node,\\n        string calldata label,\\n        address owner,\\n        address resolver,\\n        uint64 ttl,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) external returns (bytes32);\\n\\n    function setRecord(\\n        bytes32 node,\\n        address owner,\\n        address resolver,\\n        uint64 ttl\\n    ) external;\\n\\n    function setSubnodeOwner(\\n        bytes32 node,\\n        string calldata label,\\n        address newOwner,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) external returns (bytes32);\\n\\n    function extendExpiry(\\n        bytes32 node,\\n        bytes32 labelhash,\\n        uint64 expiry\\n    ) external returns (uint64);\\n\\n    function canModifyName(bytes32 node, address addr) external returns (bool);\\n\\n    function setResolver(bytes32 node, address resolver) external;\\n\\n    function setTTL(bytes32 node, uint64 ttl) external;\\n\\n    function ownerOf(uint256 id) external returns (address owner);\\n\\n    function getData(uint256 id)\\n        external\\n        returns (\\n            address,\\n            uint32,\\n            uint64\\n        );\\n\\n    function allFusesBurned(bytes32 node, uint32 fuseMask)\\n        external\\n        view\\n        returns (bool);\\n}\\n\",\"keccak256\":\"0xa10bff4b7787a78a38f0562310204007ac99bfe8b2aeb212897197c4118a578a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/wrapper/INameWrapperUpgrade.sol":{"INameWrapperUpgrade":{"abi":[{"inputs":[{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"string","name":"label","type":"string"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"resolver","type":"address"},{"internalType":"uint64","name":"ttl","type":"uint64"},{"internalType":"uint32","name":"fuses","type":"uint32"},{"internalType":"uint64","name":"expiry","type":"uint64"}],"name":"setSubnodeRecord","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"label","type":"string"},{"internalType":"address","name":"wrappedOwner","type":"address"},{"internalType":"uint32","name":"fuses","type":"uint32"},{"internalType":"uint64","name":"expiry","type":"uint64"},{"internalType":"address","name":"resolver","type":"address"}],"name":"wrapETH2LD","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"setSubnodeRecord(bytes32,string,address,address,uint64,uint32,uint64)":"24c1af44","wrapETH2LD(string,address,uint32,uint64,address)":"f9547a9e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"fuses\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"expiry\",\"type\":\"uint64\"}],\"name\":\"setSubnodeRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wrappedOwner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"fuses\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"expiry\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"wrapETH2LD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/wrapper/INameWrapperUpgrade.sol\":\"INameWrapperUpgrade\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2500},\"remappings\":[]},\"sources\":{\"contracts/wrapper/INameWrapperUpgrade.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ~0.8.17;\\n\\ninterface INameWrapperUpgrade {\\n    function setSubnodeRecord(\\n        bytes32 parentNode,\\n        string calldata label,\\n        address owner,\\n        address resolver,\\n        uint64 ttl,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) external;\\n\\n    function wrapETH2LD(\\n        string calldata label,\\n        address wrappedOwner,\\n        uint32 fuses,\\n        uint64 expiry,\\n        address resolver\\n    ) external;\\n}\\n\",\"keccak256\":\"0x40b2719f8a3c5f037dd7c827fd5e694d0e5485bbbca4e66aa9334e097f3d2854\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/wrapper/NameWrapper.sol":{"NameWrapper":{"abi":[{"inputs":[{"internalType":"contract ENS","name":"_ens","type":"address"},{"internalType":"contract IBaseRegistrar","name":"_registrar","type":"address"},{"internalType":"contract IMetadataService","name":"_metadataService","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"CannotUpgrade","type":"error"},{"inputs":[],"name":"IncompatibleParent","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"IncorrectTargetOwner","type":"error"},{"inputs":[],"name":"IncorrectTokenType","type":"error"},{"inputs":[{"internalType":"bytes32","name":"labelHash","type":"bytes32"},{"internalType":"bytes32","name":"expectedLabelhash","type":"bytes32"}],"name":"LabelMismatch","type":"error"},{"inputs":[{"internalType":"string","name":"label","type":"string"}],"name":"LabelTooLong","type":"error"},{"inputs":[],"name":"LabelTooShort","type":"error"},{"inputs":[],"name":"NameIsNotWrapped","type":"error"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"}],"name":"OperationProhibited","type":"error"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"address","name":"addr","type":"address"}],"name":"Unauthorised","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"controller","type":"address"},{"indexed":false,"internalType":"bool","name":"active","type":"bool"}],"name":"ControllerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"node","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"expiry","type":"uint64"}],"name":"ExpiryExtended","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"node","type":"bytes32"},{"indexed":false,"internalType":"uint32","name":"fuses","type":"uint32"}],"name":"FusesSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"node","type":"bytes32"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"NameUnwrapped","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"node","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"name","type":"bytes"},{"indexed":false,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint32","name":"fuses","type":"uint32"},{"indexed":false,"internalType":"uint64","name":"expiry","type":"uint64"}],"name":"NameWrapped","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_tokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"uint32","name":"fuseMask","type":"uint32"}],"name":"allFusesBurned","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"address","name":"addr","type":"address"}],"name":"canModifyName","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"controllers","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ens","outputs":[{"internalType":"contract ENS","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"bytes32","name":"labelhash","type":"bytes32"},{"internalType":"uint64","name":"expiry","type":"uint64"}],"name":"extendExpiry","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getData","outputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint32","name":"fuses","type":"uint32"},{"internalType":"uint64","name":"expiry","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"}],"name":"isWrapped","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"metadataService","outputs":[{"internalType":"contract IMetadataService","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"names","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"recoverFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"label","type":"string"},{"internalType":"address","name":"wrappedOwner","type":"address"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"address","name":"resolver","type":"address"},{"internalType":"uint16","name":"ownerControlledFuses","type":"uint16"}],"name":"registerAndWrapETH2LD","outputs":[{"internalType":"uint256","name":"registrarExpiry","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"registrar","outputs":[{"internalType":"contract IBaseRegistrar","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"}],"name":"renew","outputs":[{"internalType":"uint256","name":"expires","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"bytes32","name":"labelhash","type":"bytes32"},{"internalType":"uint32","name":"fuses","type":"uint32"},{"internalType":"uint64","name":"expiry","type":"uint64"}],"name":"setChildFuses","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"controller","type":"address"},{"internalType":"bool","name":"active","type":"bool"}],"name":"setController","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"uint16","name":"ownerControlledFuses","type":"uint16"}],"name":"setFuses","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IMetadataService","name":"_metadataService","type":"address"}],"name":"setMetadataService","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"resolver","type":"address"},{"internalType":"uint64","name":"ttl","type":"uint64"}],"name":"setRecord","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"address","name":"resolver","type":"address"}],"name":"setResolver","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"string","name":"label","type":"string"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint32","name":"fuses","type":"uint32"},{"internalType":"uint64","name":"expiry","type":"uint64"}],"name":"setSubnodeOwner","outputs":[{"internalType":"bytes32","name":"node","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"string","name":"label","type":"string"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"resolver","type":"address"},{"internalType":"uint64","name":"ttl","type":"uint64"},{"internalType":"uint32","name":"fuses","type":"uint32"},{"internalType":"uint64","name":"expiry","type":"uint64"}],"name":"setSubnodeRecord","outputs":[{"internalType":"bytes32","name":"node","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"uint64","name":"ttl","type":"uint64"}],"name":"setTTL","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract INameWrapperUpgrade","name":"_upgradeAddress","type":"address"}],"name":"setUpgradeContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"bytes32","name":"labelhash","type":"bytes32"},{"internalType":"address","name":"controller","type":"address"}],"name":"unwrap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"labelhash","type":"bytes32"},{"internalType":"address","name":"registrant","type":"address"},{"internalType":"address","name":"controller","type":"address"}],"name":"unwrapETH2LD","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"string","name":"label","type":"string"},{"internalType":"address","name":"wrappedOwner","type":"address"},{"internalType":"address","name":"resolver","type":"address"}],"name":"upgrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"upgradeContract","outputs":[{"internalType":"contract INameWrapperUpgrade","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"label","type":"string"},{"internalType":"address","name":"wrappedOwner","type":"address"},{"internalType":"address","name":"resolver","type":"address"}],"name":"upgradeETH2LD","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"name","type":"bytes"},{"internalType":"address","name":"wrappedOwner","type":"address"},{"internalType":"address","name":"resolver","type":"address"}],"name":"wrap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"label","type":"string"},{"internalType":"address","name":"wrappedOwner","type":"address"},{"internalType":"uint16","name":"ownerControlledFuses","type":"uint16"},{"internalType":"address","name":"resolver","type":"address"}],"name":"wrapETH2LD","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allFusesBurned(bytes32,uint32)":{"params":{"fuseMask":"The fuses you want to check","node":"Namehash of the name"},"returns":{"_0":"Boolean of whether or not all the selected fuses are burned"}},"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"canModifyName(bytes32,address)":{"params":{"addr":"which address to check permissions for","node":"namehash of the name to check"},"returns":{"_0":"whether or not is owner or approved"}},"extendExpiry(bytes32,bytes32,uint64)":{"params":{"expiry":"When the name will expire in seconds since the Unix epoch","labelhash":"Labelhash of the name, e.g. vitalik.xyz would be keccak256('vitalik')","parentNode":"Parent namehash of the name e.g. vitalik.xyz would be namehash('xyz')"},"returns":{"_0":"New expiry"}},"getData(uint256)":{"params":{"id":"Namehash of the name"},"returns":{"expiry":"Expiry of the name","fuses":"Fuses of the name","owner":"Owner of the name"}},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"params":{"id":"Label as a string of the .eth domain to wrap"},"returns":{"owner":"The owner of the name"}},"recoverFunds(address,address,uint256)":{"details":"The contract is Ownable and only the owner can call the recover function.","params":{"_amount":"The amount of tokens to recover.","_to":"The address to send the tokens to.","_token":"The address of the ERC20 token to recover"}},"registerAndWrapETH2LD(string,address,uint256,address,uint16)":{"details":"Registers a new .eth second-level domain and wraps it.      Only callable by authorised controllers.","params":{"duration":"The duration, in seconds, to register the name for.","label":"The label to register (Eg, 'foo' for 'foo.eth').","ownerControlledFuses":"Initial owner-controlled fuses to set","resolver":"The resolver address to set on the ENS registry (optional).","wrappedOwner":"The owner of the wrapped name."},"returns":{"registrarExpiry":"The expiry date of the new name on the .eth registrar, in seconds since the Unix epoch."}},"renew(uint256,uint256)":{"details":"Only callable by authorised controllers.","params":{"duration":"The number of seconds to renew the name for.","tokenId":"The hash of the label to register (eg, `keccak256('foo')`, for 'foo.eth')."},"returns":{"expires":"The expiry date of the name on the .eth registrar, in seconds since the Unix epoch."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"setChildFuses(bytes32,bytes32,uint32,uint64)":{"params":{"expiry":"When the name will expire in seconds since the Unix epoch","fuses":"Fuses to burn","labelhash":"Labelhash of the name, e.g. vitalik.xyz would be keccak256('vitalik')","parentNode":"Parent namehash of the name e.g. vitalik.xyz would be namehash('xyz')"}},"setFuses(bytes32,uint16)":{"params":{"node":"Namehash of the name","ownerControlledFuses":"Owner-controlled fuses to burn"},"returns":{"_0":"New fuses"}},"setMetadataService(address)":{"params":{"_metadataService":"The new metadata service"}},"setRecord(bytes32,address,address,uint64)":{"params":{"node":"Namehash of the name to set a record for","owner":"New owner in the registry","resolver":"Resolver contract","ttl":"Time to live in the registry"}},"setResolver(bytes32,address)":{"params":{"node":"namehash of the name","resolver":"the resolver contract"}},"setSubnodeOwner(bytes32,string,address,uint32,uint64)":{"params":{"expiry":"When the name will expire in seconds since the Unix epoch","fuses":"Initial fuses for the wrapped subdomain","label":"Label of the subdomain as a string","owner":"New owner in the wrapper","parentNode":"Parent namehash of the subdomain"},"returns":{"node":"Namehash of the subdomain"}},"setSubnodeRecord(bytes32,string,address,address,uint64,uint32,uint64)":{"params":{"expiry":"When the name will expire in seconds since the Unix epoch","fuses":"initial fuses for the wrapped subdomain","label":"label of the subdomain as a string","owner":"new owner in the wrapper","parentNode":"parent namehash of the subdomain","resolver":"resolver contract in the registry","ttl":"ttl in the registry"},"returns":{"node":"Namehash of the subdomain"}},"setTTL(bytes32,uint64)":{"params":{"node":"Namehash of the name","ttl":"TTL in the registry"}},"setUpgradeContract(address)":{"details":"The default value of upgradeContract is the 0 address. Use the 0 address at any time to make the contract not upgradable.","params":{"_upgradeAddress":"address of an upgraded contract"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unwrap(bytes32,bytes32,address)":{"details":"Can be called by the owner in the wrapper or an authorised caller in the wrapper","params":{"controller":"Sets the owner in the registry to this address","labelhash":"Labelhash of the name, e.g. vitalik.xyz would be keccak256('vitalik')","parentNode":"Parent namehash of the name e.g. vitalik.xyz would be namehash('xyz')"}},"unwrapETH2LD(bytes32,address,address)":{"details":"Can be called by the owner in the wrapper or an authorised caller in the wrapper","params":{"controller":"Sets the owner in the registry to this address","labelhash":"Labelhash of the .eth domain","registrant":"Sets the owner in the .eth registrar to this address"}},"upgrade(bytes32,string,address,address)":{"details":"Can be called by the owner or an authorised caller Requires upgraded Namewrapper to permit old Namewrapper to call `setSubnodeRecord` for all names","params":{"label":"Label as a string of the name to upgrade","parentNode":"Namehash of the parent name","resolver":"Resolver contract for this name","wrappedOwner":"Owner of the name in this contract"}},"upgradeETH2LD(string,address,address)":{"details":"Can be called by the owner of the name in this contract","params":{"label":"Label as a string of the .eth name to upgrade","wrappedOwner":"The owner of the wrapped name"}},"uri(uint256)":{"params":{"tokenId":"The id of the token"},"returns":{"_0":"string uri of the metadata service"}},"wrap(bytes,address,address)":{"details":"Can be called by the owner in the registry or an authorised caller in the registry","params":{"name":"The name to wrap, in DNS format","resolver":"Resolver contract","wrappedOwner":"Owner of the name in this contract"}},"wrapETH2LD(string,address,uint16,address)":{"details":"Can be called by the owner of the name on the .eth registrar or an authorised caller on the registrar","params":{"label":"Label as a string of the .eth domain to wrap","ownerControlledFuses":"Initial owner-controlled fuses to set","resolver":"Resolver contract address","wrappedOwner":"Owner of the name in this contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_2783":{"entryPoint":null,"id":2783,"parameterSlots":3,"returnSlots":0},"@_msgSender_844":{"entryPoint":null,"id":844,"parameterSlots":0,"returnSlots":1},"@_setData_1834":{"entryPoint":null,"id":1834,"parameterSlots":4,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":390,"id":111,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_contract$_ENS_$1122t_contract$_IBaseRegistrar_$985t_contract$_IMetadataService_$2253_fromMemory":{"entryPoint":495,"id":null,"parameterSlots":2,"returnSlots":3},"array_dataslot_bytes_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":661,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_bytes_storage":{"entryPoint":744,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":601,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":579,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_contract_ENS":{"entryPoint":470,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3466:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"64:86:21","statements":[{"body":{"nodeType":"YulBlock","src":"128:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"137:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"140:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"130:6:21"},"nodeType":"YulFunctionCall","src":"130:12:21"},"nodeType":"YulExpressionStatement","src":"130:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"87:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"98:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"113:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"118:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"109:3:21"},"nodeType":"YulFunctionCall","src":"109:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"122:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"105:3:21"},"nodeType":"YulFunctionCall","src":"105:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"94:3:21"},"nodeType":"YulFunctionCall","src":"94:31:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"84:2:21"},"nodeType":"YulFunctionCall","src":"84:42:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"77:6:21"},"nodeType":"YulFunctionCall","src":"77:50:21"},"nodeType":"YulIf","src":"74:70:21"}]},"name":"validator_revert_contract_ENS","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"53:5:21","type":""}],"src":"14:136:21"},{"body":{"nodeType":"YulBlock","src":"329:419:21","statements":[{"body":{"nodeType":"YulBlock","src":"375:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"384:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"387:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"377:6:21"},"nodeType":"YulFunctionCall","src":"377:12:21"},"nodeType":"YulExpressionStatement","src":"377:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"350:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"359:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"346:3:21"},"nodeType":"YulFunctionCall","src":"346:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"371:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"342:3:21"},"nodeType":"YulFunctionCall","src":"342:32:21"},"nodeType":"YulIf","src":"339:52:21"},{"nodeType":"YulVariableDeclaration","src":"400:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"419:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"413:5:21"},"nodeType":"YulFunctionCall","src":"413:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"404:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"468:5:21"}],"functionName":{"name":"validator_revert_contract_ENS","nodeType":"YulIdentifier","src":"438:29:21"},"nodeType":"YulFunctionCall","src":"438:36:21"},"nodeType":"YulExpressionStatement","src":"438:36:21"},{"nodeType":"YulAssignment","src":"483:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"493:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"483:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"507:40:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"532:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"543:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"528:3:21"},"nodeType":"YulFunctionCall","src":"528:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"522:5:21"},"nodeType":"YulFunctionCall","src":"522:25:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"511:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"586:7:21"}],"functionName":{"name":"validator_revert_contract_ENS","nodeType":"YulIdentifier","src":"556:29:21"},"nodeType":"YulFunctionCall","src":"556:38:21"},"nodeType":"YulExpressionStatement","src":"556:38:21"},{"nodeType":"YulAssignment","src":"603:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"613:7:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"603:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"629:40:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"654:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"665:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"650:3:21"},"nodeType":"YulFunctionCall","src":"650:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"644:5:21"},"nodeType":"YulFunctionCall","src":"644:25:21"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"633:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"708:7:21"}],"functionName":{"name":"validator_revert_contract_ENS","nodeType":"YulIdentifier","src":"678:29:21"},"nodeType":"YulFunctionCall","src":"678:38:21"},"nodeType":"YulExpressionStatement","src":"678:38:21"},{"nodeType":"YulAssignment","src":"725:17:21","value":{"name":"value_2","nodeType":"YulIdentifier","src":"735:7:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"725:6:21"}]}]},"name":"abi_decode_tuple_t_contract$_ENS_$1122t_contract$_IBaseRegistrar_$985t_contract$_IMetadataService_$2253_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"279:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"290:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"302:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"310:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"318:6:21","type":""}],"src":"155:593:21"},{"body":{"nodeType":"YulBlock","src":"785:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"802:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"809:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"814:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"805:3:21"},"nodeType":"YulFunctionCall","src":"805:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"795:6:21"},"nodeType":"YulFunctionCall","src":"795:31:21"},"nodeType":"YulExpressionStatement","src":"795:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"842:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"845:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"835:6:21"},"nodeType":"YulFunctionCall","src":"835:15:21"},"nodeType":"YulExpressionStatement","src":"835:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"866:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"869:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"859:6:21"},"nodeType":"YulFunctionCall","src":"859:15:21"},"nodeType":"YulExpressionStatement","src":"859:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"753:127:21"},{"body":{"nodeType":"YulBlock","src":"940:325:21","statements":[{"nodeType":"YulAssignment","src":"950:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"964:1:21","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"967:4:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"960:3:21"},"nodeType":"YulFunctionCall","src":"960:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"950:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"981:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1011:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"1017:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1007:3:21"},"nodeType":"YulFunctionCall","src":"1007:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"985:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1058:31:21","statements":[{"nodeType":"YulAssignment","src":"1060:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1074:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1082:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1070:3:21"},"nodeType":"YulFunctionCall","src":"1070:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1060:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1038:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1031:6:21"},"nodeType":"YulFunctionCall","src":"1031:26:21"},"nodeType":"YulIf","src":"1028:61:21"},{"body":{"nodeType":"YulBlock","src":"1148:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1169:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1176:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1181:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1172:3:21"},"nodeType":"YulFunctionCall","src":"1172:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1162:6:21"},"nodeType":"YulFunctionCall","src":"1162:31:21"},"nodeType":"YulExpressionStatement","src":"1162:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1213:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1216:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1206:6:21"},"nodeType":"YulFunctionCall","src":"1206:15:21"},"nodeType":"YulExpressionStatement","src":"1206:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1241:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1244:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1234:6:21"},"nodeType":"YulFunctionCall","src":"1234:15:21"},"nodeType":"YulExpressionStatement","src":"1234:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1104:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1127:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1135:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1124:2:21"},"nodeType":"YulFunctionCall","src":"1124:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1101:2:21"},"nodeType":"YulFunctionCall","src":"1101:38:21"},"nodeType":"YulIf","src":"1098:161:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"920:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"929:6:21","type":""}],"src":"885:380:21"},{"body":{"nodeType":"YulBlock","src":"1325:65:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1342:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"1345:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1335:6:21"},"nodeType":"YulFunctionCall","src":"1335:14:21"},"nodeType":"YulExpressionStatement","src":"1335:14:21"},{"nodeType":"YulAssignment","src":"1358:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1376:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1379:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1366:9:21"},"nodeType":"YulFunctionCall","src":"1366:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1358:4:21"}]}]},"name":"array_dataslot_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1308:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1316:4:21","type":""}],"src":"1270:120:21"},{"body":{"nodeType":"YulBlock","src":"1475:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"1508:425:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1522:11:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1532:1:21","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1526:2:21","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1553:2:21"},{"name":"array","nodeType":"YulIdentifier","src":"1557:5:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1546:6:21"},"nodeType":"YulFunctionCall","src":"1546:17:21"},"nodeType":"YulExpressionStatement","src":"1546:17:21"},{"nodeType":"YulVariableDeclaration","src":"1576:31:21","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1598:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"1602:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1588:9:21"},"nodeType":"YulFunctionCall","src":"1588:19:21"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"1580:4:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1620:57:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1643:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1653:1:21","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1660:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"1672:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1656:3:21"},"nodeType":"YulFunctionCall","src":"1656:19:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1649:3:21"},"nodeType":"YulFunctionCall","src":"1649:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1639:3:21"},"nodeType":"YulFunctionCall","src":"1639:38:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"1624:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1714:23:21","statements":[{"nodeType":"YulAssignment","src":"1716:19:21","value":{"name":"data","nodeType":"YulIdentifier","src":"1731:4:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"1716:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1696:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"1708:4:21","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1693:2:21"},"nodeType":"YulFunctionCall","src":"1693:20:21"},"nodeType":"YulIf","src":"1690:47:21"},{"nodeType":"YulVariableDeclaration","src":"1750:41:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1764:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1774:1:21","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1781:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1786:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1777:3:21"},"nodeType":"YulFunctionCall","src":"1777:12:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1770:3:21"},"nodeType":"YulFunctionCall","src":"1770:20:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1760:3:21"},"nodeType":"YulFunctionCall","src":"1760:31:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1754:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1804:24:21","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1817:11:21"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1808:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1902:21:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1911:5:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1918:2:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1904:6:21"},"nodeType":"YulFunctionCall","src":"1904:17:21"},"nodeType":"YulExpressionStatement","src":"1904:17:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1852:5:21"},{"name":"_2","nodeType":"YulIdentifier","src":"1859:2:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1849:2:21"},"nodeType":"YulFunctionCall","src":"1849:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1863:26:21","statements":[{"nodeType":"YulAssignment","src":"1865:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1878:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1885:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1874:3:21"},"nodeType":"YulFunctionCall","src":"1874:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1865:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"1845:3:21","statements":[]},"src":"1841:82:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1491:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1496:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1488:2:21"},"nodeType":"YulFunctionCall","src":"1488:11:21"},"nodeType":"YulIf","src":"1485:448:21"}]},"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"1447:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"1454:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"1459:10:21","type":""}],"src":"1395:544:21"},{"body":{"nodeType":"YulBlock","src":"2029:81:21","statements":[{"nodeType":"YulAssignment","src":"2039:65:21","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2054:4:21"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2072:1:21","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2075:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2068:3:21"},"nodeType":"YulFunctionCall","src":"2068:11:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2085:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2081:3:21"},"nodeType":"YulFunctionCall","src":"2081:6:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2064:3:21"},"nodeType":"YulFunctionCall","src":"2064:24:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2060:3:21"},"nodeType":"YulFunctionCall","src":"2060:29:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2050:3:21"},"nodeType":"YulFunctionCall","src":"2050:40:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2096:1:21","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2099:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2092:3:21"},"nodeType":"YulFunctionCall","src":"2092:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2047:2:21"},"nodeType":"YulFunctionCall","src":"2047:57:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2039:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2006:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"2012:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2020:4:21","type":""}],"src":"1944:166:21"},{"body":{"nodeType":"YulBlock","src":"2210:1254:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2220:24:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2240:3:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2234:5:21"},"nodeType":"YulFunctionCall","src":"2234:10:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2224:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2287:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2289:16:21"},"nodeType":"YulFunctionCall","src":"2289:18:21"},"nodeType":"YulExpressionStatement","src":"2289:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2259:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2275:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2279:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2271:3:21"},"nodeType":"YulFunctionCall","src":"2271:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"2283:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2267:3:21"},"nodeType":"YulFunctionCall","src":"2267:18:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2256:2:21"},"nodeType":"YulFunctionCall","src":"2256:30:21"},"nodeType":"YulIf","src":"2253:56:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2361:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2399:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2393:5:21"},"nodeType":"YulFunctionCall","src":"2393:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"2367:25:21"},"nodeType":"YulFunctionCall","src":"2367:38:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"2407:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"2318:42:21"},"nodeType":"YulFunctionCall","src":"2318:96:21"},"nodeType":"YulExpressionStatement","src":"2318:96:21"},{"nodeType":"YulVariableDeclaration","src":"2423:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2440:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"2427:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2450:23:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2469:4:21","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"2454:11:21","type":""}]},{"nodeType":"YulAssignment","src":"2482:24:21","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2495:11:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2482:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"2552:655:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2566:35:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2585:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2597:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2593:3:21"},"nodeType":"YulFunctionCall","src":"2593:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2581:3:21"},"nodeType":"YulFunctionCall","src":"2581:20:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"2570:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2614:48:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2657:4:21"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"2628:28:21"},"nodeType":"YulFunctionCall","src":"2628:34:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"2618:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2675:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2684:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2679:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2762:172:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2787:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2805:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2810:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2801:3:21"},"nodeType":"YulFunctionCall","src":"2801:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2795:5:21"},"nodeType":"YulFunctionCall","src":"2795:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2780:6:21"},"nodeType":"YulFunctionCall","src":"2780:42:21"},"nodeType":"YulExpressionStatement","src":"2780:42:21"},{"nodeType":"YulAssignment","src":"2839:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2853:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2861:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2849:3:21"},"nodeType":"YulFunctionCall","src":"2849:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2839:6:21"}]},{"nodeType":"YulAssignment","src":"2880:40:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2897:9:21"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2908:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2893:3:21"},"nodeType":"YulFunctionCall","src":"2893:27:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2880:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2709:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"2712:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2706:2:21"},"nodeType":"YulFunctionCall","src":"2706:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2721:28:21","statements":[{"nodeType":"YulAssignment","src":"2723:24:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2732:1:21"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2735:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2728:3:21"},"nodeType":"YulFunctionCall","src":"2728:19:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2723:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"2702:3:21","statements":[]},"src":"2698:236:21"},{"body":{"nodeType":"YulBlock","src":"2982:166:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3000:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3027:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3032:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3023:3:21"},"nodeType":"YulFunctionCall","src":"3023:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3017:5:21"},"nodeType":"YulFunctionCall","src":"3017:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3004:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3067:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3079:9:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3106:1:21","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3109:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3102:3:21"},"nodeType":"YulFunctionCall","src":"3102:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"3118:3:21","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3098:3:21"},"nodeType":"YulFunctionCall","src":"3098:24:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3128:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3124:3:21"},"nodeType":"YulFunctionCall","src":"3124:6:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3094:3:21"},"nodeType":"YulFunctionCall","src":"3094:37:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3090:3:21"},"nodeType":"YulFunctionCall","src":"3090:42:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3075:3:21"},"nodeType":"YulFunctionCall","src":"3075:58:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3060:6:21"},"nodeType":"YulFunctionCall","src":"3060:74:21"},"nodeType":"YulExpressionStatement","src":"3060:74:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2953:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"2962:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2950:2:21"},"nodeType":"YulFunctionCall","src":"2950:19:21"},"nodeType":"YulIf","src":"2947:201:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3168:4:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3182:1:21","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3185:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3178:3:21"},"nodeType":"YulFunctionCall","src":"3178:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"3194:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3174:3:21"},"nodeType":"YulFunctionCall","src":"3174:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3161:6:21"},"nodeType":"YulFunctionCall","src":"3161:36:21"},"nodeType":"YulExpressionStatement","src":"3161:36:21"}]},"nodeType":"YulCase","src":"2545:662:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2550:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3224:234:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3238:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3251:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3242:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3287:67:21","statements":[{"nodeType":"YulAssignment","src":"3305:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3324:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3329:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3320:3:21"},"nodeType":"YulFunctionCall","src":"3320:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3314:5:21"},"nodeType":"YulFunctionCall","src":"3314:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3305:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3268:6:21"},"nodeType":"YulIf","src":"3265:89:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3374:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3433:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"3440:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"3380:52:21"},"nodeType":"YulFunctionCall","src":"3380:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3367:6:21"},"nodeType":"YulFunctionCall","src":"3367:81:21"},"nodeType":"YulExpressionStatement","src":"3367:81:21"}]},"nodeType":"YulCase","src":"3216:242:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2525:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2533:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2522:2:21"},"nodeType":"YulFunctionCall","src":"2522:14:21"},"nodeType":"YulSwitch","src":"2515:943:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2195:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"2201:3:21","type":""}],"src":"2115:1349:21"}]},"contents":"{\n    { }\n    function validator_revert_contract_ENS(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_ENS_$1122t_contract$_IBaseRegistrar_$985t_contract$_IMetadataService_$2253_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_ENS(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_ENS(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_contract_ENS(value_2)\n        value2 := value_2\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_bytes_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c06040523480156200001157600080fd5b50604051620063b9380380620063b98339810160408190526200003491620001ef565b6200003f3362000186565b6001600160a01b0383811660805282811660a052600480546001600160a01b031916918316919091179055600163fffeffff60a01b03197fafa26c20e8b3d9a2853d642cfe1021dae26242ffedfac91c97aab212c1a4b93b8190557fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4955604080518082019091526001815260006020808301829052908052600590527f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc90620001099082620002e8565b50604080518082019091526005808252626cae8d60e31b6020808401919091527f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae600052527fd99130487705d6970718a0cee91984b61956f8a1db3482bba7e6bf0131adb01f906200017c9082620002e8565b50505050620003b4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114620001ec57600080fd5b50565b6000806000606084860312156200020557600080fd5b83516200021281620001d6565b60208501519093506200022581620001d6565b60408501519092506200023881620001d6565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200026e57607f821691505b6020821081036200028f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002e357600081815260208120601f850160051c81016020861015620002be5750805b601f850160051c820191505b81811015620002df57828155600101620002ca565b5050505b505050565b81516001600160401b0381111562000304576200030462000243565b6200031c8162000315845462000259565b8462000295565b602080601f8311600181146200035457600084156200033b5750858301515b600019600386901b1c1916600185901b178555620002df565b600085815260208120601f198616915b82811015620003855788860151825594840194600190910190840162000364565b5085821015620003a45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a051615f06620004b3600039600081816104ac01528181610aca01528181610bbd01528181611b9b01528181611c4901528181611d1001528181611e3201528181611ec10152818161213901528181612266015281816123b0015281816125aa0152818161264901526138280152600081816104f901528181610a5001528181610d4c01528181610f1901528181610fe401528181611440015281816122eb01528181612435015281816126f4015281816128eb01528181612a8801528181612fcb015281816130920152818161317401528181613206015281816135ce0152818161390b01528181613a2601526142860152615f066000f3fe608060405234801561001057600080fd5b50600436106102fe5760003560e01c80636e5d6ad21161019c578063cf408823116100ee578063eb8ae53011610097578063f242432a11610071578063f242432a1461077d578063f2fde38b14610790578063fd0cd0d9146107a357600080fd5b8063eb8ae53014610737578063ed70554d1461074a578063ee7eba781461076a57600080fd5b8063e0dba60f116100c8578063e0dba60f146106d5578063e72bf00f146106e8578063e985e9c5146106fb57600080fd5b8063cf4088231461068c578063d8c9921a1461069f578063da8c229e146106b257600080fd5b8063a22cb46511610150578063b6bcad261161012a578063b6bcad2614610653578063c475abff14610666578063c658e0861461067957600080fd5b8063a22cb4651461061a578063a40149821461062d578063adf4960a1461064057600080fd5b80638b4dfa75116101815780638b4dfa75146105e35780638cf8b41e146105f65780638da5cb5b1461060957600080fd5b80636e5d6ad2146105af578063715018a6146105db57600080fd5b806324c1af4411610255578063402906fc1161020957806353095467116101e357806353095467146105765780635d3590d5146105895780636352211e1461059c57600080fd5b8063402906fc1461051b57806341415eab146105435780634e1273f41461055657600080fd5b80632eb2c2d61161023a5780632eb2c2d6146104ce57806333c69ea9146104e15780633f15457f146104f457600080fd5b806324c1af44146104945780632b20e397146104a757600080fd5b806314ab9038116102b75780631896f70a116102915780631896f70a146104435780631f4e15041461045657806320c38e2b1461048157600080fd5b806314ab9038146103ef578063150b7a02146104045780631534e1771461043057600080fd5b806301ffc9a7116102e857806301ffc9a71461037057806306fdde03146103935780630e89341c146103dc57600080fd5b8062fdd58e146103035780630178fe3f14610329575b600080fd5b610316610311366004614cd5565b6107b6565b6040519081526020015b60405180910390f35b61033c610337366004614d01565b610875565b604080516001600160a01b03909416845263ffffffff909216602084015267ffffffffffffffff1690820152606001610320565b61038361037e366004614d30565b6108a5565b6040519015158152602001610320565b6103cf6040518060400160405280600b81526020017f4e616d655772617070657200000000000000000000000000000000000000000081525081565b6040516103209190614d9d565b6103cf6103ea366004614d01565b610917565b6104026103fd366004614dcd565b6109a4565b005b610417610412366004614e42565b610abd565b6040516001600160e01b03199091168152602001610320565b61040261043e366004614eb5565b610c5e565b610402610451366004614ed2565b610ca0565b600654610469906001600160a01b031681565b6040516001600160a01b039091168152602001610320565b6103cf61048f366004614d01565b610d7b565b6103166104a2366004614fdd565b610e15565b6104697f000000000000000000000000000000000000000000000000000000000000000081565b6104026104dc366004615105565b61105b565b6104026104ef3660046151b3565b6113c9565b6104697f000000000000000000000000000000000000000000000000000000000000000081565b61052e61052936600461520b565b6115d7565b60405163ffffffff9091168152602001610320565b610383610551366004614ed2565b61167f565b61056961056436600461522e565b611711565b604051610320919061532c565b600454610469906001600160a01b031681565b61040261059736600461533f565b61184f565b6104696105aa366004614d01565b6118e9565b6105c26105bd366004615380565b6118f4565b60405167ffffffffffffffff9091168152602001610320565b610402611a26565b6104026105f13660046153b5565b611a3a565b6104026106043660046153f7565b611bfd565b6000546001600160a01b0316610469565b610402610628366004615480565b611f74565b61031661063b3660046154ae565b61205e565b61038361064e36600461552f565b6121ff565b610402610661366004614eb5565b612224565b610316610674366004615552565b612494565b610316610687366004615574565b6127b9565b61040261069a3660046155e7565b6129c6565b6104026106ad36600461561f565b612b98565b6103836106c0366004614eb5565b60036020526000908152604090205460ff1681565b6104026106e3366004615480565b612cda565b6104026106f636600461564d565b612d42565b6103836107093660046156b5565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b61040261074536600461564d565b612e7e565b610316610758366004614d01565b60016020526000908152604090205481565b6104026107783660046156e3565b6132ad565b61040261078b366004615739565b6133ce565b61040261079e366004614eb5565b613503565b6103836107b1366004614d01565b613590565b60006001600160a01b0383166108395760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000610844836118e9565b9050836001600160a01b0316816001600160a01b03160361086957600191505061086f565b60009150505b92915050565b60008181526001602052604090205460a081901c60c082901c610899838383613649565b90959094509092509050565b60006001600160e01b031982167f81b4e24c00000000000000000000000000000000000000000000000000000000148061090857506001600160e01b031982167f150b7a0200000000000000000000000000000000000000000000000000000000145b8061086f575061086f8261369d565b600480546040517f0e89341c0000000000000000000000000000000000000000000000000000000081529182018390526060916001600160a01b0390911690630e89341c90602401600060405180830381865afa15801561097c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261086f91908101906157a2565b816109af813361167f565b6109d55760405163168ab55d60e31b815260048101829052336024820152604401610830565b82601060006109e383610875565b5091505063ffffffff8282161615610a115760405163a2a7201360e01b815260048101849052602401610830565b6040517f14ab90380000000000000000000000000000000000000000000000000000000081526004810187905267ffffffffffffffff861660248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906314ab9038906044015b600060405180830381600087803b158015610a9d57600080fd5b505af1158015610ab1573d6000803e3d6000fd5b50505050505050505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b21576040517f1931a53800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808080610b328688018861581a565b83516020850120939750919550935091508890808214610b88576040517fc65c3ccc0000000000000000000000000000000000000000000000000000000081526004810182905260248101839052604401610830565b6040517f28ed4f6c000000000000000000000000000000000000000000000000000000008152600481018390523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906328ed4f6c90604401600060405180830381600087803b158015610c0957600080fd5b505af1158015610c1d573d6000803e3d6000fd5b50505050610c2d86868686613738565b507f150b7a02000000000000000000000000000000000000000000000000000000009b9a5050505050505050505050565b610c66613971565b600480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b81610cab813361167f565b610cd15760405163168ab55d60e31b815260048101829052336024820152604401610830565b8260086000610cdf83610875565b5091505063ffffffff8282161615610d0d5760405163a2a7201360e01b815260048101849052602401610830565b6040517f1896f70a000000000000000000000000000000000000000000000000000000008152600481018790526001600160a01b0386811660248301527f00000000000000000000000000000000000000000000000000000000000000001690631896f70a90604401610a83565b60056020526000908152604090208054610d9490615882565b80601f0160208091040260200160405190810160405280929190818152602001828054610dc090615882565b8015610e0d5780601f10610de257610100808354040283529160200191610e0d565b820191906000526020600020905b815481529060010190602001808311610df057829003601f168201915b505050505081565b600087610e22813361167f565b610e485760405163168ab55d60e31b815260048101829052336024820152604401610830565b87516020890120610e808a82604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b9250610e8c8a846139cb565b610e968386613b0a565b610ea18a848b613b3d565b50610eae8a848787613c0a565b9350610eb983613590565b610f88576040517f5ef2c7f0000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290523060448201526001600160a01b03888116606483015267ffffffffffffffff881660848301527f00000000000000000000000000000000000000000000000000000000000000001690635ef2c7f09060a401600060405180830381600087803b158015610f5d57600080fd5b505af1158015610f71573d6000803e3d6000fd5b50505050610f838a848b8b8989613c50565b61104e565b6040517f5ef2c7f0000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290523060448201526001600160a01b03888116606483015267ffffffffffffffff881660848301527f00000000000000000000000000000000000000000000000000000000000000001690635ef2c7f09060a401600060405180830381600087803b15801561102857600080fd5b505af115801561103c573d6000803e3d6000fd5b5050505061104e8a848b8b8989613c7e565b5050979650505050505050565b81518351146110d25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610830565b6001600160a01b03841661114e5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610830565b6001600160a01b03851633148061118857506001600160a01b038516600090815260026020908152604080832033845290915290205460ff165b6111fa5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610830565b60005b835181101561135c57600084828151811061121a5761121a6158bc565b602002602001015190506000848381518110611238576112386158bc565b60200260200101519050600080600061125085610875565b925092509250611261858383613d42565b5083600114801561128357508a6001600160a01b0316836001600160a01b0316145b6112f55760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152608401610830565b60008581526001602052604090206001600160a01b038b1663ffffffff60a01b60a085901b16177fffffffffffffffff00000000000000000000000000000000000000000000000060c084901b16179055505050505080611355906158e8565b90506111fd565b50836001600160a01b0316856001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516113ac929190615902565b60405180910390a46113c2338686868686613e19565b5050505050565b604080516020808201879052818301869052825180830384018152606090920190925280519101206113fb8184613b0a565b6000808061140884610875565b919450925090506001600160a01b03831615806114b757506040516302571be360e01b81526004810185905230906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906302571be390602401602060405180830381865afa158015611487573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ab9190615930565b6001600160a01b031614155b156114ee576040517f5374b59900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806114fa8a610875565b90935091508a905061153b57611510863361167f565b6115365760405163168ab55d60e31b815260048101879052336024820152604401610830565b61156b565b6115458a3361167f565b61156b5760405163168ab55d60e31b815260048101879052336024820152604401610830565b611576868984614005565b611581878483614040565b9650620100008416158015906115a557508363ffffffff1688851763ffffffff1614155b156115c65760405163a2a7201360e01b815260048101879052602401610830565b96831796610ab186868a868b61408a565b6000826115e4813361167f565b61160a5760405163168ab55d60e31b815260048101829052336024820152604401610830565b836002600061161883610875565b5091505063ffffffff82821616156116465760405163a2a7201360e01b815260048101849052602401610830565b600080806116538a610875565b92509250925061166c8a84848c61ffff1617848561408a565b505061ffff909616979650505050505050565b600080808061168d86610875565b925092509250846001600160a01b0316836001600160a01b031614806116d857506001600160a01b0380841660009081526002602090815260408083209389168352929052205460ff165b8015611707575062020000821615806117075750426116fa6276a7008361594d565b67ffffffffffffffff1610155b9695505050505050565b6060815183511461178a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610830565b6000835167ffffffffffffffff8111156117a6576117a6614f02565b6040519080825280602002602001820160405280156117cf578160200160208202803683370190505b50905060005b84518110156118475761181a8582815181106117f3576117f36158bc565b602002602001015185838151811061180d5761180d6158bc565b60200260200101516107b6565b82828151811061182c5761182c6158bc565b6020908102919091010152611840816158e8565b90506117d5565b509392505050565b611857613971565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af11580156118bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e39190615975565b50505050565b600061086f82614134565b60408051602080820186905281830185905282518083038401815260609092019092528051910120600090600061192b863361167f565b9050801580156119425750611940823361167f565b155b156119695760405163168ab55d60e31b815260048101839052336024820152604401610830565b6000808061197685610875565b9250925092508315801561198d5750620400008216155b156119ae5760405163a2a7201360e01b815260048101869052602401610830565b60006119b98a610875565b925050506119c8888383614040565b97506119d68685858b61414a565b60405167ffffffffffffffff8916815286907ff675815a0817338f93a7da433f6bd5f5542f1029b11b455191ac96c7f6a9b1329060200160405180910390a28796505050505050505b9392505050565b611a2e613971565b611a3860006141aa565b565b604080517f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae60208083019190915281830186905282518083038401815260609092019092528051910120611a8e813361167f565b611ab45760405163168ab55d60e31b815260048101829052336024820152604401610830565b306001600160a01b03841603611b01576040517f5949361a0000000000000000000000000000000000000000000000000000000081526001600160a01b0384166004820152602401610830565b604080517f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae60208083019190915281830187905282518083038401815260609092019092528051910120611b56905b83614212565b6040517f42842e0e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038481166024830152604482018690527f000000000000000000000000000000000000000000000000000000000000000016906342842e0e90606401600060405180830381600087803b158015611bdf57600080fd5b505af1158015611bf3573d6000803e3d6000fd5b5050505050505050565b60008585604051611c0f929190615992565b6040519081900381207f6352211e0000000000000000000000000000000000000000000000000000000082526004820181905291506000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636352211e90602401602060405180830381865afa158015611c98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cbc9190615930565b90506001600160a01b0381163314801590611d7d57506040517fe985e9c50000000000000000000000000000000000000000000000000000000081526001600160a01b0382811660048301523360248301527f0000000000000000000000000000000000000000000000000000000000000000169063e985e9c590604401602060405180830381865afa158015611d57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d7b9190615975565b155b15611ded57604080517f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae6020808301919091528183018590528251808303840181526060830193849052805191012063168ab55d60e31b909252606481019190915233608482015260a401610830565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b038281166004830152306024830152604482018490527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90606401600060405180830381600087803b158015611e7657600080fd5b505af1158015611e8a573d6000803e3d6000fd5b50506040517f28ed4f6c000000000000000000000000000000000000000000000000000000008152600481018590523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692506328ed4f6c9150604401600060405180830381600087803b158015611f0f57600080fd5b505af1158015611f23573d6000803e3d6000fd5b50505050611f6b87878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250899250889150879050613738565b50505050505050565b6001600160a01b0382163303611ff25760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610830565b3360008181526002602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b3360009081526003602052604081205460ff166120e35760405162461bcd60e51b815260206004820152602860248201527f436f6e74726f6c6c61626c653a2043616c6c6572206973206e6f74206120636f60448201527f6e74726f6c6c65720000000000000000000000000000000000000000000000006064820152608401610830565b600087876040516120f5929190615992565b6040519081900381207ffca247ac000000000000000000000000000000000000000000000000000000008252600482018190523060248301526044820187905291507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063fca247ac906064016020604051808303816000875af115801561218a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121ae91906159a2565b91506121f488888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a9250879150889050613738565b509695505050505050565b60008061220b84610875565b50841663ffffffff908116908516149250505092915050565b61222c613971565b6006546001600160a01b03161561234c5760065460405163a22cb46560e01b81526001600160a01b039182166004820152600060248201527f00000000000000000000000000000000000000000000000000000000000000009091169063a22cb46590604401600060405180830381600087803b1580156122ac57600080fd5b505af11580156122c0573d6000803e3d6000fd5b505060065460405163a22cb46560e01b81526001600160a01b039182166004820152600060248201527f0000000000000000000000000000000000000000000000000000000000000000909116925063a22cb4659150604401600060405180830381600087803b15801561233357600080fd5b505af1158015612347573d6000803e3d6000fd5b505050505b600680547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038316908117909155156124915760065460405163a22cb46560e01b81526001600160a01b039182166004820152600160248201527f00000000000000000000000000000000000000000000000000000000000000009091169063a22cb46590604401600060405180830381600087803b1580156123f657600080fd5b505af115801561240a573d6000803e3d6000fd5b505060065460405163a22cb46560e01b81526001600160a01b039182166004820152600160248201527f0000000000000000000000000000000000000000000000000000000000000000909116925063a22cb4659150604401600060405180830381600087803b15801561247d57600080fd5b505af11580156113c2573d6000803e3d6000fd5b50565b3360009081526003602052604081205460ff166125195760405162461bcd60e51b815260206004820152602860248201527f436f6e74726f6c6c61626c653a2043616c6c6572206973206e6f74206120636f60448201527f6e74726f6c6c65720000000000000000000000000000000000000000000000006064820152608401610830565b604080517f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae602080830191909152818301869052825180830384018152606090920190925280519101206000906040517fc475abff00000000000000000000000000000000000000000000000000000000815260048101869052602481018590529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c475abff906044016020604051808303816000875af11580156125f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061261791906159a2565b6040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018790529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636352211e90602401602060405180830381865afa9250505080156126b4575060408051601f3d908101601f191682019092526126b191810190615930565b60015b6126c157915061086f9050565b6001600160a01b0381163014158061276b57506040516302571be360e01b81526004810184905230906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906302571be390602401602060405180830381865afa15801561273b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061275f9190615930565b6001600160a01b031614155b1561277a5750915061086f9050565b50600061278a6276a700836159bb565b60008481526001602052604090205490915060a081901c6127ad8583838661414a565b50919695505050505050565b6000866127c6813361167f565b6127ec5760405163168ab55d60e31b815260048101829052336024820152604401610830565b600087876040516127fe929190615992565b604051809103902090506128398982604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b925061284589846139cb565b61284f8386613b0a565b60006128928a858b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250613b3d92505050565b90506128a08a858888613c0a565b94506128ab84613590565b612973576040517f06ab5923000000000000000000000000000000000000000000000000000000008152600481018b9052602481018390523060448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906306ab5923906064016020604051808303816000875af115801561293c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061296091906159a2565b5061296e848289898961431d565b6129b9565b6129b98a858b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508d92508c91508b9050613c7e565b5050509695505050505050565b836129d1813361167f565b6129f75760405163168ab55d60e31b815260048101829052336024820152604401610830565b84601c6000612a0583610875565b5091505063ffffffff8282161615612a335760405163a2a7201360e01b815260048101849052602401610830565b6040517fcf408823000000000000000000000000000000000000000000000000000000008152600481018990523060248201526001600160a01b03878116604483015267ffffffffffffffff871660648301527f0000000000000000000000000000000000000000000000000000000000000000169063cf40882390608401600060405180830381600087803b158015612acc57600080fd5b505af1158015612ae0573d6000803e3d6000fd5b5050506001600160a01b0388169050612b60576000612afe89610875565b509150506201ffff1962020000821601612b4f576040517f5949361a0000000000000000000000000000000000000000000000000000000081526001600160a01b0389166004820152602401610830565b612b5a896000614212565b50611bf3565b6000612b6b896118e9565b9050612b8d81898b60001c60016040518060200160405280600081525061435f565b505050505050505050565b60408051602080820186905281830185905282518083038401815260609092019092528051910120612bca813361167f565b612bf05760405163168ab55d60e31b815260048101829052336024820152604401610830565b7f6c32148f748aba23997146d7fe89e962e3cc30271290fb96f5f4337756c03b528401612c49576040517f615a470300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0382161580612c6757506001600160a01b03821630145b15612ca9576040517f5949361a0000000000000000000000000000000000000000000000000000000081526001600160a01b0383166004820152602401610830565b604080516020808201879052818301869052825180830384018152606090920190925280519101206118e390611b50565b612ce2613971565b6001600160a01b038216600081815260036020908152604091829020805460ff191685151590811790915591519182527f4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf8791015b60405180910390a25050565b60008484604051612d54929190615992565b60405190819003902090506000612db27f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae83604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b90506000806000612dc2846144dd565b925092509250826001600160a01b0316876001600160a01b031614612dee57612dec848383613d42565b505b6006546040517ff9547a9e0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063f9547a9e90612e41908c908c908c90889088908e90600401615a07565b600060405180830381600087803b158015612e5b57600080fd5b505af1158015612e6f573d6000803e3d6000fd5b50505050505050505050505050565b600080612ec5600087878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092939250506145769050565b915091506000612f0e8288888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929392505061462d9050565b604080516020808201849052818301879052825180830384018152606090920190925280519101209091506000906000818152600560205260409020909150612f58888a83615aa8565b507f6c32148f748aba23997146d7fe89e962e3cc30271290fb96f5f4337756c03b528201612fb2576040517f615a470300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040516302571be360e01b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906302571be390602401602060405180830381865afa15801561301a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061303e9190615930565b90506001600160a01b03811633148015906130ff57506040517fe985e9c50000000000000000000000000000000000000000000000000000000081526001600160a01b0382811660048301523360248301527f0000000000000000000000000000000000000000000000000000000000000000169063e985e9c590604401602060405180830381865afa1580156130d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130fd9190615975565b155b156131265760405163168ab55d60e31b815260048101839052336024820152604401610830565b6001600160a01b038616156131d1576040517f1896f70a000000000000000000000000000000000000000000000000000000008152600481018390526001600160a01b0387811660248301527f00000000000000000000000000000000000000000000000000000000000000001690631896f70a90604401600060405180830381600087803b1580156131b857600080fd5b505af11580156131cc573d6000803e3d6000fd5b505050505b6040517f5b0fc9c3000000000000000000000000000000000000000000000000000000008152600481018390523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635b0fc9c390604401600060405180830381600087803b15801561325257600080fd5b505af1158015613266573d6000803e3d6000fd5b50505050612b8d828a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052508d9350915081905061431d565b600084846040516132bf929190615992565b6040518091039020905060006132fc8783604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b9050600080600061330c846144dd565b925092509250826001600160a01b0316876001600160a01b03161461333857613336848383613d42565b505b6006546040517f24c1af440000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906324c1af4490613390908d908d908d908d908d906000908b908b90600401615b68565b600060405180830381600087803b1580156133aa57600080fd5b505af11580156133be573d6000803e3d6000fd5b5050505050505050505050505050565b6001600160a01b03841661344a5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610830565b6001600160a01b03851633148061348457506001600160a01b038516600090815260026020908152604080832033845290915290205460ff165b6134f65760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610830565b6113c2858585858561435f565b61350b613971565b6001600160a01b0381166135875760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610830565b612491816141aa565b60008061359c836118e9565b6001600160a01b03161415801561086f57506040516302571be360e01b81526004810183905230906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906302571be390602401602060405180830381865afa158015613615573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136399190615930565b6001600160a01b03161492915050565b600080428367ffffffffffffffff161015613694577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00006201000085160161368f57600094505b600093505b50929391925050565b60006001600160e01b031982167fd9b67a2600000000000000000000000000000000000000000000000000000000148061370057506001600160e01b031982167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061086f57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b031983161461086f565b8351602085012060006137927f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae83604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b905060006137d5876040518060400160405280600581526020017f03657468000000000000000000000000000000000000000000000000000000008152506146ec565b60008381526005602052604090209091506137f08282615bcb565b506040517fd6e4fa86000000000000000000000000000000000000000000000000000000008152600481018490526000906276a700907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d6e4fa8690602401602060405180830381865afa158015613877573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061389b91906159a2565b6138a591906159bb565b90506138bd8383896203000061ffff8b16178561431d565b6001600160a01b03851615611bf3576040517f1896f70a000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b0386811660248301527f00000000000000000000000000000000000000000000000000000000000000001690631896f70a90604401600060405180830381600087803b15801561394f57600080fd5b505af1158015613963573d6000803e3d6000fd5b505050505050505050505050565b6000546001600160a01b03163314611a385760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610830565b600080806139d884610875565b919450925090504267ffffffffffffffff821610808015613a9c57506001600160a01b0384161580613a9c57506040516302571be360e01b8152600481018690526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906302571be390602401602060405180830381865afa158015613a6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a919190615930565b6001600160a01b0316145b15613adb576000613aac87610875565b509150506020811615613ad55760405163a2a7201360e01b815260048101879052602401610830565b50613b02565b62010000831615613b025760405163a2a7201360e01b815260048101869052602401610830565b505050505050565b63fffdffff81811763ffffffff1614613b395760405163a2a7201360e01b815260048101839052602401610830565b5050565b60606000613be683600560008881526020019081526020016000208054613b6390615882565b80601f0160208091040260200160405190810160405280929190818152602001828054613b8f90615882565b8015613bdc5780601f10613bb157610100808354040283529160200191613bdc565b820191906000526020600020905b815481529060010190602001808311613bbf57829003601f168201915b50505050506146ec565b6000858152600560205260409020909150613c018282615bcb565b50949350505050565b600080613c1685610875565b92505050600080613c298860001c610875565b9250925050613c39878784614005565b613c44858483614040565b98975050505050505050565b60008681526005602052604081208054613c6f918791613b6390615882565b9050611f6b868286868661431d565b60008080613c8b88610875565b9250925092506000613cb588600560008d81526020019081526020016000208054613b6390615882565b60008a8152600560205260409020805491925090613cd290615882565b9050600003613cf5576000898152600560205260409020613cf38282615bcb565b505b613d048985888617858961408a565b6001600160a01b038716613d2257613d1d896000614212565b610ab1565b610ab184888b60001c60016040518060200160405280600081525061435f565b60006201ffff1962020000841601613d6457613d616276a7008361594d565b91505b428267ffffffffffffffff161015613df45762010000831615613def5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152608401610830565b611a1f565b6004831615611a1f5760405163a2a7201360e01b815260048101859052602401610830565b6001600160a01b0384163b15613b02576040517fbc197c810000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063bc197c8190613e769089908990889088908890600401615c8b565b6020604051808303816000875af1925050508015613eb1575060408051601f3d908101601f19168201909252613eae91810190615cdd565b60015b613f6657613ebd615cfa565b806308c379a003613ef65750613ed1615d16565b80613edc5750613ef8565b8060405162461bcd60e51b81526004016108309190614d9d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610830565b6001600160e01b031981167fbc197c810000000000000000000000000000000000000000000000000000000014611f6b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e730000000000000000000000000000000000000000000000006064820152608401610830565b63ffff0000821615801590600183161590829061401f5750805b156113c25760405163a2a7201360e01b815260048101869052602401610830565b60008167ffffffffffffffff168467ffffffffffffffff161115614062578193505b8267ffffffffffffffff168467ffffffffffffffff161015614082578293505b509192915050565b6140968585858461414a565b60405163ffffffff8416815285907f39873f00c80f4f94b7bd1594aebcf650f003545b74824d57ddf4939e3ff3a34b9060200160405180910390a28167ffffffffffffffff168167ffffffffffffffff1611156113c25760405167ffffffffffffffff8216815285907ff675815a0817338f93a7da433f6bd5f5542f1029b11b455191ac96c7f6a9b132906020015b60405180910390a25050505050565b60008061414083610875565b5090949350505050565b6141548483614795565b60008481526001602052604090206001600160a01b03841663ffffffff60a01b60a085901b16177fffffffffffffffff00000000000000000000000000000000000000000000000060c084901b161790556118e3565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61421d8260016121ff565b1561423e5760405163a2a7201360e01b815260048101839052602401610830565b614247826147ce565b6040517f5b0fc9c3000000000000000000000000000000000000000000000000000000008152600481018390526001600160a01b0382811660248301527f00000000000000000000000000000000000000000000000000000000000000001690635b0fc9c390604401600060405180830381600087803b1580156142ca57600080fd5b505af11580156142de573d6000803e3d6000fd5b50506040516001600160a01b03841681528492507fee2ba1195c65bcf218a83d874335c6bf9d9067b4c672f3c3bf16cf40de7586c49150602001612d36565b61432985848484614890565b847f8ce7013e8abebc55c3890a68f5a27c67c3f7efa64e584de5fb22363c606fd340858585856040516141259493929190615dbe565b600080600061436d86610875565b92509250925061437e868383613d42565b508460011480156143a05750876001600160a01b0316836001600160a01b0316145b6144125760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152608401610830565b866001600160a01b0316836001600160a01b031603614433575050506113c2565b60008681526001602052604090206001600160a01b03881663ffffffff60a01b60a085901b16177fffffffffffffffff00000000000000000000000000000000000000000000000060c084901b1617905560408051878152602081018790526001600160a01b03808a1692908b169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611bf3338989898989614904565b600654600090819081906001600160a01b0316614526576040517f24c1d6d400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b614530843361167f565b6145565760405163168ab55d60e31b815260048101859052336024820152604401610830565b61455f84610875565b9194509250905061456f846147ce565b9193909250565b600080835183106145c95760405162461bcd60e51b815260206004820152601e60248201527f726561644c6162656c3a20496e646578206f7574206f6620626f756e647300006044820152606401610830565b60008484815181106145dd576145dd6158bc565b016020015160f81c9050801561460957614602856145fc866001615e06565b83614a47565b925061460e565b600092505b6146188185615e06565b614623906001615e06565b9150509250929050565b600080600061463c8585614576565b9092509050816146ae57600185516146549190615e19565b84146146a25760405162461bcd60e51b815260206004820152601d60248201527f6e616d65686173683a204a756e6b20617420656e64206f66206e616d650000006044820152606401610830565b506000915061086f9050565b6146b8858261462d565b6040805160208101929092528101839052606001604051602081830303815290604052805190602001209250505092915050565b606060018351101561472a576040517f280dacb600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60ff8351111561476857826040517fe3ba295f0000000000000000000000000000000000000000000000000000000081526004016108309190614d9d565b8251838360405160200161477e93929190615e2c565b604051602081830303815290604052905092915050565b61ffff8116158015906147ad57506201000181811614155b15613b395760405163a2a7201360e01b815260048101839052602401610830565b60008181526001602052604090205460a081901c60c082901c6147f2838383613649565b600086815260016020526040902063ffffffff60a01b60a083901b167fffffffffffffffff00000000000000000000000000000000000000000000000060c086901b1617905592506148419050565b60408051858152600160208201526000916001600160a01b0386169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a450505050565b61489a8483614795565b6000848152600160205260409020546001600160a01b038116156148f8576148c1856147ce565b6040516000815285907fee2ba1195c65bcf218a83d874335c6bf9d9067b4c672f3c3bf16cf40de7586c49060200160405180910390a25b6113c285858585614a6b565b6001600160a01b0384163b15613b02576040517ff23a6e610000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063f23a6e61906149619089908990889088908890600401615e8d565b6020604051808303816000875af192505050801561499c575060408051601f3d908101601f1916820190925261499991810190615cdd565b60015b6149a857613ebd615cfa565b6001600160e01b031981167ff23a6e610000000000000000000000000000000000000000000000000000000014611f6b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e730000000000000000000000000000000000000000000000006064820152608401610830565b8251600090614a568385615e06565b1115614a6157600080fd5b5091016020012090565b8360008080614a7984610875565b9194509250905063ffff0000821667ffffffffffffffff8087169083161115614aa0578195505b428267ffffffffffffffff1610614ab657958617955b6001600160a01b03841615614b0d5760405162461bcd60e51b815260206004820152601f60248201527f455243313135353a206d696e74206f66206578697374696e6720746f6b656e006044820152606401610830565b6001600160a01b038816614b895760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610830565b306001600160a01b03891603614c075760405162461bcd60e51b815260206004820152603460248201527f455243313135353a206e65774f776e65722063616e6e6f74206265207468652060448201527f4e616d655772617070657220636f6e74726163740000000000000000000000006064820152608401610830565b60008581526001602052604090206001600160a01b03891663ffffffff60a01b60a08a901b16177fffffffffffffffff00000000000000000000000000000000000000000000000060c089901b1617905560408051868152600160208201526001600160a01b038a169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4612b8d3360008a88600160405180602001604052806000815250614904565b6001600160a01b038116811461249157600080fd5b60008060408385031215614ce857600080fd5b8235614cf381614cc0565b946020939093013593505050565b600060208284031215614d1357600080fd5b5035919050565b6001600160e01b03198116811461249157600080fd5b600060208284031215614d4257600080fd5b8135611a1f81614d1a565b60005b83811015614d68578181015183820152602001614d50565b50506000910152565b60008151808452614d89816020860160208601614d4d565b601f01601f19169290920160200192915050565b602081526000611a1f6020830184614d71565b803567ffffffffffffffff81168114614dc857600080fd5b919050565b60008060408385031215614de057600080fd5b82359150614df060208401614db0565b90509250929050565b60008083601f840112614e0b57600080fd5b50813567ffffffffffffffff811115614e2357600080fd5b602083019150836020828501011115614e3b57600080fd5b9250929050565b600080600080600060808688031215614e5a57600080fd5b8535614e6581614cc0565b94506020860135614e7581614cc0565b935060408601359250606086013567ffffffffffffffff811115614e9857600080fd5b614ea488828901614df9565b969995985093965092949392505050565b600060208284031215614ec757600080fd5b8135611a1f81614cc0565b60008060408385031215614ee557600080fd5b823591506020830135614ef781614cc0565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715614f3e57614f3e614f02565b6040525050565b600067ffffffffffffffff821115614f5f57614f5f614f02565b50601f01601f191660200190565b600082601f830112614f7e57600080fd5b8135614f8981614f45565b604051614f968282614f18565b828152856020848701011115614fab57600080fd5b82602086016020830137600092810160200192909252509392505050565b803563ffffffff81168114614dc857600080fd5b600080600080600080600060e0888a031215614ff857600080fd5b87359650602088013567ffffffffffffffff81111561501657600080fd5b6150228a828b01614f6d565b965050604088013561503381614cc0565b9450606088013561504381614cc0565b935061505160808901614db0565b925061505f60a08901614fc9565b915061506d60c08901614db0565b905092959891949750929550565b600067ffffffffffffffff82111561509557615095614f02565b5060051b60200190565b600082601f8301126150b057600080fd5b813560206150bd8261507b565b6040516150ca8282614f18565b83815260059390931b85018201928281019150868411156150ea57600080fd5b8286015b848110156121f457803583529183019183016150ee565b600080600080600060a0868803121561511d57600080fd5b853561512881614cc0565b9450602086013561513881614cc0565b9350604086013567ffffffffffffffff8082111561515557600080fd5b61516189838a0161509f565b9450606088013591508082111561517757600080fd5b61518389838a0161509f565b9350608088013591508082111561519957600080fd5b506151a688828901614f6d565b9150509295509295909350565b600080600080608085870312156151c957600080fd5b84359350602085013592506151e060408601614fc9565b91506151ee60608601614db0565b905092959194509250565b803561ffff81168114614dc857600080fd5b6000806040838503121561521e57600080fd5b82359150614df0602084016151f9565b6000806040838503121561524157600080fd5b823567ffffffffffffffff8082111561525957600080fd5b818501915085601f83011261526d57600080fd5b8135602061527a8261507b565b6040516152878282614f18565b83815260059390931b85018201928281019150898411156152a757600080fd5b948201945b838610156152ce5785356152bf81614cc0565b825294820194908201906152ac565b965050860135925050808211156152e457600080fd5b506146238582860161509f565b600081518084526020808501945080840160005b8381101561532157815187529582019590820190600101615305565b509495945050505050565b602081526000611a1f60208301846152f1565b60008060006060848603121561535457600080fd5b833561535f81614cc0565b9250602084013561536f81614cc0565b929592945050506040919091013590565b60008060006060848603121561539557600080fd5b83359250602084013591506153ac60408501614db0565b90509250925092565b6000806000606084860312156153ca57600080fd5b8335925060208401356153dc81614cc0565b915060408401356153ec81614cc0565b809150509250925092565b60008060008060006080868803121561540f57600080fd5b853567ffffffffffffffff81111561542657600080fd5b61543288828901614df9565b909650945050602086013561544681614cc0565b9250615454604087016151f9565b9150606086013561546481614cc0565b809150509295509295909350565b801515811461249157600080fd5b6000806040838503121561549357600080fd5b823561549e81614cc0565b91506020830135614ef781615472565b60008060008060008060a087890312156154c757600080fd5b863567ffffffffffffffff8111156154de57600080fd5b6154ea89828a01614df9565b90975095505060208701356154fe81614cc0565b935060408701359250606087013561551581614cc0565b9150615523608088016151f9565b90509295509295509295565b6000806040838503121561554257600080fd5b82359150614df060208401614fc9565b6000806040838503121561556557600080fd5b50508035926020909101359150565b60008060008060008060a0878903121561558d57600080fd5b86359550602087013567ffffffffffffffff8111156155ab57600080fd5b6155b789828a01614df9565b90965094505060408701356155cb81614cc0565b92506155d960608801614fc9565b915061552360808801614db0565b600080600080608085870312156155fd57600080fd5b84359350602085013561560f81614cc0565b925060408501356151e081614cc0565b60008060006060848603121561563457600080fd5b833592506020840135915060408401356153ec81614cc0565b6000806000806060858703121561566357600080fd5b843567ffffffffffffffff81111561567a57600080fd5b61568687828801614df9565b909550935050602085013561569a81614cc0565b915060408501356156aa81614cc0565b939692955090935050565b600080604083850312156156c857600080fd5b82356156d381614cc0565b91506020830135614ef781614cc0565b6000806000806000608086880312156156fb57600080fd5b85359450602086013567ffffffffffffffff81111561571957600080fd5b61572588828901614df9565b909550935050604086013561545481614cc0565b600080600080600060a0868803121561575157600080fd5b853561575c81614cc0565b9450602086013561576c81614cc0565b93506040860135925060608601359150608086013567ffffffffffffffff81111561579657600080fd5b6151a688828901614f6d565b6000602082840312156157b457600080fd5b815167ffffffffffffffff8111156157cb57600080fd5b8201601f810184136157dc57600080fd5b80516157e781614f45565b6040516157f48282614f18565b82815286602084860101111561580957600080fd5b611707836020830160208701614d4d565b6000806000806080858703121561583057600080fd5b843567ffffffffffffffff81111561584757600080fd5b61585387828801614f6d565b945050602085013561586481614cc0565b9250615872604086016151f9565b915060608501356156aa81614cc0565b600181811c9082168061589657607f821691505b6020821081036158b657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982036158fb576158fb6158d2565b5060010190565b60408152600061591560408301856152f1565b828103602084015261592781856152f1565b95945050505050565b60006020828403121561594257600080fd5b8151611a1f81614cc0565b67ffffffffffffffff82811682821603908082111561596e5761596e6158d2565b5092915050565b60006020828403121561598757600080fd5b8151611a1f81615472565b8183823760009101908152919050565b6000602082840312156159b457600080fd5b5051919050565b67ffffffffffffffff81811683821601908082111561596e5761596e6158d2565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b60a081526000615a1b60a08301888a6159dc565b90506001600160a01b03808716602084015263ffffffff8616604084015267ffffffffffffffff85166060840152808416608084015250979650505050505050565b601f821115615aa357600081815260208120601f850160051c81016020861015615a845750805b601f850160051c820191505b81811015613b0257828155600101615a90565b505050565b67ffffffffffffffff831115615ac057615ac0614f02565b615ad483615ace8354615882565b83615a5d565b6000601f841160018114615b085760008515615af05750838201355b600019600387901b1c1916600186901b1783556113c2565b600083815260209020601f19861690835b82811015615b395786850135825560209485019460019092019101615b19565b5086821015615b565760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b88815260e060208201526000615b8260e08301898b6159dc565b6001600160a01b03978816604084015295909616606082015267ffffffffffffffff938416608082015263ffffffff9290921660a083015290911660c090910152949350505050565b815167ffffffffffffffff811115615be557615be5614f02565b615bf981615bf38454615882565b84615a5d565b602080601f831160018114615c2e5760008415615c165750858301515b600019600386901b1c1916600185901b178555613b02565b600085815260208120601f198616915b82811015615c5d57888601518255948401946001909101908401615c3e565b5085821015615c7b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006001600160a01b03808816835280871660208401525060a06040830152615cb760a08301866152f1565b8281036060840152615cc981866152f1565b90508281036080840152613c448185614d71565b600060208284031215615cef57600080fd5b8151611a1f81614d1a565b600060033d1115615d135760046000803e5060005160e01c5b90565b600060443d1015615d245790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff8160248401118184111715615d7257505050505090565b8285019150815181811115615d8a5750505050505090565b843d8701016020828501011115615da45750505050505090565b615db360208286010187614f18565b509095945050505050565b608081526000615dd16080830187614d71565b6001600160a01b039590951660208301525063ffffffff92909216604083015267ffffffffffffffff16606090910152919050565b8082018082111561086f5761086f6158d2565b8181038181111561086f5761086f6158d2565b7fff000000000000000000000000000000000000000000000000000000000000008460f81b16815260008351615e69816001850160208801614d4d565b835190830190615e80816001840160208801614d4d565b0160010195945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152615ec560a0830184614d71565b97965050505050505056fea264697066735822122069ffbfb0723a87fb1a8ea1c99d0a79e9c7883bdcedc5c06b292ae48afee0656764736f6c63430008110033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x63B9 CODESIZE SUB DUP1 PUSH3 0x63B9 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1EF JUMP JUMPDEST PUSH3 0x3F CALLER PUSH3 0x186 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x80 MSTORE DUP3 DUP2 AND PUSH1 0xA0 MSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH4 0xFFFEFFFF PUSH1 0xA0 SHL SUB NOT PUSH32 0xAFA26C20E8B3D9A2853D642CFE1021DAE26242FFEDFAC91C97AAB212C1A4B93B DUP2 SWAP1 SSTORE PUSH32 0xA6EEF7E35ABE7026729641147F7915573C7E97B47EFA546F5F6E3230263BCB49 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP1 DUP1 MSTORE PUSH1 0x5 SWAP1 MSTORE PUSH32 0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BC SWAP1 PUSH3 0x109 SWAP1 DUP3 PUSH3 0x2E8 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP1 DUP3 MSTORE PUSH3 0x6CAE8D PUSH1 0xE3 SHL PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x93CDEB708B7545DC668EB9280176169D1C33CFD8ED6F04690A0BCC88A93FC4AE PUSH1 0x0 MSTORE MSTORE PUSH32 0xD99130487705D6970718A0CEE91984B61956F8A1DB3482BBA7E6BF0131ADB01F SWAP1 PUSH3 0x17C SWAP1 DUP3 PUSH3 0x2E8 JUMP JUMPDEST POP POP POP POP PUSH3 0x3B4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x212 DUP2 PUSH3 0x1D6 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH3 0x225 DUP2 PUSH3 0x1D6 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH3 0x238 DUP2 PUSH3 0x1D6 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x26E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x28F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2E3 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x2BE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2DF JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2CA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x304 JUMPI PUSH3 0x304 PUSH3 0x243 JUMP JUMPDEST PUSH3 0x31C DUP2 PUSH3 0x315 DUP5 SLOAD PUSH3 0x259 JUMP JUMPDEST DUP5 PUSH3 0x295 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x354 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x33B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2DF JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x385 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x364 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x3A4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x5F06 PUSH3 0x4B3 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x4AC ADD MSTORE DUP2 DUP2 PUSH2 0xACA ADD MSTORE DUP2 DUP2 PUSH2 0xBBD ADD MSTORE DUP2 DUP2 PUSH2 0x1B9B ADD MSTORE DUP2 DUP2 PUSH2 0x1C49 ADD MSTORE DUP2 DUP2 PUSH2 0x1D10 ADD MSTORE DUP2 DUP2 PUSH2 0x1E32 ADD MSTORE DUP2 DUP2 PUSH2 0x1EC1 ADD MSTORE DUP2 DUP2 PUSH2 0x2139 ADD MSTORE DUP2 DUP2 PUSH2 0x2266 ADD MSTORE DUP2 DUP2 PUSH2 0x23B0 ADD MSTORE DUP2 DUP2 PUSH2 0x25AA ADD MSTORE DUP2 DUP2 PUSH2 0x2649 ADD MSTORE PUSH2 0x3828 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x4F9 ADD MSTORE DUP2 DUP2 PUSH2 0xA50 ADD MSTORE DUP2 DUP2 PUSH2 0xD4C ADD MSTORE DUP2 DUP2 PUSH2 0xF19 ADD MSTORE DUP2 DUP2 PUSH2 0xFE4 ADD MSTORE DUP2 DUP2 PUSH2 0x1440 ADD MSTORE DUP2 DUP2 PUSH2 0x22EB ADD MSTORE DUP2 DUP2 PUSH2 0x2435 ADD MSTORE DUP2 DUP2 PUSH2 0x26F4 ADD MSTORE DUP2 DUP2 PUSH2 0x28EB ADD MSTORE DUP2 DUP2 PUSH2 0x2A88 ADD MSTORE DUP2 DUP2 PUSH2 0x2FCB ADD MSTORE DUP2 DUP2 PUSH2 0x3092 ADD MSTORE DUP2 DUP2 PUSH2 0x3174 ADD MSTORE DUP2 DUP2 PUSH2 0x3206 ADD MSTORE DUP2 DUP2 PUSH2 0x35CE ADD MSTORE DUP2 DUP2 PUSH2 0x390B ADD MSTORE DUP2 DUP2 PUSH2 0x3A26 ADD MSTORE PUSH2 0x4286 ADD MSTORE PUSH2 0x5F06 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2FE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E5D6AD2 GT PUSH2 0x19C JUMPI DUP1 PUSH4 0xCF408823 GT PUSH2 0xEE JUMPI DUP1 PUSH4 0xEB8AE530 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xF242432A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x77D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x790 JUMPI DUP1 PUSH4 0xFD0CD0D9 EQ PUSH2 0x7A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xEB8AE530 EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0xED70554D EQ PUSH2 0x74A JUMPI DUP1 PUSH4 0xEE7EBA78 EQ PUSH2 0x76A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE0DBA60F GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0xE0DBA60F EQ PUSH2 0x6D5 JUMPI DUP1 PUSH4 0xE72BF00F EQ PUSH2 0x6E8 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x6FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCF408823 EQ PUSH2 0x68C JUMPI DUP1 PUSH4 0xD8C9921A EQ PUSH2 0x69F JUMPI DUP1 PUSH4 0xDA8C229E EQ PUSH2 0x6B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 GT PUSH2 0x150 JUMPI DUP1 PUSH4 0xB6BCAD26 GT PUSH2 0x12A JUMPI DUP1 PUSH4 0xB6BCAD26 EQ PUSH2 0x653 JUMPI DUP1 PUSH4 0xC475ABFF EQ PUSH2 0x666 JUMPI DUP1 PUSH4 0xC658E086 EQ PUSH2 0x679 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0xA4014982 EQ PUSH2 0x62D JUMPI DUP1 PUSH4 0xADF4960A EQ PUSH2 0x640 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8B4DFA75 GT PUSH2 0x181 JUMPI DUP1 PUSH4 0x8B4DFA75 EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0x8CF8B41E EQ PUSH2 0x5F6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E5D6AD2 EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x24C1AF44 GT PUSH2 0x255 JUMPI DUP1 PUSH4 0x402906FC GT PUSH2 0x209 JUMPI DUP1 PUSH4 0x53095467 GT PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x53095467 EQ PUSH2 0x576 JUMPI DUP1 PUSH4 0x5D3590D5 EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x59C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x402906FC EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0x41415EAB EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0x23A JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x4CE JUMPI DUP1 PUSH4 0x33C69EA9 EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0x3F15457F EQ PUSH2 0x4F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x24C1AF44 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0x2B20E397 EQ PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x14AB9038 GT PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x1896F70A GT PUSH2 0x291 JUMPI DUP1 PUSH4 0x1896F70A EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x1F4E1504 EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0x20C38E2B EQ PUSH2 0x481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x14AB9038 EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x1534E177 EQ PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 GT PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x178FE3F EQ PUSH2 0x329 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x316 PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x4CD5 JUMP JUMPDEST PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D01 JUMP JUMPDEST PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x320 JUMP JUMPDEST PUSH2 0x383 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x4D30 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x320 JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E616D6557726170706572000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x4D9D JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x3EA CALLDATASIZE PUSH1 0x4 PUSH2 0x4D01 JUMP JUMPDEST PUSH2 0x917 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x4DCD JUMP JUMPDEST PUSH2 0x9A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x417 PUSH2 0x412 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E42 JUMP JUMPDEST PUSH2 0xABD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x320 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x43E CALLDATASIZE PUSH1 0x4 PUSH2 0x4EB5 JUMP JUMPDEST PUSH2 0xC5E JUMP JUMPDEST PUSH2 0x402 PUSH2 0x451 CALLDATASIZE PUSH1 0x4 PUSH2 0x4ED2 JUMP JUMPDEST PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x469 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x320 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x48F CALLDATASIZE PUSH1 0x4 PUSH2 0x4D01 JUMP JUMPDEST PUSH2 0xD7B JUMP JUMPDEST PUSH2 0x316 PUSH2 0x4A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x4FDD JUMP JUMPDEST PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x469 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x4DC CALLDATASIZE PUSH1 0x4 PUSH2 0x5105 JUMP JUMPDEST PUSH2 0x105B JUMP JUMPDEST PUSH2 0x402 PUSH2 0x4EF CALLDATASIZE PUSH1 0x4 PUSH2 0x51B3 JUMP JUMPDEST PUSH2 0x13C9 JUMP JUMPDEST PUSH2 0x469 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x52E PUSH2 0x529 CALLDATASIZE PUSH1 0x4 PUSH2 0x520B JUMP JUMPDEST PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x320 JUMP JUMPDEST PUSH2 0x383 PUSH2 0x551 CALLDATASIZE PUSH1 0x4 PUSH2 0x4ED2 JUMP JUMPDEST PUSH2 0x167F JUMP JUMPDEST PUSH2 0x569 PUSH2 0x564 CALLDATASIZE PUSH1 0x4 PUSH2 0x522E JUMP JUMPDEST PUSH2 0x1711 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x532C JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x469 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x597 CALLDATASIZE PUSH1 0x4 PUSH2 0x533F JUMP JUMPDEST PUSH2 0x184F JUMP JUMPDEST PUSH2 0x469 PUSH2 0x5AA CALLDATASIZE PUSH1 0x4 PUSH2 0x4D01 JUMP JUMPDEST PUSH2 0x18E9 JUMP JUMPDEST PUSH2 0x5C2 PUSH2 0x5BD CALLDATASIZE PUSH1 0x4 PUSH2 0x5380 JUMP JUMPDEST PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x320 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x1A26 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x5F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x53B5 JUMP JUMPDEST PUSH2 0x1A3A JUMP JUMPDEST PUSH2 0x402 PUSH2 0x604 CALLDATASIZE PUSH1 0x4 PUSH2 0x53F7 JUMP JUMPDEST PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x469 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x628 CALLDATASIZE PUSH1 0x4 PUSH2 0x5480 JUMP JUMPDEST PUSH2 0x1F74 JUMP JUMPDEST PUSH2 0x316 PUSH2 0x63B CALLDATASIZE PUSH1 0x4 PUSH2 0x54AE JUMP JUMPDEST PUSH2 0x205E JUMP JUMPDEST PUSH2 0x383 PUSH2 0x64E CALLDATASIZE PUSH1 0x4 PUSH2 0x552F JUMP JUMPDEST PUSH2 0x21FF JUMP JUMPDEST PUSH2 0x402 PUSH2 0x661 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EB5 JUMP JUMPDEST PUSH2 0x2224 JUMP JUMPDEST PUSH2 0x316 PUSH2 0x674 CALLDATASIZE PUSH1 0x4 PUSH2 0x5552 JUMP JUMPDEST PUSH2 0x2494 JUMP JUMPDEST PUSH2 0x316 PUSH2 0x687 CALLDATASIZE PUSH1 0x4 PUSH2 0x5574 JUMP JUMPDEST PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x69A CALLDATASIZE PUSH1 0x4 PUSH2 0x55E7 JUMP JUMPDEST PUSH2 0x29C6 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x6AD CALLDATASIZE PUSH1 0x4 PUSH2 0x561F JUMP JUMPDEST PUSH2 0x2B98 JUMP JUMPDEST PUSH2 0x383 PUSH2 0x6C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EB5 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x6E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x5480 JUMP JUMPDEST PUSH2 0x2CDA JUMP JUMPDEST PUSH2 0x402 PUSH2 0x6F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x564D JUMP JUMPDEST PUSH2 0x2D42 JUMP JUMPDEST PUSH2 0x383 PUSH2 0x709 CALLDATASIZE PUSH1 0x4 PUSH2 0x56B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x745 CALLDATASIZE PUSH1 0x4 PUSH2 0x564D JUMP JUMPDEST PUSH2 0x2E7E JUMP JUMPDEST PUSH2 0x316 PUSH2 0x758 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x778 CALLDATASIZE PUSH1 0x4 PUSH2 0x56E3 JUMP JUMPDEST PUSH2 0x32AD JUMP JUMPDEST PUSH2 0x402 PUSH2 0x78B CALLDATASIZE PUSH1 0x4 PUSH2 0x5739 JUMP JUMPDEST PUSH2 0x33CE JUMP JUMPDEST PUSH2 0x402 PUSH2 0x79E CALLDATASIZE PUSH1 0x4 PUSH2 0x4EB5 JUMP JUMPDEST PUSH2 0x3503 JUMP JUMPDEST PUSH2 0x383 PUSH2 0x7B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D01 JUMP JUMPDEST PUSH2 0x3590 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x844 DUP4 PUSH2 0x18E9 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x869 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x86F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xA0 DUP2 SWAP1 SHR PUSH1 0xC0 DUP3 SWAP1 SHR PUSH2 0x899 DUP4 DUP4 DUP4 PUSH2 0x3649 JUMP JUMPDEST SWAP1 SWAP6 SWAP1 SWAP5 POP SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x81B4E24C00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x908 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x86F JUMPI POP PUSH2 0x86F DUP3 PUSH2 0x369D JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xE89341C SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x97C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x86F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x57A2 JUMP JUMPDEST DUP2 PUSH2 0x9AF DUP2 CALLER PUSH2 0x167F JUMP JUMPDEST PUSH2 0x9D5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST DUP3 PUSH1 0x10 PUSH1 0x0 PUSH2 0x9E3 DUP4 PUSH2 0x875 JUMP JUMPDEST POP SWAP2 POP POP PUSH4 0xFFFFFFFF DUP3 DUP3 AND AND ISZERO PUSH2 0xA11 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x14AB903800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x14AB9038 SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xB21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1931A53800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0xB32 DUP7 DUP9 ADD DUP9 PUSH2 0x581A JUMP JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP6 ADD KECCAK256 SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP DUP9 SWAP1 DUP1 DUP3 EQ PUSH2 0xB88 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC65C3CCC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x28ED4F6C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x28ED4F6C SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xC2D DUP7 DUP7 DUP7 DUP7 PUSH2 0x3738 JUMP JUMPDEST POP PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC66 PUSH2 0x3971 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP2 PUSH2 0xCAB DUP2 CALLER PUSH2 0x167F JUMP JUMPDEST PUSH2 0xCD1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST DUP3 PUSH1 0x8 PUSH1 0x0 PUSH2 0xCDF DUP4 PUSH2 0x875 JUMP JUMPDEST POP SWAP2 POP POP PUSH4 0xFFFFFFFF DUP3 DUP3 AND AND ISZERO PUSH2 0xD0D JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1896F70A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x1896F70A SWAP1 PUSH1 0x44 ADD PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xD94 SWAP1 PUSH2 0x5882 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDC0 SWAP1 PUSH2 0x5882 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE0D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDE2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE0D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDF0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP8 PUSH2 0xE22 DUP2 CALLER PUSH2 0x167F JUMP JUMPDEST PUSH2 0xE48 JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST DUP8 MLOAD PUSH1 0x20 DUP10 ADD KECCAK256 PUSH2 0xE80 DUP11 DUP3 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 POP PUSH2 0xE8C DUP11 DUP5 PUSH2 0x39CB JUMP JUMPDEST PUSH2 0xE96 DUP4 DUP7 PUSH2 0x3B0A JUMP JUMPDEST PUSH2 0xEA1 DUP11 DUP5 DUP12 PUSH2 0x3B3D JUMP JUMPDEST POP PUSH2 0xEAE DUP11 DUP5 DUP8 DUP8 PUSH2 0x3C0A JUMP JUMPDEST SWAP4 POP PUSH2 0xEB9 DUP4 PUSH2 0x3590 JUMP JUMPDEST PUSH2 0xF88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5EF2C7F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x64 DUP4 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP9 AND PUSH1 0x84 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x5EF2C7F0 SWAP1 PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF71 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xF83 DUP11 DUP5 DUP12 DUP12 DUP10 DUP10 PUSH2 0x3C50 JUMP JUMPDEST PUSH2 0x104E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x5EF2C7F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x64 DUP4 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP9 AND PUSH1 0x84 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x5EF2C7F0 SWAP1 PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1028 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x103C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x104E DUP11 DUP5 DUP12 DUP12 DUP10 DUP10 PUSH2 0x3C7E JUMP JUMPDEST POP POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x10D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x114E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x1188 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x11FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x135C JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x121A JUMPI PUSH2 0x121A PUSH2 0x58BC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1238 JUMPI PUSH2 0x1238 PUSH2 0x58BC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1250 DUP6 PUSH2 0x875 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1261 DUP6 DUP4 DUP4 PUSH2 0x3D42 JUMP JUMPDEST POP DUP4 PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x1283 JUMPI POP DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x12F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL PUSH1 0xA0 DUP6 SWAP1 SHL AND OR PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 PUSH1 0xC0 DUP5 SWAP1 SHL AND OR SWAP1 SSTORE POP POP POP POP POP DUP1 PUSH2 0x1355 SWAP1 PUSH2 0x58E8 JUMP JUMPDEST SWAP1 POP PUSH2 0x11FD JUMP JUMPDEST POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x13AC SWAP3 SWAP2 SWAP1 PUSH2 0x5902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x13C2 CALLER DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x3E19 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP8 SWAP1 MSTORE DUP2 DUP4 ADD DUP7 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x13FB DUP2 DUP5 PUSH2 0x3B0A JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x1408 DUP5 PUSH2 0x875 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 PUSH2 0x14B7 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x2571BE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x2571BE3 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1487 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14AB SWAP2 SWAP1 PUSH2 0x5930 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x14EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x5374B59900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x14FA DUP11 PUSH2 0x875 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP11 SWAP1 POP PUSH2 0x153B JUMPI PUSH2 0x1510 DUP7 CALLER PUSH2 0x167F JUMP JUMPDEST PUSH2 0x1536 JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST PUSH2 0x156B JUMP JUMPDEST PUSH2 0x1545 DUP11 CALLER PUSH2 0x167F JUMP JUMPDEST PUSH2 0x156B JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST PUSH2 0x1576 DUP7 DUP10 DUP5 PUSH2 0x4005 JUMP JUMPDEST PUSH2 0x1581 DUP8 DUP5 DUP4 PUSH2 0x4040 JUMP JUMPDEST SWAP7 POP PUSH3 0x10000 DUP5 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x15A5 JUMPI POP DUP4 PUSH4 0xFFFFFFFF AND DUP9 DUP6 OR PUSH4 0xFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x15C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST SWAP7 DUP4 OR SWAP7 PUSH2 0xAB1 DUP7 DUP7 DUP11 DUP7 DUP12 PUSH2 0x408A JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x15E4 DUP2 CALLER PUSH2 0x167F JUMP JUMPDEST PUSH2 0x160A JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST DUP4 PUSH1 0x2 PUSH1 0x0 PUSH2 0x1618 DUP4 PUSH2 0x875 JUMP JUMPDEST POP SWAP2 POP POP PUSH4 0xFFFFFFFF DUP3 DUP3 AND AND ISZERO PUSH2 0x1646 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x1653 DUP11 PUSH2 0x875 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x166C DUP11 DUP5 DUP5 DUP13 PUSH2 0xFFFF AND OR DUP5 DUP6 PUSH2 0x408A JUMP JUMPDEST POP POP PUSH2 0xFFFF SWAP1 SWAP7 AND SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x168D DUP7 PUSH2 0x875 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x16D8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x1707 JUMPI POP PUSH3 0x20000 DUP3 AND ISZERO DUP1 PUSH2 0x1707 JUMPI POP TIMESTAMP PUSH2 0x16FA PUSH3 0x76A700 DUP4 PUSH2 0x594D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x178A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17A6 JUMPI PUSH2 0x17A6 PUSH2 0x4F02 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17CF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1847 JUMPI PUSH2 0x181A DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x17F3 JUMPI PUSH2 0x17F3 PUSH2 0x58BC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x180D JUMPI PUSH2 0x180D PUSH2 0x58BC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x7B6 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x182C JUMPI PUSH2 0x182C PUSH2 0x58BC JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x1840 DUP2 PUSH2 0x58E8 JUMP JUMPDEST SWAP1 POP PUSH2 0x17D5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1857 PUSH2 0x3971 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18E3 SWAP2 SWAP1 PUSH2 0x5975 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86F DUP3 PUSH2 0x4134 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD DUP6 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 SWAP1 PUSH1 0x0 PUSH2 0x192B DUP7 CALLER PUSH2 0x167F JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x1942 JUMPI POP PUSH2 0x1940 DUP3 CALLER PUSH2 0x167F JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1969 JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x1976 DUP6 PUSH2 0x875 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP4 ISZERO DUP1 ISZERO PUSH2 0x198D JUMPI POP PUSH3 0x40000 DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0x19AE JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B9 DUP11 PUSH2 0x875 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x19C8 DUP9 DUP4 DUP4 PUSH2 0x4040 JUMP JUMPDEST SWAP8 POP PUSH2 0x19D6 DUP7 DUP6 DUP6 DUP12 PUSH2 0x414A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP10 AND DUP2 MSTORE DUP7 SWAP1 PUSH32 0xF675815A0817338F93A7DA433F6BD5F5542F1029B11B455191AC96C7F6A9B132 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP8 SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A2E PUSH2 0x3971 JUMP JUMPDEST PUSH2 0x1A38 PUSH1 0x0 PUSH2 0x41AA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x93CDEB708B7545DC668EB9280176169D1C33CFD8ED6F04690A0BCC88A93FC4AE PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD DUP7 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x1A8E DUP2 CALLER PUSH2 0x167F JUMP JUMPDEST PUSH2 0x1AB4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SUB PUSH2 0x1B01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5949361A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x93CDEB708B7545DC668EB9280176169D1C33CFD8ED6F04690A0BCC88A93FC4AE PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x1B56 SWAP1 JUMPDEST DUP4 PUSH2 0x4212 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x42842E0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP7 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BF3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1C0F SWAP3 SWAP2 SWAP1 PUSH2 0x5992 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH32 0x6352211E00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 POP PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CBC SWAP2 SWAP1 PUSH2 0x5930 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1D7D JUMPI POP PUSH1 0x40 MLOAD PUSH32 0xE985E9C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xE985E9C5 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D7B SWAP2 SWAP1 PUSH2 0x5975 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1DED JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x93CDEB708B7545DC668EB9280176169D1C33CFD8ED6F04690A0BCC88A93FC4AE PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD DUP6 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP4 DUP5 SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH4 0x168AB55D PUSH1 0xE3 SHL SWAP1 SWAP3 MSTORE PUSH1 0x64 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0x28ED4F6C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP PUSH4 0x28ED4F6C SWAP2 POP PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1F6B DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP10 SWAP3 POP DUP9 SWAP2 POP DUP8 SWAP1 POP PUSH2 0x3738 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER SUB PUSH2 0x1FF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x20E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74726F6C6C61626C653A2043616C6C6572206973206E6F74206120636F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E74726F6C6C6572000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x20F5 SWAP3 SWAP2 SWAP1 PUSH2 0x5992 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH32 0xFCA247AC00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xFCA247AC SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x218A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21AE SWAP2 SWAP1 PUSH2 0x59A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x21F4 DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP11 SWAP3 POP DUP8 SWAP2 POP DUP9 SWAP1 POP PUSH2 0x3738 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x220B DUP5 PUSH2 0x875 JUMP JUMPDEST POP DUP5 AND PUSH4 0xFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP6 AND EQ SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x222C PUSH2 0x3971 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x234C JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA22CB465 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA22CB465 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA22CB465 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP3 POP PUSH4 0xA22CB465 SWAP2 POP PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2347 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE ISZERO PUSH2 0x2491 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA22CB465 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA22CB465 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x240A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA22CB465 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP3 POP PUSH4 0xA22CB465 SWAP2 POP PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x247D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2519 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74726F6C6C61626C653A2043616C6C6572206973206E6F74206120636F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E74726F6C6C6572000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x93CDEB708B7545DC668EB9280176169D1C33CFD8ED6F04690A0BCC88A93FC4AE PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD DUP7 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 SWAP1 PUSH1 0x40 MLOAD PUSH32 0xC475ABFF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xC475ABFF SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x25F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2617 SWAP2 SWAP1 PUSH2 0x59A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6352211E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x26B4 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x26B1 SWAP2 DUP2 ADD SWAP1 PUSH2 0x5930 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x26C1 JUMPI SWAP2 POP PUSH2 0x86F SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ADDRESS EQ ISZERO DUP1 PUSH2 0x276B JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x2571BE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x2571BE3 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x273B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x275F SWAP2 SWAP1 PUSH2 0x5930 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x277A JUMPI POP SWAP2 POP PUSH2 0x86F SWAP1 POP JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x278A PUSH3 0x76A700 DUP4 PUSH2 0x59BB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xA0 DUP2 SWAP1 SHR PUSH2 0x27AD DUP6 DUP4 DUP4 DUP7 PUSH2 0x414A JUMP JUMPDEST POP SWAP2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP7 PUSH2 0x27C6 DUP2 CALLER PUSH2 0x167F JUMP JUMPDEST PUSH2 0x27EC JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x27FE SWAP3 SWAP2 SWAP1 PUSH2 0x5992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH2 0x2839 DUP10 DUP3 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 POP PUSH2 0x2845 DUP10 DUP5 PUSH2 0x39CB JUMP JUMPDEST PUSH2 0x284F DUP4 DUP7 PUSH2 0x3B0A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2892 DUP11 DUP6 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x3B3D SWAP3 POP POP POP JUMP JUMPDEST SWAP1 POP PUSH2 0x28A0 DUP11 DUP6 DUP9 DUP9 PUSH2 0x3C0A JUMP JUMPDEST SWAP5 POP PUSH2 0x28AB DUP5 PUSH2 0x3590 JUMP JUMPDEST PUSH2 0x2973 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6AB592300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6AB5923 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x293C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2960 SWAP2 SWAP1 PUSH2 0x59A2 JUMP JUMPDEST POP PUSH2 0x296E DUP5 DUP3 DUP10 DUP10 DUP10 PUSH2 0x431D JUMP JUMPDEST PUSH2 0x29B9 JUMP JUMPDEST PUSH2 0x29B9 DUP11 DUP6 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP14 SWAP3 POP DUP13 SWAP2 POP DUP12 SWAP1 POP PUSH2 0x3C7E JUMP JUMPDEST POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP4 PUSH2 0x29D1 DUP2 CALLER PUSH2 0x167F JUMP JUMPDEST PUSH2 0x29F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST DUP5 PUSH1 0x1C PUSH1 0x0 PUSH2 0x2A05 DUP4 PUSH2 0x875 JUMP JUMPDEST POP SWAP2 POP POP PUSH4 0xFFFFFFFF DUP3 DUP3 AND AND ISZERO PUSH2 0x2A33 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xCF40882300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x64 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xCF408823 SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2ACC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2AE0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 POP PUSH2 0x2B60 JUMPI PUSH1 0x0 PUSH2 0x2AFE DUP10 PUSH2 0x875 JUMP JUMPDEST POP SWAP2 POP POP PUSH3 0x1FFFF NOT PUSH3 0x20000 DUP3 AND ADD PUSH2 0x2B4F JUMPI PUSH1 0x40 MLOAD PUSH32 0x5949361A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST PUSH2 0x2B5A DUP10 PUSH1 0x0 PUSH2 0x4212 JUMP JUMPDEST POP PUSH2 0x1BF3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B6B DUP10 PUSH2 0x18E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x2B8D DUP2 DUP10 DUP12 PUSH1 0x0 SHR PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x435F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD DUP6 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x2BCA DUP2 CALLER PUSH2 0x167F JUMP JUMPDEST PUSH2 0x2BF0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST PUSH32 0x6C32148F748ABA23997146D7FE89E962E3CC30271290FB96F5F4337756C03B52 DUP5 ADD PUSH2 0x2C49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x615A470300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 PUSH2 0x2C67 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ JUMPDEST ISZERO PUSH2 0x2CA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5949361A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP8 SWAP1 MSTORE DUP2 DUP4 ADD DUP7 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x18E3 SWAP1 PUSH2 0x1B50 JUMP JUMPDEST PUSH2 0x2CE2 PUSH2 0x3971 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x4C97694570A07277810AF7E5669FFD5F6A2D6B74B6E9A274B8B870FD5114CF87 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2D54 SWAP3 SWAP2 SWAP1 PUSH2 0x5992 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB SWAP1 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x2DB2 PUSH32 0x93CDEB708B7545DC668EB9280176169D1C33CFD8ED6F04690A0BCC88A93FC4AE DUP4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2DC2 DUP5 PUSH2 0x44DD JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2DEE JUMPI PUSH2 0x2DEC DUP5 DUP4 DUP4 PUSH2 0x3D42 JUMP JUMPDEST POP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0xF9547A9E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF9547A9E SWAP1 PUSH2 0x2E41 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP15 SWAP1 PUSH1 0x4 ADD PUSH2 0x5A07 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E6F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EC5 PUSH1 0x0 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 SWAP3 POP POP PUSH2 0x4576 SWAP1 POP JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x2F0E DUP3 DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 SWAP3 POP POP PUSH2 0x462D SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x2F58 DUP9 DUP11 DUP4 PUSH2 0x5AA8 JUMP JUMPDEST POP PUSH32 0x6C32148F748ABA23997146D7FE89E962E3CC30271290FB96F5F4337756C03B52 DUP3 ADD PUSH2 0x2FB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x615A470300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2571BE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2571BE3 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x301A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x303E SWAP2 SWAP1 PUSH2 0x5930 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x30FF JUMPI POP PUSH1 0x40 MLOAD PUSH32 0xE985E9C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xE985E9C5 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30FD SWAP2 SWAP1 PUSH2 0x5975 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x3126 JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO PUSH2 0x31D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1896F70A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x1896F70A SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x31CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x5B0FC9C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x5B0FC9C3 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3266 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2B8D DUP3 DUP11 DUP11 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP DUP14 SWAP4 POP SWAP2 POP DUP2 SWAP1 POP PUSH2 0x431D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x32BF SWAP3 SWAP2 SWAP1 PUSH2 0x5992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x32FC DUP8 DUP4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x330C DUP5 PUSH2 0x44DD JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3338 JUMPI PUSH2 0x3336 DUP5 DUP4 DUP4 PUSH2 0x3D42 JUMP JUMPDEST POP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0x24C1AF4400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x24C1AF44 SWAP1 PUSH2 0x3390 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 PUSH1 0x0 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x5B68 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x33AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x33BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x344A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x3484 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x34F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH2 0x13C2 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x435F JUMP JUMPDEST PUSH2 0x350B PUSH2 0x3971 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3587 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH2 0x2491 DUP2 PUSH2 0x41AA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x359C DUP4 PUSH2 0x18E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x86F JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x2571BE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x2571BE3 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3615 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3639 SWAP2 SWAP1 PUSH2 0x5930 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x3694 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 PUSH3 0x10000 DUP6 AND ADD PUSH2 0x368F JUMPI PUSH1 0x0 SWAP5 POP JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST POP SWAP3 SWAP4 SWAP2 SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x3700 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x86F JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x86F JUMP JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP6 ADD KECCAK256 PUSH1 0x0 PUSH2 0x3792 PUSH32 0x93CDEB708B7545DC668EB9280176169D1C33CFD8ED6F04690A0BCC88A93FC4AE DUP4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x37D5 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x365746800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x46EC JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x37F0 DUP3 DUP3 PUSH2 0x5BCB JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0xD6E4FA8600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH3 0x76A700 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xD6E4FA86 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3877 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x389B SWAP2 SWAP1 PUSH2 0x59A2 JUMP JUMPDEST PUSH2 0x38A5 SWAP2 SWAP1 PUSH2 0x59BB JUMP JUMPDEST SWAP1 POP PUSH2 0x38BD DUP4 DUP4 DUP10 PUSH3 0x30000 PUSH2 0xFFFF DUP12 AND OR DUP6 PUSH2 0x431D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x1BF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1896F70A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x1896F70A SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x394F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3963 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x39D8 DUP5 PUSH2 0x875 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND LT DUP1 DUP1 ISZERO PUSH2 0x3A9C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 PUSH2 0x3A9C JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x2571BE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x2571BE3 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A91 SWAP2 SWAP1 PUSH2 0x5930 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0x3ADB JUMPI PUSH1 0x0 PUSH2 0x3AAC DUP8 PUSH2 0x875 JUMP JUMPDEST POP SWAP2 POP POP PUSH1 0x20 DUP2 AND ISZERO PUSH2 0x3AD5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST POP PUSH2 0x3B02 JUMP JUMPDEST PUSH3 0x10000 DUP4 AND ISZERO PUSH2 0x3B02 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0xFFFDFFFF DUP2 DUP2 OR PUSH4 0xFFFFFFFF AND EQ PUSH2 0x3B39 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3BE6 DUP4 PUSH1 0x5 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x3B63 SWAP1 PUSH2 0x5882 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B8F SWAP1 PUSH2 0x5882 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3BDC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BB1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3BDC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3BBF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x46EC JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x3C01 DUP3 DUP3 PUSH2 0x5BCB JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3C16 DUP6 PUSH2 0x875 JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x0 DUP1 PUSH2 0x3C29 DUP9 PUSH1 0x0 SHR PUSH2 0x875 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP PUSH2 0x3C39 DUP8 DUP8 DUP5 PUSH2 0x4005 JUMP JUMPDEST PUSH2 0x3C44 DUP6 DUP5 DUP4 PUSH2 0x4040 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x3C6F SWAP2 DUP8 SWAP2 PUSH2 0x3B63 SWAP1 PUSH2 0x5882 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F6B DUP7 DUP3 DUP7 DUP7 DUP7 PUSH2 0x431D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x3C8B DUP9 PUSH2 0x875 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH2 0x3CB5 DUP9 PUSH1 0x5 PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x3B63 SWAP1 PUSH2 0x5882 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x3CD2 SWAP1 PUSH2 0x5882 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SUB PUSH2 0x3CF5 JUMPI PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x3CF3 DUP3 DUP3 PUSH2 0x5BCB JUMP JUMPDEST POP JUMPDEST PUSH2 0x3D04 DUP10 DUP6 DUP9 DUP7 OR DUP6 DUP10 PUSH2 0x408A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x3D22 JUMPI PUSH2 0x3D1D DUP10 PUSH1 0x0 PUSH2 0x4212 JUMP JUMPDEST PUSH2 0xAB1 JUMP JUMPDEST PUSH2 0xAB1 DUP5 DUP9 DUP12 PUSH1 0x0 SHR PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x435F JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1FFFF NOT PUSH3 0x20000 DUP5 AND ADD PUSH2 0x3D64 JUMPI PUSH2 0x3D61 PUSH3 0x76A700 DUP4 PUSH2 0x594D JUMP JUMPDEST SWAP2 POP JUMPDEST TIMESTAMP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x3DF4 JUMPI PUSH3 0x10000 DUP4 AND ISZERO PUSH2 0x3DEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH2 0x1A1F JUMP JUMPDEST PUSH1 0x4 DUP4 AND ISZERO PUSH2 0x1A1F JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x3B02 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x3E76 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x5C8B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3EB1 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3EAE SWAP2 DUP2 ADD SWAP1 PUSH2 0x5CDD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x3F66 JUMPI PUSH2 0x3EBD PUSH2 0x5CFA JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x3EF6 JUMPI POP PUSH2 0x3ED1 PUSH2 0x5D16 JUMP JUMPDEST DUP1 PUSH2 0x3EDC JUMPI POP PUSH2 0x3EF8 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x830 SWAP2 SWAP1 PUSH2 0x4D9D JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 EQ PUSH2 0x1F6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH4 0xFFFF0000 DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH1 0x1 DUP4 AND ISZERO SWAP1 DUP3 SWAP1 PUSH2 0x401F JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x13C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x4062 JUMPI DUP2 SWAP4 POP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x4082 JUMPI DUP3 SWAP4 POP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4096 DUP6 DUP6 DUP6 DUP5 PUSH2 0x414A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF DUP5 AND DUP2 MSTORE DUP6 SWAP1 PUSH32 0x39873F00C80F4F94B7BD1594AEBCF650F003545B74824D57DDF4939E3FF3A34B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x13C2 JUMPI PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE DUP6 SWAP1 PUSH32 0xF675815A0817338F93A7DA433F6BD5F5542F1029B11B455191AC96C7F6A9B132 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4140 DUP4 PUSH2 0x875 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x4154 DUP5 DUP4 PUSH2 0x4795 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL PUSH1 0xA0 DUP6 SWAP1 SHL AND OR PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 PUSH1 0xC0 DUP5 SWAP1 SHL AND OR SWAP1 SSTORE PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x421D DUP3 PUSH1 0x1 PUSH2 0x21FF JUMP JUMPDEST ISZERO PUSH2 0x423E JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST PUSH2 0x4247 DUP3 PUSH2 0x47CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x5B0FC9C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x5B0FC9C3 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x42CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x42DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP5 SWAP3 POP PUSH32 0xEE2BA1195C65BCF218A83D874335C6BF9D9067B4C672F3C3BF16CF40DE7586C4 SWAP2 POP PUSH1 0x20 ADD PUSH2 0x2D36 JUMP JUMPDEST PUSH2 0x4329 DUP6 DUP5 DUP5 DUP5 PUSH2 0x4890 JUMP JUMPDEST DUP5 PUSH32 0x8CE7013E8ABEBC55C3890A68F5A27C67C3F7EFA64E584DE5FB22363C606FD340 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x4125 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5DBE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x436D DUP7 PUSH2 0x875 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x437E DUP7 DUP4 DUP4 PUSH2 0x3D42 JUMP JUMPDEST POP DUP5 PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x43A0 JUMPI POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x4412 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x4433 JUMPI POP POP POP PUSH2 0x13C2 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL PUSH1 0xA0 DUP6 SWAP1 SHL AND OR PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 PUSH1 0xC0 DUP5 SWAP1 SHL AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND SWAP3 SWAP1 DUP12 AND SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1BF3 CALLER DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x4904 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4526 JUMPI PUSH1 0x40 MLOAD PUSH32 0x24C1D6D400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4530 DUP5 CALLER PUSH2 0x167F JUMP JUMPDEST PUSH2 0x4556 JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST PUSH2 0x455F DUP5 PUSH2 0x875 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH2 0x456F DUP5 PUSH2 0x47CE JUMP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 MLOAD DUP4 LT PUSH2 0x45C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x726561644C6162656C3A20496E646578206F7574206F6620626F756E64730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x45DD JUMPI PUSH2 0x45DD PUSH2 0x58BC JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR SWAP1 POP DUP1 ISZERO PUSH2 0x4609 JUMPI PUSH2 0x4602 DUP6 PUSH2 0x45FC DUP7 PUSH1 0x1 PUSH2 0x5E06 JUMP JUMPDEST DUP4 PUSH2 0x4A47 JUMP JUMPDEST SWAP3 POP PUSH2 0x460E JUMP JUMPDEST PUSH1 0x0 SWAP3 POP JUMPDEST PUSH2 0x4618 DUP2 DUP6 PUSH2 0x5E06 JUMP JUMPDEST PUSH2 0x4623 SWAP1 PUSH1 0x1 PUSH2 0x5E06 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x463C DUP6 DUP6 PUSH2 0x4576 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x46AE JUMPI PUSH1 0x1 DUP6 MLOAD PUSH2 0x4654 SWAP2 SWAP1 PUSH2 0x5E19 JUMP JUMPDEST DUP5 EQ PUSH2 0x46A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E616D65686173683A204A756E6B20617420656E64206F66206E616D65000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x830 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP PUSH2 0x86F SWAP1 POP JUMP JUMPDEST PUSH2 0x46B8 DUP6 DUP3 PUSH2 0x462D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP4 MLOAD LT ISZERO PUSH2 0x472A JUMPI PUSH1 0x40 MLOAD PUSH32 0x280DACB600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF DUP4 MLOAD GT ISZERO PUSH2 0x4768 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xE3BA295F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x830 SWAP2 SWAP1 PUSH2 0x4D9D JUMP JUMPDEST DUP3 MLOAD DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x477E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5E2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x47AD JUMPI POP PUSH3 0x10001 DUP2 DUP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3B39 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xA0 DUP2 SWAP1 SHR PUSH1 0xC0 DUP3 SWAP1 SHR PUSH2 0x47F2 DUP4 DUP4 DUP4 PUSH2 0x3649 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL PUSH1 0xA0 DUP4 SWAP1 SHL AND PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 PUSH1 0xC0 DUP7 SWAP1 SHL AND OR SWAP1 SSTORE SWAP3 POP PUSH2 0x4841 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH2 0x489A DUP5 DUP4 PUSH2 0x4795 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x48F8 JUMPI PUSH2 0x48C1 DUP6 PUSH2 0x47CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE DUP6 SWAP1 PUSH32 0xEE2BA1195C65BCF218A83D874335C6BF9D9067B4C672F3C3BF16CF40DE7586C4 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH2 0x13C2 DUP6 DUP6 DUP6 DUP6 PUSH2 0x4A6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x3B02 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x4961 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x5E8D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x499C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x4999 SWAP2 DUP2 ADD SWAP1 PUSH2 0x5CDD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x49A8 JUMPI PUSH2 0x3EBD PUSH2 0x5CFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 EQ PUSH2 0x1F6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x4A56 DUP4 DUP6 PUSH2 0x5E06 JUMP JUMPDEST GT ISZERO PUSH2 0x4A61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 ADD PUSH1 0x20 ADD KECCAK256 SWAP1 JUMP JUMPDEST DUP4 PUSH1 0x0 DUP1 DUP1 PUSH2 0x4A79 DUP5 PUSH2 0x875 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH4 0xFFFF0000 DUP3 AND PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP8 AND SWAP1 DUP4 AND GT ISZERO PUSH2 0x4AA0 JUMPI DUP2 SWAP6 POP JUMPDEST TIMESTAMP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0x4AB6 JUMPI SWAP6 DUP7 OR SWAP6 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x4B0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E74206F66206578697374696E6720746F6B656E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x4B89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SUB PUSH2 0x4C07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206E65774F776E65722063616E6E6F742062652074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4E616D655772617070657220636F6E7472616374000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL PUSH1 0xA0 DUP11 SWAP1 SHL AND OR PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 PUSH1 0xC0 DUP10 SWAP1 SHL AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP2 PUSH1 0x0 SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2B8D CALLER PUSH1 0x0 DUP11 DUP9 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x4904 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4CE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4CF3 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x2491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A1F DUP2 PUSH2 0x4D1A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4D68 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4D50 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x4D89 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x4D4D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1A1F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4D71 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x4DC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4DE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x4DF0 PUSH1 0x20 DUP5 ADD PUSH2 0x4DB0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x4E0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4E23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x4E3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4E5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x4E65 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x4E75 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4E98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4EA4 DUP9 DUP3 DUP10 ADD PUSH2 0x4DF9 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4EC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A1F DUP2 PUSH2 0x4CC0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4EE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4EF7 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4F3E JUMPI PUSH2 0x4F3E PUSH2 0x4F02 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4F5F JUMPI PUSH2 0x4F5F PUSH2 0x4F02 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4F7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4F89 DUP2 PUSH2 0x4F45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F96 DUP3 DUP3 PUSH2 0x4F18 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP6 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x4FAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x4DC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x4FF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5016 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5022 DUP11 DUP3 DUP12 ADD PUSH2 0x4F6D JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH2 0x5033 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH2 0x5043 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP4 POP PUSH2 0x5051 PUSH1 0x80 DUP10 ADD PUSH2 0x4DB0 JUMP JUMPDEST SWAP3 POP PUSH2 0x505F PUSH1 0xA0 DUP10 ADD PUSH2 0x4FC9 JUMP JUMPDEST SWAP2 POP PUSH2 0x506D PUSH1 0xC0 DUP10 ADD PUSH2 0x4DB0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5095 JUMPI PUSH2 0x5095 PUSH2 0x4F02 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x50B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x50BD DUP3 PUSH2 0x507B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50CA DUP3 DUP3 PUSH2 0x4F18 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x50EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x21F4 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x50EE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x511D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x5128 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x5138 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x5155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5161 DUP10 DUP4 DUP11 ADD PUSH2 0x509F JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5183 DUP10 DUP4 DUP11 ADD PUSH2 0x509F JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51A6 DUP9 DUP3 DUP10 ADD PUSH2 0x4F6D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x51C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0x51E0 PUSH1 0x40 DUP7 ADD PUSH2 0x4FC9 JUMP JUMPDEST SWAP2 POP PUSH2 0x51EE PUSH1 0x60 DUP7 ADD PUSH2 0x4DB0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x4DC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x521E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x4DF0 PUSH1 0x20 DUP5 ADD PUSH2 0x51F9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x5259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x526D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x527A DUP3 PUSH2 0x507B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5287 DUP3 DUP3 PUSH2 0x4F18 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x52A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x52CE JUMPI DUP6 CALLDATALOAD PUSH2 0x52BF DUP2 PUSH2 0x4CC0 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x52AC JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x52E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4623 DUP6 DUP3 DUP7 ADD PUSH2 0x509F JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5321 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x5305 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1A1F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x52F1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x535F DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x536F DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x53AC PUSH1 0x40 DUP6 ADD PUSH2 0x4DB0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x53CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x53DC DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x53EC DUP2 PUSH2 0x4CC0 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x540F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5432 DUP9 DUP3 DUP10 ADD PUSH2 0x4DF9 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x5446 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP3 POP PUSH2 0x5454 PUSH1 0x40 DUP8 ADD PUSH2 0x51F9 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0x5464 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x549E DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4EF7 DUP2 PUSH2 0x5472 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x54C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x54DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x54EA DUP10 DUP3 DUP11 ADD PUSH2 0x4DF9 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x54FE DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x5515 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP2 POP PUSH2 0x5523 PUSH1 0x80 DUP9 ADD PUSH2 0x51F9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x4DF0 PUSH1 0x20 DUP5 ADD PUSH2 0x4FC9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5565 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x558D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x55AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55B7 DUP10 DUP3 DUP11 ADD PUSH2 0x4DF9 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x55CB DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP3 POP PUSH2 0x55D9 PUSH1 0x60 DUP9 ADD PUSH2 0x4FC9 JUMP JUMPDEST SWAP2 POP PUSH2 0x5523 PUSH1 0x80 DUP9 ADD PUSH2 0x4DB0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x55FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x560F DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x51E0 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5634 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x53EC DUP2 PUSH2 0x4CC0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x5663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x567A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5686 DUP8 DUP3 DUP9 ADD PUSH2 0x4DF9 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x569A DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x56AA DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x56C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x56D3 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4EF7 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x56FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5725 DUP9 DUP3 DUP10 ADD PUSH2 0x4DF9 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x5454 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x5751 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x575C DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x576C DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5796 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x51A6 DUP9 DUP3 DUP10 ADD PUSH2 0x4F6D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x57B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x57CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x57DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x57E7 DUP2 PUSH2 0x4F45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57F4 DUP3 DUP3 PUSH2 0x4F18 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP7 PUSH1 0x20 DUP5 DUP7 ADD ADD GT ISZERO PUSH2 0x5809 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1707 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x4D4D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x5830 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5853 DUP8 DUP3 DUP9 ADD PUSH2 0x4F6D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x5864 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP3 POP PUSH2 0x5872 PUSH1 0x40 DUP7 ADD PUSH2 0x51F9 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x56AA DUP2 PUSH2 0x4CC0 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x5896 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x58B6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x58FB JUMPI PUSH2 0x58FB PUSH2 0x58D2 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5915 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x52F1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x5927 DUP2 DUP6 PUSH2 0x52F1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5942 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1A1F DUP2 PUSH2 0x4CC0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x596E JUMPI PUSH2 0x596E PUSH2 0x58D2 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5987 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1A1F DUP2 PUSH2 0x5472 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x59B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x596E JUMPI PUSH2 0x596E PUSH2 0x58D2 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND DUP5 ADD ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5A1B PUSH1 0xA0 DUP4 ADD DUP9 DUP11 PUSH2 0x59DC JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF DUP7 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x60 DUP5 ADD MSTORE DUP1 DUP5 AND PUSH1 0x80 DUP5 ADD MSTORE POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5AA3 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x5A84 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3B02 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x5A90 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x5AC0 JUMPI PUSH2 0x5AC0 PUSH2 0x4F02 JUMP JUMPDEST PUSH2 0x5AD4 DUP4 PUSH2 0x5ACE DUP4 SLOAD PUSH2 0x5882 JUMP JUMPDEST DUP4 PUSH2 0x5A5D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5B08 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x5AF0 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x13C2 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5B39 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x5B19 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x5B56 JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP9 DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x5B82 PUSH1 0xE0 DUP4 ADD DUP10 DUP12 PUSH2 0x59DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND PUSH1 0x40 DUP5 ADD MSTORE SWAP6 SWAP1 SWAP7 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5BE5 JUMPI PUSH2 0x5BE5 PUSH2 0x4F02 JUMP JUMPDEST PUSH2 0x5BF9 DUP2 PUSH2 0x5BF3 DUP5 SLOAD PUSH2 0x5882 JUMP JUMPDEST DUP5 PUSH2 0x5A5D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5C2E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x5C16 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x3B02 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5C5D JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x5C3E JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x5C7B JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x5CB7 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x52F1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x5CC9 DUP2 DUP7 PUSH2 0x52F1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x3C44 DUP2 DUP6 PUSH2 0x4D71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5CEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1A1F DUP2 PUSH2 0x4D1A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x5D13 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x5D24 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP1 RETURNDATASIZE ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x5D72 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x5D8A JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x5DA4 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x5DB3 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x4F18 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5DD1 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x4D71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x86F JUMPI PUSH2 0x86F PUSH2 0x58D2 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x86F JUMPI PUSH2 0x86F PUSH2 0x58D2 JUMP JUMPDEST PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP5 PUSH1 0xF8 SHL AND DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x5E69 DUP2 PUSH1 0x1 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x4D4D JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x5E80 DUP2 PUSH1 0x1 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x4D4D JUMP JUMPDEST ADD PUSH1 0x1 ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x5EC5 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x4D71 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xFFBFB0723A87FB1A8EA1 0xC9 SWAP14 EXP PUSH26 0xE9C7883BDCEDC5C06B292AE48AFEE0656764736F6C6343000811 STOP CALLER ","sourceMap":"1329:35229:20:-:0;;;2267:720;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:8;936:18:0;:32::i;:::-;-1:-1:-1;;;;;2391:10:20;;;;;2411:22;;;;;2443:15;:34;;-1:-1:-1;;;;;;2443:34:20;;;;;;;;;;-1:-1:-1;;;;;;6471:16:16;:131;;;:16;:131;2914:25:20;;;;;;;;;-1:-1:-1;2914:25:20;;-1:-1:-1;6471:16:16;2914:25:20;;;;;;:16;;;:5;:16;;;;:25;;:16;:25;:::i;:::-;-1:-1:-1;2949:31:20;;;;;;;;;;;;;-1:-1:-1;;;2949:31:20;;;;;;;;1848:66;-1:-1:-1;2949:15:20;;;;:31;;:15;:31;:::i;:::-;;2267:720;;;1329:35229;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:136:21:-;-1:-1:-1;;;;;94:31:21;;84:42;;74:70;;140:1;137;130:12;74:70;14:136;:::o;155:593::-;302:6;310;318;371:2;359:9;350:7;346:23;342:32;339:52;;;387:1;384;377:12;339:52;419:9;413:16;438:36;468:5;438:36;:::i;:::-;543:2;528:18;;522:25;493:5;;-1:-1:-1;556:38:21;522:25;556:38;:::i;:::-;665:2;650:18;;644:25;613:7;;-1:-1:-1;678:38:21;644:25;678:38;:::i;:::-;735:7;725:17;;;155:593;;;;;:::o;753:127::-;814:10;809:3;805:20;802:1;795:31;845:4;842:1;835:15;869:4;866:1;859:15;885:380;964:1;960:12;;;;1007;;;1028:61;;1082:4;1074:6;1070:17;1060:27;;1028:61;1135:2;1127:6;1124:14;1104:18;1101:38;1098:161;;1181:10;1176:3;1172:20;1169:1;1162:31;1216:4;1213:1;1206:15;1244:4;1241:1;1234:15;1098:161;;885:380;;;:::o;1395:544::-;1496:2;1491:3;1488:11;1485:448;;;1532:1;1557:5;1553:2;1546:17;1602:4;1598:2;1588:19;1672:2;1660:10;1656:19;1653:1;1649:27;1643:4;1639:38;1708:4;1696:10;1693:20;1690:47;;;-1:-1:-1;1731:4:21;1690:47;1786:2;1781:3;1777:12;1774:1;1770:20;1764:4;1760:31;1750:41;;1841:82;1859:2;1852:5;1849:13;1841:82;;;1904:17;;;1885:1;1874:13;1841:82;;;1845:3;;;1485:448;1395:544;;;:::o;2115:1349::-;2234:10;;-1:-1:-1;;;;;2256:30:21;;2253:56;;;2289:18;;:::i;:::-;2318:96;2407:6;2367:38;2399:4;2393:11;2367:38;:::i;:::-;2361:4;2318:96;:::i;:::-;2469:4;;2533:2;2522:14;;2550:1;2545:662;;;;3251:1;3268:6;3265:89;;;-1:-1:-1;3320:19:21;;;3314:26;3265:89;-1:-1:-1;;2072:1:21;2068:11;;;2064:24;2060:29;2050:40;2096:1;2092:11;;;2047:57;3367:81;;2515:943;;2545:662;1342:1;1335:14;;;1379:4;1366:18;;-1:-1:-1;;2581:20:21;;;2698:236;2712:7;2709:1;2706:14;2698:236;;;2801:19;;;2795:26;2780:42;;2893:27;;;;2861:1;2849:14;;;;2728:19;;2698:236;;;2702:3;2962:6;2953:7;2950:19;2947:201;;;3023:19;;;3017:26;-1:-1:-1;;3106:1:21;3102:14;;;3118:3;3098:24;3094:37;3090:42;3075:58;3060:74;;2947:201;-1:-1:-1;;;;;3194:1:21;3178:14;;;3174:22;3161:36;;-1:-1:-1;2115:1349:21:o;:::-;1329:35229:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_addLabel_4699":{"entryPoint":18156,"id":4699,"parameterSlots":2,"returnSlots":1},"@_burn_2037":{"entryPoint":18382,"id":2037,"parameterSlots":1,"returnSlots":0},"@_canFusesBeBurned_5329":{"entryPoint":18325,"id":5329,"parameterSlots":2,"returnSlots":0},"@_checkCanCallSetSubnodeOwner_4375":{"entryPoint":14795,"id":4375,"parameterSlots":2,"returnSlots":0},"@_checkFusesAreSettable_5348":{"entryPoint":15114,"id":5348,"parameterSlots":2,"returnSlots":0},"@_checkOwner_54":{"entryPoint":14705,"id":54,"parameterSlots":0,"returnSlots":0},"@_checkParentFusesAndExpiry_5045":{"entryPoint":15370,"id":5045,"parameterSlots":4,"returnSlots":1},"@_checkParentFuses_5080":{"entryPoint":16389,"id":5080,"parameterSlots":3,"returnSlots":0},"@_clearOwnerAndFuses_4632":{"entryPoint":13897,"id":4632,"parameterSlots":3,"returnSlots":2},"@_doSafeBatchTransferAcceptanceCheck_2242":{"entryPoint":15897,"id":2242,"parameterSlots":6,"returnSlots":0},"@_doSafeTransferAcceptanceCheck_2175":{"entryPoint":18692,"id":2175,"parameterSlots":6,"returnSlots":0},"@_makeNode_4650":{"entryPoint":null,"id":4650,"parameterSlots":2,"returnSlots":1},"@_mint_1989":{"entryPoint":19051,"id":1989,"parameterSlots":4,"returnSlots":0},"@_mint_4759":{"entryPoint":18576,"id":4759,"parameterSlots":4,"returnSlots":0},"@_msgSender_844":{"entryPoint":null,"id":844,"parameterSlots":0,"returnSlots":1},"@_normaliseExpiry_5112":{"entryPoint":16448,"id":5112,"parameterSlots":3,"returnSlots":1},"@_preTransferCheck_4589":{"entryPoint":15682,"id":4589,"parameterSlots":3,"returnSlots":1},"@_prepareUpgrade_4909":{"entryPoint":17629,"id":4909,"parameterSlots":1,"returnSlots":3},"@_saveLabel_4850":{"entryPoint":15165,"id":4850,"parameterSlots":3,"returnSlots":1},"@_setData_1834":{"entryPoint":null,"id":1834,"parameterSlots":4,"returnSlots":0},"@_setData_5297":{"entryPoint":16714,"id":5297,"parameterSlots":4,"returnSlots":0},"@_setFuses_5268":{"entryPoint":16522,"id":5268,"parameterSlots":5,"returnSlots":0},"@_storeNameAndWrap_4821":{"entryPoint":15440,"id":4821,"parameterSlots":6,"returnSlots":0},"@_tokens_1363":{"entryPoint":null,"id":1363,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":16810,"id":111,"parameterSlots":1,"returnSlots":0},"@_transfer_2110":{"entryPoint":17247,"id":2110,"parameterSlots":5,"returnSlots":0},"@_unwrap_5232":{"entryPoint":16914,"id":5232,"parameterSlots":2,"returnSlots":0},"@_updateName_4999":{"entryPoint":15486,"id":4999,"parameterSlots":6,"returnSlots":0},"@_wrapETH2LD_5195":{"entryPoint":14136,"id":5195,"parameterSlots":4,"returnSlots":0},"@_wrap_4788":{"entryPoint":17181,"id":4788,"parameterSlots":5,"returnSlots":0},"@allFusesBurned_4402":{"entryPoint":8703,"id":4402,"parameterSlots":2,"returnSlots":1},"@balanceOfBatch_1517":{"entryPoint":5905,"id":1517,"parameterSlots":2,"returnSlots":1},"@balanceOf_1453":{"entryPoint":1974,"id":1453,"parameterSlots":2,"returnSlots":1},"@canModifyName_3041":{"entryPoint":5759,"id":3041,"parameterSlots":2,"returnSlots":1},"@controllers_1303":{"entryPoint":null,"id":1303,"parameterSlots":0,"returnSlots":0},"@ens_2672":{"entryPoint":null,"id":2672,"parameterSlots":0,"returnSlots":0},"@extendExpiry_3635":{"entryPoint":6388,"id":3635,"parameterSlots":3,"returnSlots":1},"@getData_1616":{"entryPoint":null,"id":1616,"parameterSlots":1,"returnSlots":3},"@getData_2866":{"entryPoint":2165,"id":2866,"parameterSlots":1,"returnSlots":3},"@isApprovedForAll_1569":{"entryPoint":null,"id":1569,"parameterSlots":2,"returnSlots":1},"@isContract_520":{"entryPoint":null,"id":520,"parameterSlots":1,"returnSlots":1},"@isWrapped_4432":{"entryPoint":13712,"id":4432,"parameterSlots":1,"returnSlots":1},"@keccak_1175":{"entryPoint":19015,"id":1175,"parameterSlots":3,"returnSlots":1},"@metadataService_2680":{"entryPoint":null,"id":2680,"parameterSlots":0,"returnSlots":0},"@name_2688":{"entryPoint":null,"id":2688,"parameterSlots":0,"returnSlots":0},"@namehash_1229":{"entryPoint":17965,"id":1229,"parameterSlots":2,"returnSlots":1},"@names_2685":{"entryPoint":3451,"id":2685,"parameterSlots":0,"returnSlots":0},"@onERC721Received_4533":{"entryPoint":2749,"id":4533,"parameterSlots":5,"returnSlots":1},"@ownerOf_1385":{"entryPoint":16692,"id":1385,"parameterSlots":1,"returnSlots":1},"@ownerOf_2830":{"entryPoint":6377,"id":2830,"parameterSlots":1,"returnSlots":1},"@owner_40":{"entryPoint":null,"id":40,"parameterSlots":0,"returnSlots":1},"@readLabel_1293":{"entryPoint":17782,"id":1293,"parameterSlots":2,"returnSlots":2},"@recoverFunds_1150":{"entryPoint":6223,"id":1150,"parameterSlots":3,"returnSlots":0},"@registerAndWrapETH2LD_3179":{"entryPoint":8286,"id":3179,"parameterSlots":6,"returnSlots":1},"@registrar_2676":{"entryPoint":null,"id":2676,"parameterSlots":0,"returnSlots":0},"@renew_3275":{"entryPoint":9364,"id":3275,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":6694,"id":68,"parameterSlots":0,"returnSlots":0},"@safeBatchTransferFrom_1793":{"entryPoint":4187,"id":1793,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_1664":{"entryPoint":13262,"id":1664,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_1551":{"entryPoint":8052,"id":1551,"parameterSlots":2,"returnSlots":0},"@setChildFuses_3908":{"entryPoint":5065,"id":3908,"parameterSlots":4,"returnSlots":0},"@setController_1330":{"entryPoint":11482,"id":1330,"parameterSlots":2,"returnSlots":0},"@setFuses_3532":{"entryPoint":5591,"id":3532,"parameterSlots":2,"returnSlots":1},"@setMetadataService_2880":{"entryPoint":3166,"id":2880,"parameterSlots":1,"returnSlots":0},"@setRecord_4216":{"entryPoint":10694,"id":4216,"parameterSlots":4,"returnSlots":0},"@setResolver_4240":{"entryPoint":3232,"id":4240,"parameterSlots":2,"returnSlots":0},"@setSubnodeOwner_4006":{"entryPoint":10169,"id":4006,"parameterSlots":6,"returnSlots":1},"@setSubnodeRecord_4122":{"entryPoint":3605,"id":4122,"parameterSlots":7,"returnSlots":1},"@setTTL_4264":{"entryPoint":2468,"id":4264,"parameterSlots":2,"returnSlots":0},"@setUpgradeContract_2971":{"entryPoint":8740,"id":2971,"parameterSlots":1,"returnSlots":0},"@supportsInterface_1416":{"entryPoint":13981,"id":1416,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2813":{"entryPoint":2213,"id":2813,"parameterSlots":1,"returnSlots":1},"@supportsInterface_877":{"entryPoint":null,"id":877,"parameterSlots":1,"returnSlots":1},"@transferOwnership_91":{"entryPoint":13571,"id":91,"parameterSlots":1,"returnSlots":0},"@unwrapETH2LD_3436":{"entryPoint":6714,"id":3436,"parameterSlots":3,"returnSlots":0},"@unwrap_3489":{"entryPoint":11160,"id":3489,"parameterSlots":3,"returnSlots":0},"@upgradeContract_2703":{"entryPoint":null,"id":2703,"parameterSlots":0,"returnSlots":0},"@upgradeETH2LD_3696":{"entryPoint":11586,"id":3696,"parameterSlots":4,"returnSlots":0},"@upgrade_3761":{"entryPoint":12973,"id":3761,"parameterSlots":5,"returnSlots":0},"@uri_2895":{"entryPoint":2327,"id":2895,"parameterSlots":1,"returnSlots":1},"@wrapETH2LD_3128":{"entryPoint":7165,"id":3128,"parameterSlots":5,"returnSlots":0},"@wrap_3384":{"entryPoint":11902,"id":3384,"parameterSlots":4,"returnSlots":0},"abi_decode_array_uint256_dyn":{"entryPoint":20639,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":19961,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_string":{"entryPoint":20333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":22832,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":22197,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":20741,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":21311,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":20034,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":22329,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bool":{"entryPoint":21632,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":19669,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":21038,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":22901,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":20178,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_addresst_address":{"entryPoint":21429,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32t_addresst_addresst_uint64":{"entryPoint":21991,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes32t_bytes32t_address":{"entryPoint":22047,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32t_bytes32t_uint32t_uint64":{"entryPoint":20915,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes32t_bytes32t_uint64":{"entryPoint":21376,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32t_string_calldata_ptrt_addresst_address":{"entryPoint":22243,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_bytes32t_string_calldata_ptrt_addresst_uint32t_uint64":{"entryPoint":21876,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_bytes32t_string_memory_ptrt_addresst_addresst_uint64t_uint32t_uint64":{"entryPoint":20445,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_bytes32t_uint16":{"entryPoint":21003,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint32":{"entryPoint":21807,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint64":{"entryPoint":19917,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":19760,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":23773,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_calldata_ptrt_addresst_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_contract$_IMetadataService_$2253":{"entryPoint":20149,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_INameWrapperUpgrade_$2580":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_calldata_ptrt_addresst_address":{"entryPoint":22093,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_string_calldata_ptrt_addresst_uint16t_address":{"entryPoint":21495,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_string_calldata_ptrt_addresst_uint256t_addresst_uint16":{"entryPoint":21678,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_string_memory_ptr_fromMemory":{"entryPoint":22434,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_address_payablet_uint16t_address_payable":{"entryPoint":22554,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256":{"entryPoint":19713,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":22946,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":21842,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_uint16":{"entryPoint":20985,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint32":{"entryPoint":20425,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint64":{"entryPoint":19888,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":21233,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":19825,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_calldata":{"entryPoint":23004,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":22930,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_uint8_t_string_memory_ptr_t_bytes_memory_ptr__to_t_uint8_t_string_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":24108,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":23691,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":24205,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint32_t_uint64__to_t_address_t_uint32_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":21292,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":22786,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint64__to_t_bytes32_t_address_t_address_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_address__to_t_bytes32_t_bytes32_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_address_t_address_t_uint64__to_t_bytes32_t_bytes32_t_address_t_address_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_string_calldata_ptr_t_address_t_address_t_rational_0_by_1_t_uint32_t_uint64__to_t_bytes32_t_string_memory_ptr_t_address_t_address_t_uint64_t_uint32_t_uint64__fromStack_reversed":{"entryPoint":23400,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64__to_t_bytes32_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_address_t_uint32_t_uint64__to_t_bytes_memory_ptr_t_address_t_uint32_t_uint64__fromStack_reversed":{"entryPoint":23998,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_ENS_$1122__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IBaseRegistrar_$985__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IMetadataService_$2253__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_INameWrapperUpgrade_$2580__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_calldata_ptr_t_address_t_uint32_t_uint64_t_address__to_t_string_memory_ptr_t_address_t_uint32_t_uint64_t_address__fromStack_reversed":{"entryPoint":23047,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19869,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0a5a3f6c2833a0d5056e4c87913f3b2ad716b97085ed243cd04d020b3830fcac__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3a494915be969f0305371ebdb09944c6f39346fa8227994f38a7231f6aafbd7b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_52680399c4a01b55318dc7a1e656395c494f95152fe03ad468b9b7af702c670b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_723ef06cf58e92d84b8ad4ad83db034cb099b69c213da6595a1e7ca6ebe51535__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_912cb3202b125350fc41f3ab0d7246878642a776f73877d55ca2cfbcec1f2142__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_rational_1_by_1__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":20603,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":20293,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_bytes_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":24070,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint64":{"entryPoint":22971,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":24089,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint64":{"entryPoint":22861,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":23133,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_calldata_ptr_to_t_bytes_storage":{"entryPoint":23208,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":23499,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":19789,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":22658,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":20248,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":22760,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":22738,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":22716,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":20226,"id":null,"parameterSlots":0,"returnSlots":0},"return_data_selector":{"entryPoint":23802,"id":null,"parameterSlots":0,"returnSlots":1},"try_decode_error_message":{"entryPoint":23830,"id":null,"parameterSlots":0,"returnSlots":1},"validator_revert_address":{"entryPoint":19648,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":21618,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":19738,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:50081:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"59:109:21","statements":[{"body":{"nodeType":"YulBlock","src":"146:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"155:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"158:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"148:6:21"},"nodeType":"YulFunctionCall","src":"148:12:21"},"nodeType":"YulExpressionStatement","src":"148:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"82:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"100:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"89:3:21"},"nodeType":"YulFunctionCall","src":"89:54:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79:2:21"},"nodeType":"YulFunctionCall","src":"79:65:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"72:6:21"},"nodeType":"YulFunctionCall","src":"72:73:21"},"nodeType":"YulIf","src":"69:93:21"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48:5:21","type":""}],"src":"14:154:21"},{"body":{"nodeType":"YulBlock","src":"260:228:21","statements":[{"body":{"nodeType":"YulBlock","src":"306:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"315:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"318:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"308:6:21"},"nodeType":"YulFunctionCall","src":"308:12:21"},"nodeType":"YulExpressionStatement","src":"308:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"281:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"290:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"277:3:21"},"nodeType":"YulFunctionCall","src":"277:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"302:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"273:3:21"},"nodeType":"YulFunctionCall","src":"273:32:21"},"nodeType":"YulIf","src":"270:52:21"},{"nodeType":"YulVariableDeclaration","src":"331:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"357:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"344:12:21"},"nodeType":"YulFunctionCall","src":"344:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"335:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"401:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"376:24:21"},"nodeType":"YulFunctionCall","src":"376:31:21"},"nodeType":"YulExpressionStatement","src":"376:31:21"},{"nodeType":"YulAssignment","src":"416:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"426:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"416:6:21"}]},{"nodeType":"YulAssignment","src":"440:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"467:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"463:3:21"},"nodeType":"YulFunctionCall","src":"463:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"450:12:21"},"nodeType":"YulFunctionCall","src":"450:32:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"440:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"218:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"229:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"241:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"249:6:21","type":""}],"src":"173:315:21"},{"body":{"nodeType":"YulBlock","src":"594:76:21","statements":[{"nodeType":"YulAssignment","src":"604:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"616:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"627:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"612:3:21"},"nodeType":"YulFunctionCall","src":"612:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"604:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"646:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"657:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"639:6:21"},"nodeType":"YulFunctionCall","src":"639:25:21"},"nodeType":"YulExpressionStatement","src":"639:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"563:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"574:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"585:4:21","type":""}],"src":"493:177:21"},{"body":{"nodeType":"YulBlock","src":"745:110:21","statements":[{"body":{"nodeType":"YulBlock","src":"791:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"800:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"803:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"793:6:21"},"nodeType":"YulFunctionCall","src":"793:12:21"},"nodeType":"YulExpressionStatement","src":"793:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"766:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"775:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"762:3:21"},"nodeType":"YulFunctionCall","src":"762:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"787:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"758:3:21"},"nodeType":"YulFunctionCall","src":"758:32:21"},"nodeType":"YulIf","src":"755:52:21"},{"nodeType":"YulAssignment","src":"816:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"839:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"826:12:21"},"nodeType":"YulFunctionCall","src":"826:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"816:6:21"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"711:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"722:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"734:6:21","type":""}],"src":"675:180:21"},{"body":{"nodeType":"YulBlock","src":"1013:253:21","statements":[{"nodeType":"YulAssignment","src":"1023:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1035:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1046:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1031:3:21"},"nodeType":"YulFunctionCall","src":"1031:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1023:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1065:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1080:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1088:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1076:3:21"},"nodeType":"YulFunctionCall","src":"1076:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1058:6:21"},"nodeType":"YulFunctionCall","src":"1058:74:21"},"nodeType":"YulExpressionStatement","src":"1058:74:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1152:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1163:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1148:3:21"},"nodeType":"YulFunctionCall","src":"1148:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1172:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1180:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1168:3:21"},"nodeType":"YulFunctionCall","src":"1168:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1141:6:21"},"nodeType":"YulFunctionCall","src":"1141:51:21"},"nodeType":"YulExpressionStatement","src":"1141:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1212:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1223:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1208:3:21"},"nodeType":"YulFunctionCall","src":"1208:18:21"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1232:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1240:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1228:3:21"},"nodeType":"YulFunctionCall","src":"1228:31:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1201:6:21"},"nodeType":"YulFunctionCall","src":"1201:59:21"},"nodeType":"YulExpressionStatement","src":"1201:59:21"}]},"name":"abi_encode_tuple_t_address_t_uint32_t_uint64__to_t_address_t_uint32_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"966:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"977:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"985:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"993:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1004:4:21","type":""}],"src":"860:406:21"},{"body":{"nodeType":"YulBlock","src":"1315:133:21","statements":[{"body":{"nodeType":"YulBlock","src":"1426:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1435:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1438:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1428:6:21"},"nodeType":"YulFunctionCall","src":"1428:12:21"},"nodeType":"YulExpressionStatement","src":"1428:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1338:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1349:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1356:66:21","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1345:3:21"},"nodeType":"YulFunctionCall","src":"1345:78:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1335:2:21"},"nodeType":"YulFunctionCall","src":"1335:89:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1328:6:21"},"nodeType":"YulFunctionCall","src":"1328:97:21"},"nodeType":"YulIf","src":"1325:117:21"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1304:5:21","type":""}],"src":"1271:177:21"},{"body":{"nodeType":"YulBlock","src":"1522:176:21","statements":[{"body":{"nodeType":"YulBlock","src":"1568:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1577:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1580:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1570:6:21"},"nodeType":"YulFunctionCall","src":"1570:12:21"},"nodeType":"YulExpressionStatement","src":"1570:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1543:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1552:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1539:3:21"},"nodeType":"YulFunctionCall","src":"1539:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1564:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1535:3:21"},"nodeType":"YulFunctionCall","src":"1535:32:21"},"nodeType":"YulIf","src":"1532:52:21"},{"nodeType":"YulVariableDeclaration","src":"1593:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1619:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1606:12:21"},"nodeType":"YulFunctionCall","src":"1606:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1597:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1662:5:21"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"1638:23:21"},"nodeType":"YulFunctionCall","src":"1638:30:21"},"nodeType":"YulExpressionStatement","src":"1638:30:21"},{"nodeType":"YulAssignment","src":"1677:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"1687:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1677:6:21"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1488:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1499:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1511:6:21","type":""}],"src":"1453:245:21"},{"body":{"nodeType":"YulBlock","src":"1798:92:21","statements":[{"nodeType":"YulAssignment","src":"1808:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1820:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1831:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1816:3:21"},"nodeType":"YulFunctionCall","src":"1816:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1808:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1850:9:21"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1875:6:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1868:6:21"},"nodeType":"YulFunctionCall","src":"1868:14:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1861:6:21"},"nodeType":"YulFunctionCall","src":"1861:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1843:6:21"},"nodeType":"YulFunctionCall","src":"1843:41:21"},"nodeType":"YulExpressionStatement","src":"1843:41:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1767:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1778:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1789:4:21","type":""}],"src":"1703:187:21"},{"body":{"nodeType":"YulBlock","src":"1961:184:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1971:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1980:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1975:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2040:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2065:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"2070:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2061:3:21"},"nodeType":"YulFunctionCall","src":"2061:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2084:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"2089:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2080:3:21"},"nodeType":"YulFunctionCall","src":"2080:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2074:5:21"},"nodeType":"YulFunctionCall","src":"2074:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2054:6:21"},"nodeType":"YulFunctionCall","src":"2054:39:21"},"nodeType":"YulExpressionStatement","src":"2054:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2001:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"2004:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1998:2:21"},"nodeType":"YulFunctionCall","src":"1998:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2012:19:21","statements":[{"nodeType":"YulAssignment","src":"2014:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2023:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"2026:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2019:3:21"},"nodeType":"YulFunctionCall","src":"2019:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2014:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"1994:3:21","statements":[]},"src":"1990:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2123:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2128:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2119:3:21"},"nodeType":"YulFunctionCall","src":"2119:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"2137:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2112:6:21"},"nodeType":"YulFunctionCall","src":"2112:27:21"},"nodeType":"YulExpressionStatement","src":"2112:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1939:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1944:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1949:6:21","type":""}],"src":"1895:250:21"},{"body":{"nodeType":"YulBlock","src":"2200:280:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2210:26:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2230:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2224:5:21"},"nodeType":"YulFunctionCall","src":"2224:12:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2214:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2252:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2257:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2245:6:21"},"nodeType":"YulFunctionCall","src":"2245:19:21"},"nodeType":"YulExpressionStatement","src":"2245:19:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2312:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2319:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2308:3:21"},"nodeType":"YulFunctionCall","src":"2308:16:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2330:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"2335:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2326:3:21"},"nodeType":"YulFunctionCall","src":"2326:14:21"},{"name":"length","nodeType":"YulIdentifier","src":"2342:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2273:34:21"},"nodeType":"YulFunctionCall","src":"2273:76:21"},"nodeType":"YulExpressionStatement","src":"2273:76:21"},{"nodeType":"YulAssignment","src":"2358:116:21","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2373:3:21"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2386:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2394:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2382:3:21"},"nodeType":"YulFunctionCall","src":"2382:15:21"},{"kind":"number","nodeType":"YulLiteral","src":"2399:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2378:3:21"},"nodeType":"YulFunctionCall","src":"2378:88:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2369:3:21"},"nodeType":"YulFunctionCall","src":"2369:98:21"},{"kind":"number","nodeType":"YulLiteral","src":"2469:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2365:3:21"},"nodeType":"YulFunctionCall","src":"2365:109:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2358:3:21"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2177:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2184:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2192:3:21","type":""}],"src":"2150:330:21"},{"body":{"nodeType":"YulBlock","src":"2606:99:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2623:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2634:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2616:6:21"},"nodeType":"YulFunctionCall","src":"2616:21:21"},"nodeType":"YulExpressionStatement","src":"2616:21:21"},{"nodeType":"YulAssignment","src":"2646:53:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2672:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2684:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2695:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2680:3:21"},"nodeType":"YulFunctionCall","src":"2680:18:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2654:17:21"},"nodeType":"YulFunctionCall","src":"2654:45:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2646:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2575:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2586:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2597:4:21","type":""}],"src":"2485:220:21"},{"body":{"nodeType":"YulBlock","src":"2758:123:21","statements":[{"nodeType":"YulAssignment","src":"2768:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2790:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2777:12:21"},"nodeType":"YulFunctionCall","src":"2777:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2768:5:21"}]},{"body":{"nodeType":"YulBlock","src":"2859:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2868:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2871:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2861:6:21"},"nodeType":"YulFunctionCall","src":"2861:12:21"},"nodeType":"YulExpressionStatement","src":"2861:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2819:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2830:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2837:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2826:3:21"},"nodeType":"YulFunctionCall","src":"2826:30:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2816:2:21"},"nodeType":"YulFunctionCall","src":"2816:41:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2809:6:21"},"nodeType":"YulFunctionCall","src":"2809:49:21"},"nodeType":"YulIf","src":"2806:69:21"}]},"name":"abi_decode_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2737:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2748:5:21","type":""}],"src":"2710:171:21"},{"body":{"nodeType":"YulBlock","src":"2972:166:21","statements":[{"body":{"nodeType":"YulBlock","src":"3018:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3027:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3030:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3020:6:21"},"nodeType":"YulFunctionCall","src":"3020:12:21"},"nodeType":"YulExpressionStatement","src":"3020:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2993:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3002:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2989:3:21"},"nodeType":"YulFunctionCall","src":"2989:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3014:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2985:3:21"},"nodeType":"YulFunctionCall","src":"2985:32:21"},"nodeType":"YulIf","src":"2982:52:21"},{"nodeType":"YulAssignment","src":"3043:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3066:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3053:12:21"},"nodeType":"YulFunctionCall","src":"3053:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3043:6:21"}]},{"nodeType":"YulAssignment","src":"3085:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3117:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3128:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3113:3:21"},"nodeType":"YulFunctionCall","src":"3113:18:21"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"3095:17:21"},"nodeType":"YulFunctionCall","src":"3095:37:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3085:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2930:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2941:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2953:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2961:6:21","type":""}],"src":"2886:252:21"},{"body":{"nodeType":"YulBlock","src":"3215:275:21","statements":[{"body":{"nodeType":"YulBlock","src":"3264:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3273:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3276:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3266:6:21"},"nodeType":"YulFunctionCall","src":"3266:12:21"},"nodeType":"YulExpressionStatement","src":"3266:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3243:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3251:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3239:3:21"},"nodeType":"YulFunctionCall","src":"3239:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"3258:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3235:3:21"},"nodeType":"YulFunctionCall","src":"3235:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3228:6:21"},"nodeType":"YulFunctionCall","src":"3228:35:21"},"nodeType":"YulIf","src":"3225:55:21"},{"nodeType":"YulAssignment","src":"3289:30:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3312:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3299:12:21"},"nodeType":"YulFunctionCall","src":"3299:20:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3289:6:21"}]},{"body":{"nodeType":"YulBlock","src":"3362:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3371:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3374:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3364:6:21"},"nodeType":"YulFunctionCall","src":"3364:12:21"},"nodeType":"YulExpressionStatement","src":"3364:12:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3334:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3342:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3331:2:21"},"nodeType":"YulFunctionCall","src":"3331:30:21"},"nodeType":"YulIf","src":"3328:50:21"},{"nodeType":"YulAssignment","src":"3387:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3403:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3411:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3399:3:21"},"nodeType":"YulFunctionCall","src":"3399:17:21"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"3387:8:21"}]},{"body":{"nodeType":"YulBlock","src":"3468:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3477:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3480:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3470:6:21"},"nodeType":"YulFunctionCall","src":"3470:12:21"},"nodeType":"YulExpressionStatement","src":"3470:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3439:6:21"},{"name":"length","nodeType":"YulIdentifier","src":"3447:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3435:3:21"},"nodeType":"YulFunctionCall","src":"3435:19:21"},{"kind":"number","nodeType":"YulLiteral","src":"3456:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3431:3:21"},"nodeType":"YulFunctionCall","src":"3431:30:21"},{"name":"end","nodeType":"YulIdentifier","src":"3463:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3428:2:21"},"nodeType":"YulFunctionCall","src":"3428:39:21"},"nodeType":"YulIf","src":"3425:59:21"}]},"name":"abi_decode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3178:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"3186:3:21","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"3194:8:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"3204:6:21","type":""}],"src":"3143:347:21"},{"body":{"nodeType":"YulBlock","src":"3635:614:21","statements":[{"body":{"nodeType":"YulBlock","src":"3682:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3691:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3694:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3684:6:21"},"nodeType":"YulFunctionCall","src":"3684:12:21"},"nodeType":"YulExpressionStatement","src":"3684:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3656:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3665:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3652:3:21"},"nodeType":"YulFunctionCall","src":"3652:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3677:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3648:3:21"},"nodeType":"YulFunctionCall","src":"3648:33:21"},"nodeType":"YulIf","src":"3645:53:21"},{"nodeType":"YulVariableDeclaration","src":"3707:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3733:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3720:12:21"},"nodeType":"YulFunctionCall","src":"3720:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3711:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3777:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3752:24:21"},"nodeType":"YulFunctionCall","src":"3752:31:21"},"nodeType":"YulExpressionStatement","src":"3752:31:21"},{"nodeType":"YulAssignment","src":"3792:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"3802:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3792:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"3816:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3848:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3859:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3844:3:21"},"nodeType":"YulFunctionCall","src":"3844:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3831:12:21"},"nodeType":"YulFunctionCall","src":"3831:32:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"3820:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"3897:7:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3872:24:21"},"nodeType":"YulFunctionCall","src":"3872:33:21"},"nodeType":"YulExpressionStatement","src":"3872:33:21"},{"nodeType":"YulAssignment","src":"3914:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"3924:7:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3914:6:21"}]},{"nodeType":"YulAssignment","src":"3940:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3967:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3978:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3963:3:21"},"nodeType":"YulFunctionCall","src":"3963:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3950:12:21"},"nodeType":"YulFunctionCall","src":"3950:32:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3940:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"3991:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4022:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4033:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4018:3:21"},"nodeType":"YulFunctionCall","src":"4018:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4005:12:21"},"nodeType":"YulFunctionCall","src":"4005:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3995:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"4080:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4089:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4092:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4082:6:21"},"nodeType":"YulFunctionCall","src":"4082:12:21"},"nodeType":"YulExpressionStatement","src":"4082:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4052:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4060:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4049:2:21"},"nodeType":"YulFunctionCall","src":"4049:30:21"},"nodeType":"YulIf","src":"4046:50:21"},{"nodeType":"YulVariableDeclaration","src":"4105:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4161:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4172:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4157:3:21"},"nodeType":"YulFunctionCall","src":"4157:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4181:7:21"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"4131:25:21"},"nodeType":"YulFunctionCall","src":"4131:58:21"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"4109:8:21","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"4119:8:21","type":""}]},{"nodeType":"YulAssignment","src":"4198:18:21","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"4208:8:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4198:6:21"}]},{"nodeType":"YulAssignment","src":"4225:18:21","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"4235:8:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4225:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3569:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3580:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3592:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3600:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3608:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3616:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3624:6:21","type":""}],"src":"3495:754:21"},{"body":{"nodeType":"YulBlock","src":"4353:149:21","statements":[{"nodeType":"YulAssignment","src":"4363:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4375:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4386:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4371:3:21"},"nodeType":"YulFunctionCall","src":"4371:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4363:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4405:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4420:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4428:66:21","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4416:3:21"},"nodeType":"YulFunctionCall","src":"4416:79:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4398:6:21"},"nodeType":"YulFunctionCall","src":"4398:98:21"},"nodeType":"YulExpressionStatement","src":"4398:98:21"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4322:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4333:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4344:4:21","type":""}],"src":"4254:248:21"},{"body":{"nodeType":"YulBlock","src":"4602:177:21","statements":[{"body":{"nodeType":"YulBlock","src":"4648:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4657:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4660:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4650:6:21"},"nodeType":"YulFunctionCall","src":"4650:12:21"},"nodeType":"YulExpressionStatement","src":"4650:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4623:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4632:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4619:3:21"},"nodeType":"YulFunctionCall","src":"4619:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4644:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4615:3:21"},"nodeType":"YulFunctionCall","src":"4615:32:21"},"nodeType":"YulIf","src":"4612:52:21"},{"nodeType":"YulVariableDeclaration","src":"4673:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4699:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4686:12:21"},"nodeType":"YulFunctionCall","src":"4686:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4677:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4743:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4718:24:21"},"nodeType":"YulFunctionCall","src":"4718:31:21"},"nodeType":"YulExpressionStatement","src":"4718:31:21"},{"nodeType":"YulAssignment","src":"4758:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"4768:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4758:6:21"}]}]},"name":"abi_decode_tuple_t_contract$_IMetadataService_$2253","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4568:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4579:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4591:6:21","type":""}],"src":"4507:272:21"},{"body":{"nodeType":"YulBlock","src":"4871:228:21","statements":[{"body":{"nodeType":"YulBlock","src":"4917:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4926:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4929:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4919:6:21"},"nodeType":"YulFunctionCall","src":"4919:12:21"},"nodeType":"YulExpressionStatement","src":"4919:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4892:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4901:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4888:3:21"},"nodeType":"YulFunctionCall","src":"4888:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4913:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4884:3:21"},"nodeType":"YulFunctionCall","src":"4884:32:21"},"nodeType":"YulIf","src":"4881:52:21"},{"nodeType":"YulAssignment","src":"4942:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4965:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4952:12:21"},"nodeType":"YulFunctionCall","src":"4952:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4942:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"4984:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5014:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5025:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5010:3:21"},"nodeType":"YulFunctionCall","src":"5010:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4997:12:21"},"nodeType":"YulFunctionCall","src":"4997:32:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4988:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5063:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5038:24:21"},"nodeType":"YulFunctionCall","src":"5038:31:21"},"nodeType":"YulExpressionStatement","src":"5038:31:21"},{"nodeType":"YulAssignment","src":"5078:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"5088:5:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5078:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4829:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4840:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4852:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4860:6:21","type":""}],"src":"4784:315:21"},{"body":{"nodeType":"YulBlock","src":"5233:125:21","statements":[{"nodeType":"YulAssignment","src":"5243:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5255:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5266:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5251:3:21"},"nodeType":"YulFunctionCall","src":"5251:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5243:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5285:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5300:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5308:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5296:3:21"},"nodeType":"YulFunctionCall","src":"5296:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5278:6:21"},"nodeType":"YulFunctionCall","src":"5278:74:21"},"nodeType":"YulExpressionStatement","src":"5278:74:21"}]},"name":"abi_encode_tuple_t_contract$_INameWrapperUpgrade_$2580__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5202:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5213:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5224:4:21","type":""}],"src":"5104:254:21"},{"body":{"nodeType":"YulBlock","src":"5433:110:21","statements":[{"body":{"nodeType":"YulBlock","src":"5479:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5488:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5491:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5481:6:21"},"nodeType":"YulFunctionCall","src":"5481:12:21"},"nodeType":"YulExpressionStatement","src":"5481:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5454:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5463:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5450:3:21"},"nodeType":"YulFunctionCall","src":"5450:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"5475:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5446:3:21"},"nodeType":"YulFunctionCall","src":"5446:32:21"},"nodeType":"YulIf","src":"5443:52:21"},{"nodeType":"YulAssignment","src":"5504:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5527:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5514:12:21"},"nodeType":"YulFunctionCall","src":"5514:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5504:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5399:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5410:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5422:6:21","type":""}],"src":"5363:180:21"},{"body":{"nodeType":"YulBlock","src":"5667:99:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5684:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5695:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5677:6:21"},"nodeType":"YulFunctionCall","src":"5677:21:21"},"nodeType":"YulExpressionStatement","src":"5677:21:21"},{"nodeType":"YulAssignment","src":"5707:53:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5733:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5745:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5756:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5741:3:21"},"nodeType":"YulFunctionCall","src":"5741:18:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"5715:17:21"},"nodeType":"YulFunctionCall","src":"5715:45:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5707:4:21"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5636:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5647:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5658:4:21","type":""}],"src":"5548:218:21"},{"body":{"nodeType":"YulBlock","src":"5803:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5820:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5823:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5813:6:21"},"nodeType":"YulFunctionCall","src":"5813:88:21"},"nodeType":"YulExpressionStatement","src":"5813:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5917:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5920:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5910:6:21"},"nodeType":"YulFunctionCall","src":"5910:15:21"},"nodeType":"YulExpressionStatement","src":"5910:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5941:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5944:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5934:6:21"},"nodeType":"YulFunctionCall","src":"5934:15:21"},"nodeType":"YulExpressionStatement","src":"5934:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5771:184:21"},{"body":{"nodeType":"YulBlock","src":"6007:261:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6017:117:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6039:6:21"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6055:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"6061:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6051:3:21"},"nodeType":"YulFunctionCall","src":"6051:13:21"},{"kind":"number","nodeType":"YulLiteral","src":"6066:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:21"},"nodeType":"YulFunctionCall","src":"6047:86:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6035:3:21"},"nodeType":"YulFunctionCall","src":"6035:99:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6021:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"6209:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6211:16:21"},"nodeType":"YulFunctionCall","src":"6211:18:21"},"nodeType":"YulExpressionStatement","src":"6211:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6152:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"6164:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6149:2:21"},"nodeType":"YulFunctionCall","src":"6149:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6188:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6200:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6185:2:21"},"nodeType":"YulFunctionCall","src":"6185:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6146:2:21"},"nodeType":"YulFunctionCall","src":"6146:62:21"},"nodeType":"YulIf","src":"6143:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6247:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6251:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6240:6:21"},"nodeType":"YulFunctionCall","src":"6240:22:21"},"nodeType":"YulExpressionStatement","src":"6240:22:21"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5989:6:21","type":""},{"name":"size","nodeType":"YulTypedName","src":"5997:4:21","type":""}],"src":"5960:308:21"},{"body":{"nodeType":"YulBlock","src":"6331:188:21","statements":[{"body":{"nodeType":"YulBlock","src":"6375:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6377:16:21"},"nodeType":"YulFunctionCall","src":"6377:18:21"},"nodeType":"YulExpressionStatement","src":"6377:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6347:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6355:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6344:2:21"},"nodeType":"YulFunctionCall","src":"6344:30:21"},"nodeType":"YulIf","src":"6341:56:21"},{"nodeType":"YulAssignment","src":"6406:107:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6426:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6434:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6422:3:21"},"nodeType":"YulFunctionCall","src":"6422:15:21"},{"kind":"number","nodeType":"YulLiteral","src":"6439:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6418:3:21"},"nodeType":"YulFunctionCall","src":"6418:88:21"},{"kind":"number","nodeType":"YulLiteral","src":"6508:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6414:3:21"},"nodeType":"YulFunctionCall","src":"6414:99:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6406:4:21"}]}]},"name":"array_allocation_size_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6311:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6322:4:21","type":""}],"src":"6273:246:21"},{"body":{"nodeType":"YulBlock","src":"6577:457:21","statements":[{"body":{"nodeType":"YulBlock","src":"6626:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6635:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6638:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6628:6:21"},"nodeType":"YulFunctionCall","src":"6628:12:21"},"nodeType":"YulExpressionStatement","src":"6628:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6605:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6613:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6601:3:21"},"nodeType":"YulFunctionCall","src":"6601:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"6620:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6597:3:21"},"nodeType":"YulFunctionCall","src":"6597:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6590:6:21"},"nodeType":"YulFunctionCall","src":"6590:35:21"},"nodeType":"YulIf","src":"6587:55:21"},{"nodeType":"YulVariableDeclaration","src":"6651:30:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6674:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6661:12:21"},"nodeType":"YulFunctionCall","src":"6661:20:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6655:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6690:42:21","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6729:2:21"}],"functionName":{"name":"array_allocation_size_string","nodeType":"YulIdentifier","src":"6700:28:21"},"nodeType":"YulFunctionCall","src":"6700:32:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"6694:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6741:23:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6761:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6755:5:21"},"nodeType":"YulFunctionCall","src":"6755:9:21"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6745:6:21","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6793:6:21"},{"name":"_2","nodeType":"YulIdentifier","src":"6801:2:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"6773:19:21"},"nodeType":"YulFunctionCall","src":"6773:31:21"},"nodeType":"YulExpressionStatement","src":"6773:31:21"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6820:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"6828:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6813:6:21"},"nodeType":"YulFunctionCall","src":"6813:18:21"},"nodeType":"YulExpressionStatement","src":"6813:18:21"},{"body":{"nodeType":"YulBlock","src":"6879:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6888:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6891:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6881:6:21"},"nodeType":"YulFunctionCall","src":"6881:12:21"},"nodeType":"YulExpressionStatement","src":"6881:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6854:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"6862:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6850:3:21"},"nodeType":"YulFunctionCall","src":"6850:15:21"},{"kind":"number","nodeType":"YulLiteral","src":"6867:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6846:3:21"},"nodeType":"YulFunctionCall","src":"6846:26:21"},{"name":"end","nodeType":"YulIdentifier","src":"6874:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6843:2:21"},"nodeType":"YulFunctionCall","src":"6843:35:21"},"nodeType":"YulIf","src":"6840:55:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6921:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6929:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6917:3:21"},"nodeType":"YulFunctionCall","src":"6917:17:21"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6940:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6948:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6936:3:21"},"nodeType":"YulFunctionCall","src":"6936:17:21"},{"name":"_1","nodeType":"YulIdentifier","src":"6955:2:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"6904:12:21"},"nodeType":"YulFunctionCall","src":"6904:54:21"},"nodeType":"YulExpressionStatement","src":"6904:54:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6982:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"6990:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6978:3:21"},"nodeType":"YulFunctionCall","src":"6978:15:21"},{"kind":"number","nodeType":"YulLiteral","src":"6995:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6974:3:21"},"nodeType":"YulFunctionCall","src":"6974:26:21"},{"kind":"number","nodeType":"YulLiteral","src":"7002:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6967:6:21"},"nodeType":"YulFunctionCall","src":"6967:37:21"},"nodeType":"YulExpressionStatement","src":"6967:37:21"},{"nodeType":"YulAssignment","src":"7013:15:21","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"7022:6:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7013:5:21"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6551:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"6559:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6567:5:21","type":""}],"src":"6524:510:21"},{"body":{"nodeType":"YulBlock","src":"7087:115:21","statements":[{"nodeType":"YulAssignment","src":"7097:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7119:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7106:12:21"},"nodeType":"YulFunctionCall","src":"7106:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7097:5:21"}]},{"body":{"nodeType":"YulBlock","src":"7180:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7189:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7192:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7182:6:21"},"nodeType":"YulFunctionCall","src":"7182:12:21"},"nodeType":"YulExpressionStatement","src":"7182:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7148:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7159:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"7166:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7155:3:21"},"nodeType":"YulFunctionCall","src":"7155:22:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7145:2:21"},"nodeType":"YulFunctionCall","src":"7145:33:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7138:6:21"},"nodeType":"YulFunctionCall","src":"7138:41:21"},"nodeType":"YulIf","src":"7135:61:21"}]},"name":"abi_decode_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7066:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7077:5:21","type":""}],"src":"7039:163:21"},{"body":{"nodeType":"YulBlock","src":"7386:707:21","statements":[{"body":{"nodeType":"YulBlock","src":"7433:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7442:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7445:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7435:6:21"},"nodeType":"YulFunctionCall","src":"7435:12:21"},"nodeType":"YulExpressionStatement","src":"7435:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7407:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"7416:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7403:3:21"},"nodeType":"YulFunctionCall","src":"7403:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"7428:3:21","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7399:3:21"},"nodeType":"YulFunctionCall","src":"7399:33:21"},"nodeType":"YulIf","src":"7396:53:21"},{"nodeType":"YulAssignment","src":"7458:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7481:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7468:12:21"},"nodeType":"YulFunctionCall","src":"7468:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7458:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"7500:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7531:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7542:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7527:3:21"},"nodeType":"YulFunctionCall","src":"7527:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7514:12:21"},"nodeType":"YulFunctionCall","src":"7514:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7504:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7589:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7598:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7601:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7591:6:21"},"nodeType":"YulFunctionCall","src":"7591:12:21"},"nodeType":"YulExpressionStatement","src":"7591:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7561:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7569:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7558:2:21"},"nodeType":"YulFunctionCall","src":"7558:30:21"},"nodeType":"YulIf","src":"7555:50:21"},{"nodeType":"YulAssignment","src":"7614:60:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7646:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7657:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7642:3:21"},"nodeType":"YulFunctionCall","src":"7642:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7666:7:21"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"7624:17:21"},"nodeType":"YulFunctionCall","src":"7624:50:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7614:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"7683:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7713:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7724:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7709:3:21"},"nodeType":"YulFunctionCall","src":"7709:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7696:12:21"},"nodeType":"YulFunctionCall","src":"7696:32:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7687:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7762:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7737:24:21"},"nodeType":"YulFunctionCall","src":"7737:31:21"},"nodeType":"YulExpressionStatement","src":"7737:31:21"},{"nodeType":"YulAssignment","src":"7777:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"7787:5:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7777:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"7801:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7833:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7844:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7829:3:21"},"nodeType":"YulFunctionCall","src":"7829:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7816:12:21"},"nodeType":"YulFunctionCall","src":"7816:32:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"7805:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"7882:7:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7857:24:21"},"nodeType":"YulFunctionCall","src":"7857:33:21"},"nodeType":"YulExpressionStatement","src":"7857:33:21"},{"nodeType":"YulAssignment","src":"7899:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"7909:7:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7899:6:21"}]},{"nodeType":"YulAssignment","src":"7925:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7957:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7968:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7953:3:21"},"nodeType":"YulFunctionCall","src":"7953:19:21"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"7935:17:21"},"nodeType":"YulFunctionCall","src":"7935:38:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7925:6:21"}]},{"nodeType":"YulAssignment","src":"7982:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8014:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8025:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8010:3:21"},"nodeType":"YulFunctionCall","src":"8010:19:21"}],"functionName":{"name":"abi_decode_uint32","nodeType":"YulIdentifier","src":"7992:17:21"},"nodeType":"YulFunctionCall","src":"7992:38:21"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7982:6:21"}]},{"nodeType":"YulAssignment","src":"8039:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8071:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8082:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8067:3:21"},"nodeType":"YulFunctionCall","src":"8067:19:21"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"8049:17:21"},"nodeType":"YulFunctionCall","src":"8049:38:21"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"8039:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32t_string_memory_ptrt_addresst_addresst_uint64t_uint32t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7304:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7315:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7327:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7335:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7343:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7351:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7359:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"7367:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"7375:6:21","type":""}],"src":"7207:886:21"},{"body":{"nodeType":"YulBlock","src":"8199:76:21","statements":[{"nodeType":"YulAssignment","src":"8209:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8221:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8232:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8217:3:21"},"nodeType":"YulFunctionCall","src":"8217:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8209:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8251:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"8262:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8244:6:21"},"nodeType":"YulFunctionCall","src":"8244:25:21"},"nodeType":"YulExpressionStatement","src":"8244:25:21"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8168:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8179:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8190:4:21","type":""}],"src":"8098:177:21"},{"body":{"nodeType":"YulBlock","src":"8403:125:21","statements":[{"nodeType":"YulAssignment","src":"8413:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8425:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8436:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8421:3:21"},"nodeType":"YulFunctionCall","src":"8421:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8413:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8455:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8470:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8478:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8466:3:21"},"nodeType":"YulFunctionCall","src":"8466:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8448:6:21"},"nodeType":"YulFunctionCall","src":"8448:74:21"},"nodeType":"YulExpressionStatement","src":"8448:74:21"}]},"name":"abi_encode_tuple_t_contract$_IBaseRegistrar_$985__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8372:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8383:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8394:4:21","type":""}],"src":"8280:248:21"},{"body":{"nodeType":"YulBlock","src":"8602:114:21","statements":[{"body":{"nodeType":"YulBlock","src":"8646:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8648:16:21"},"nodeType":"YulFunctionCall","src":"8648:18:21"},"nodeType":"YulExpressionStatement","src":"8648:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8618:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8626:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8615:2:21"},"nodeType":"YulFunctionCall","src":"8615:30:21"},"nodeType":"YulIf","src":"8612:56:21"},{"nodeType":"YulAssignment","src":"8677:33:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8693:1:21","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"8696:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8689:3:21"},"nodeType":"YulFunctionCall","src":"8689:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"8705:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8685:3:21"},"nodeType":"YulFunctionCall","src":"8685:25:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8677:4:21"}]}]},"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"8582:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"8593:4:21","type":""}],"src":"8533:183:21"},{"body":{"nodeType":"YulBlock","src":"8785:660:21","statements":[{"body":{"nodeType":"YulBlock","src":"8834:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8843:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8846:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8836:6:21"},"nodeType":"YulFunctionCall","src":"8836:12:21"},"nodeType":"YulExpressionStatement","src":"8836:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8813:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8821:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8809:3:21"},"nodeType":"YulFunctionCall","src":"8809:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"8828:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8805:3:21"},"nodeType":"YulFunctionCall","src":"8805:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8798:6:21"},"nodeType":"YulFunctionCall","src":"8798:35:21"},"nodeType":"YulIf","src":"8795:55:21"},{"nodeType":"YulVariableDeclaration","src":"8859:30:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8882:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8869:12:21"},"nodeType":"YulFunctionCall","src":"8869:20:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8863:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8898:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8908:4:21","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"8902:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8921:53:21","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8971:2:21"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"8931:39:21"},"nodeType":"YulFunctionCall","src":"8931:43:21"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"8925:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8983:23:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9003:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:21"},"nodeType":"YulFunctionCall","src":"8997:9:21"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"8987:6:21","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9035:6:21"},{"name":"_3","nodeType":"YulIdentifier","src":"9043:2:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"9015:19:21"},"nodeType":"YulFunctionCall","src":"9015:31:21"},"nodeType":"YulExpressionStatement","src":"9015:31:21"},{"nodeType":"YulVariableDeclaration","src":"9055:17:21","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"9066:6:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"9059:3:21","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9088:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"9096:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9081:6:21"},"nodeType":"YulFunctionCall","src":"9081:18:21"},"nodeType":"YulExpressionStatement","src":"9081:18:21"},{"nodeType":"YulAssignment","src":"9108:22:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9119:6:21"},{"name":"_2","nodeType":"YulIdentifier","src":"9127:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9115:3:21"},"nodeType":"YulFunctionCall","src":"9115:15:21"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"9108:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"9139:46:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9161:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9173:1:21","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"9176:2:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9169:3:21"},"nodeType":"YulFunctionCall","src":"9169:10:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9157:3:21"},"nodeType":"YulFunctionCall","src":"9157:23:21"},{"name":"_2","nodeType":"YulIdentifier","src":"9182:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9153:3:21"},"nodeType":"YulFunctionCall","src":"9153:32:21"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"9143:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"9213:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9222:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9225:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9215:6:21"},"nodeType":"YulFunctionCall","src":"9215:12:21"},"nodeType":"YulExpressionStatement","src":"9215:12:21"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"9200:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"9208:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9197:2:21"},"nodeType":"YulFunctionCall","src":"9197:15:21"},"nodeType":"YulIf","src":"9194:35:21"},{"nodeType":"YulVariableDeclaration","src":"9238:26:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9253:6:21"},{"name":"_2","nodeType":"YulIdentifier","src":"9261:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9249:3:21"},"nodeType":"YulFunctionCall","src":"9249:15:21"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"9242:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"9329:86:21","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9350:3:21"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9368:3:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9355:12:21"},"nodeType":"YulFunctionCall","src":"9355:17:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9343:6:21"},"nodeType":"YulFunctionCall","src":"9343:30:21"},"nodeType":"YulExpressionStatement","src":"9343:30:21"},{"nodeType":"YulAssignment","src":"9386:19:21","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9397:3:21"},{"name":"_2","nodeType":"YulIdentifier","src":"9402:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9393:3:21"},"nodeType":"YulFunctionCall","src":"9393:12:21"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"9386:3:21"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9284:3:21"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"9289:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9281:2:21"},"nodeType":"YulFunctionCall","src":"9281:15:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9297:23:21","statements":[{"nodeType":"YulAssignment","src":"9299:19:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9310:3:21"},{"name":"_2","nodeType":"YulIdentifier","src":"9315:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9306:3:21"},"nodeType":"YulFunctionCall","src":"9306:12:21"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"9299:3:21"}]}]},"pre":{"nodeType":"YulBlock","src":"9277:3:21","statements":[]},"src":"9273:142:21"},{"nodeType":"YulAssignment","src":"9424:15:21","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"9433:6:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9424:5:21"}]}]},"name":"abi_decode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8759:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"8767:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8775:5:21","type":""}],"src":"8721:724:21"},{"body":{"nodeType":"YulBlock","src":"9647:875:21","statements":[{"body":{"nodeType":"YulBlock","src":"9694:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9703:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9706:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9696:6:21"},"nodeType":"YulFunctionCall","src":"9696:12:21"},"nodeType":"YulExpressionStatement","src":"9696:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9668:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"9677:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9664:3:21"},"nodeType":"YulFunctionCall","src":"9664:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"9689:3:21","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9660:3:21"},"nodeType":"YulFunctionCall","src":"9660:33:21"},"nodeType":"YulIf","src":"9657:53:21"},{"nodeType":"YulVariableDeclaration","src":"9719:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9745:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9732:12:21"},"nodeType":"YulFunctionCall","src":"9732:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9723:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9789:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9764:24:21"},"nodeType":"YulFunctionCall","src":"9764:31:21"},"nodeType":"YulExpressionStatement","src":"9764:31:21"},{"nodeType":"YulAssignment","src":"9804:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"9814:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9804:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"9828:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9860:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9871:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9856:3:21"},"nodeType":"YulFunctionCall","src":"9856:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9843:12:21"},"nodeType":"YulFunctionCall","src":"9843:32:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"9832:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"9909:7:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9884:24:21"},"nodeType":"YulFunctionCall","src":"9884:33:21"},"nodeType":"YulExpressionStatement","src":"9884:33:21"},{"nodeType":"YulAssignment","src":"9926:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"9936:7:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9926:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"9952:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9983:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9994:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9979:3:21"},"nodeType":"YulFunctionCall","src":"9979:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9966:12:21"},"nodeType":"YulFunctionCall","src":"9966:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9956:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10007:28:21","value":{"kind":"number","nodeType":"YulLiteral","src":"10017:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10011:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"10062:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10071:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10074:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10064:6:21"},"nodeType":"YulFunctionCall","src":"10064:12:21"},"nodeType":"YulExpressionStatement","src":"10064:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10050:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"10058:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10047:2:21"},"nodeType":"YulFunctionCall","src":"10047:14:21"},"nodeType":"YulIf","src":"10044:34:21"},{"nodeType":"YulAssignment","src":"10087:71:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10130:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"10141:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10126:3:21"},"nodeType":"YulFunctionCall","src":"10126:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10150:7:21"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"10097:28:21"},"nodeType":"YulFunctionCall","src":"10097:61:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10087:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"10167:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10200:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10211:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10196:3:21"},"nodeType":"YulFunctionCall","src":"10196:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10183:12:21"},"nodeType":"YulFunctionCall","src":"10183:32:21"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"10171:8:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"10244:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10253:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10256:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10246:6:21"},"nodeType":"YulFunctionCall","src":"10246:12:21"},"nodeType":"YulExpressionStatement","src":"10246:12:21"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"10230:8:21"},{"name":"_1","nodeType":"YulIdentifier","src":"10240:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10227:2:21"},"nodeType":"YulFunctionCall","src":"10227:16:21"},"nodeType":"YulIf","src":"10224:36:21"},{"nodeType":"YulAssignment","src":"10269:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10312:9:21"},{"name":"offset_1","nodeType":"YulIdentifier","src":"10323:8:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10308:3:21"},"nodeType":"YulFunctionCall","src":"10308:24:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10334:7:21"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"10279:28:21"},"nodeType":"YulFunctionCall","src":"10279:63:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10269:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"10351:49:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10384:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10395:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10380:3:21"},"nodeType":"YulFunctionCall","src":"10380:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10367:12:21"},"nodeType":"YulFunctionCall","src":"10367:33:21"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"10355:8:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"10429:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10438:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10441:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10431:6:21"},"nodeType":"YulFunctionCall","src":"10431:12:21"},"nodeType":"YulExpressionStatement","src":"10431:12:21"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"10415:8:21"},{"name":"_1","nodeType":"YulIdentifier","src":"10425:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10412:2:21"},"nodeType":"YulFunctionCall","src":"10412:16:21"},"nodeType":"YulIf","src":"10409:36:21"},{"nodeType":"YulAssignment","src":"10454:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10486:9:21"},{"name":"offset_2","nodeType":"YulIdentifier","src":"10497:8:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10482:3:21"},"nodeType":"YulFunctionCall","src":"10482:24:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10508:7:21"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"10464:17:21"},"nodeType":"YulFunctionCall","src":"10464:52:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"10454:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9581:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9592:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9604:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9612:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9620:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9628:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9636:6:21","type":""}],"src":"9450:1072:21"},{"body":{"nodeType":"YulBlock","src":"10646:274:21","statements":[{"body":{"nodeType":"YulBlock","src":"10693:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10702:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10705:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10695:6:21"},"nodeType":"YulFunctionCall","src":"10695:12:21"},"nodeType":"YulExpressionStatement","src":"10695:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10667:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"10676:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10663:3:21"},"nodeType":"YulFunctionCall","src":"10663:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"10688:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10659:3:21"},"nodeType":"YulFunctionCall","src":"10659:33:21"},"nodeType":"YulIf","src":"10656:53:21"},{"nodeType":"YulAssignment","src":"10718:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10741:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10728:12:21"},"nodeType":"YulFunctionCall","src":"10728:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10718:6:21"}]},{"nodeType":"YulAssignment","src":"10760:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10787:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10798:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10783:3:21"},"nodeType":"YulFunctionCall","src":"10783:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10770:12:21"},"nodeType":"YulFunctionCall","src":"10770:32:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10760:6:21"}]},{"nodeType":"YulAssignment","src":"10811:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10843:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10854:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10839:3:21"},"nodeType":"YulFunctionCall","src":"10839:18:21"}],"functionName":{"name":"abi_decode_uint32","nodeType":"YulIdentifier","src":"10821:17:21"},"nodeType":"YulFunctionCall","src":"10821:37:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10811:6:21"}]},{"nodeType":"YulAssignment","src":"10867:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10899:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10910:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10895:3:21"},"nodeType":"YulFunctionCall","src":"10895:18:21"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"10877:17:21"},"nodeType":"YulFunctionCall","src":"10877:37:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10867:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes32t_uint32t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10588:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10599:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10611:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10619:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10627:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10635:6:21","type":""}],"src":"10527:393:21"},{"body":{"nodeType":"YulBlock","src":"11038:125:21","statements":[{"nodeType":"YulAssignment","src":"11048:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11060:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11071:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11056:3:21"},"nodeType":"YulFunctionCall","src":"11056:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11048:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11090:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11105:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"11113:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11101:3:21"},"nodeType":"YulFunctionCall","src":"11101:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11083:6:21"},"nodeType":"YulFunctionCall","src":"11083:74:21"},"nodeType":"YulExpressionStatement","src":"11083:74:21"}]},"name":"abi_encode_tuple_t_contract$_ENS_$1122__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11007:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11018:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11029:4:21","type":""}],"src":"10925:238:21"},{"body":{"nodeType":"YulBlock","src":"11216:111:21","statements":[{"nodeType":"YulAssignment","src":"11226:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11248:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11235:12:21"},"nodeType":"YulFunctionCall","src":"11235:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11226:5:21"}]},{"body":{"nodeType":"YulBlock","src":"11305:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11314:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11317:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11307:6:21"},"nodeType":"YulFunctionCall","src":"11307:12:21"},"nodeType":"YulExpressionStatement","src":"11307:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11277:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11288:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"11295:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11284:3:21"},"nodeType":"YulFunctionCall","src":"11284:18:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11274:2:21"},"nodeType":"YulFunctionCall","src":"11274:29:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11267:6:21"},"nodeType":"YulFunctionCall","src":"11267:37:21"},"nodeType":"YulIf","src":"11264:57:21"}]},"name":"abi_decode_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11195:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11206:5:21","type":""}],"src":"11168:159:21"},{"body":{"nodeType":"YulBlock","src":"11418:166:21","statements":[{"body":{"nodeType":"YulBlock","src":"11464:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11473:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11476:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11466:6:21"},"nodeType":"YulFunctionCall","src":"11466:12:21"},"nodeType":"YulExpressionStatement","src":"11466:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11439:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"11448:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11435:3:21"},"nodeType":"YulFunctionCall","src":"11435:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"11460:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11431:3:21"},"nodeType":"YulFunctionCall","src":"11431:32:21"},"nodeType":"YulIf","src":"11428:52:21"},{"nodeType":"YulAssignment","src":"11489:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11512:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11499:12:21"},"nodeType":"YulFunctionCall","src":"11499:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11489:6:21"}]},{"nodeType":"YulAssignment","src":"11531:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11563:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11574:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11559:3:21"},"nodeType":"YulFunctionCall","src":"11559:18:21"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"11541:17:21"},"nodeType":"YulFunctionCall","src":"11541:37:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11531:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11376:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11387:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11399:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11407:6:21","type":""}],"src":"11332:252:21"},{"body":{"nodeType":"YulBlock","src":"11688:93:21","statements":[{"nodeType":"YulAssignment","src":"11698:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11710:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11721:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11706:3:21"},"nodeType":"YulFunctionCall","src":"11706:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11698:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11740:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11755:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"11763:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11751:3:21"},"nodeType":"YulFunctionCall","src":"11751:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11733:6:21"},"nodeType":"YulFunctionCall","src":"11733:42:21"},"nodeType":"YulExpressionStatement","src":"11733:42:21"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11657:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11668:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11679:4:21","type":""}],"src":"11589:192:21"},{"body":{"nodeType":"YulBlock","src":"11923:1140:21","statements":[{"body":{"nodeType":"YulBlock","src":"11969:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11978:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11981:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11971:6:21"},"nodeType":"YulFunctionCall","src":"11971:12:21"},"nodeType":"YulExpressionStatement","src":"11971:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11944:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"11953:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11940:3:21"},"nodeType":"YulFunctionCall","src":"11940:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"11965:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11936:3:21"},"nodeType":"YulFunctionCall","src":"11936:32:21"},"nodeType":"YulIf","src":"11933:52:21"},{"nodeType":"YulVariableDeclaration","src":"11994:37:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12021:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12008:12:21"},"nodeType":"YulFunctionCall","src":"12008:23:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11998:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12040:28:21","value":{"kind":"number","nodeType":"YulLiteral","src":"12050:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12044:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"12095:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12104:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12107:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12097:6:21"},"nodeType":"YulFunctionCall","src":"12097:12:21"},"nodeType":"YulExpressionStatement","src":"12097:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12083:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"12091:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12080:2:21"},"nodeType":"YulFunctionCall","src":"12080:14:21"},"nodeType":"YulIf","src":"12077:34:21"},{"nodeType":"YulVariableDeclaration","src":"12120:32:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12134:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"12145:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12130:3:21"},"nodeType":"YulFunctionCall","src":"12130:22:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"12124:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"12200:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12209:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12212:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12202:6:21"},"nodeType":"YulFunctionCall","src":"12202:12:21"},"nodeType":"YulExpressionStatement","src":"12202:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"12179:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"12183:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12175:3:21"},"nodeType":"YulFunctionCall","src":"12175:13:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12190:7:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12171:3:21"},"nodeType":"YulFunctionCall","src":"12171:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12164:6:21"},"nodeType":"YulFunctionCall","src":"12164:35:21"},"nodeType":"YulIf","src":"12161:55:21"},{"nodeType":"YulVariableDeclaration","src":"12225:26:21","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"12248:2:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12235:12:21"},"nodeType":"YulFunctionCall","src":"12235:16:21"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"12229:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12260:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"12270:4:21","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"12264:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12283:53:21","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"12333:2:21"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"12293:39:21"},"nodeType":"YulFunctionCall","src":"12293:43:21"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"12287:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12345:23:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12365:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12359:5:21"},"nodeType":"YulFunctionCall","src":"12359:9:21"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"12349:6:21","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12397:6:21"},{"name":"_5","nodeType":"YulIdentifier","src":"12405:2:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"12377:19:21"},"nodeType":"YulFunctionCall","src":"12377:31:21"},"nodeType":"YulExpressionStatement","src":"12377:31:21"},{"nodeType":"YulVariableDeclaration","src":"12417:17:21","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"12428:6:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"12421:3:21","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12450:6:21"},{"name":"_3","nodeType":"YulIdentifier","src":"12458:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12443:6:21"},"nodeType":"YulFunctionCall","src":"12443:18:21"},"nodeType":"YulExpressionStatement","src":"12443:18:21"},{"nodeType":"YulAssignment","src":"12470:22:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12481:6:21"},{"name":"_4","nodeType":"YulIdentifier","src":"12489:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12477:3:21"},"nodeType":"YulFunctionCall","src":"12477:15:21"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"12470:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"12501:42:21","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"12523:2:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12531:1:21","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"12534:2:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12527:3:21"},"nodeType":"YulFunctionCall","src":"12527:10:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12519:3:21"},"nodeType":"YulFunctionCall","src":"12519:19:21"},{"name":"_4","nodeType":"YulIdentifier","src":"12540:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12515:3:21"},"nodeType":"YulFunctionCall","src":"12515:28:21"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"12505:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"12575:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12584:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12587:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12577:6:21"},"nodeType":"YulFunctionCall","src":"12577:12:21"},"nodeType":"YulExpressionStatement","src":"12577:12:21"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"12558:6:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12566:7:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12555:2:21"},"nodeType":"YulFunctionCall","src":"12555:19:21"},"nodeType":"YulIf","src":"12552:39:21"},{"nodeType":"YulVariableDeclaration","src":"12600:22:21","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"12615:2:21"},{"name":"_4","nodeType":"YulIdentifier","src":"12619:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12611:3:21"},"nodeType":"YulFunctionCall","src":"12611:11:21"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"12604:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"12687:161:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12701:30:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12727:3:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12714:12:21"},"nodeType":"YulFunctionCall","src":"12714:17:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12705:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12769:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"12744:24:21"},"nodeType":"YulFunctionCall","src":"12744:31:21"},"nodeType":"YulExpressionStatement","src":"12744:31:21"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12795:3:21"},{"name":"value","nodeType":"YulIdentifier","src":"12800:5:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12788:6:21"},"nodeType":"YulFunctionCall","src":"12788:18:21"},"nodeType":"YulExpressionStatement","src":"12788:18:21"},{"nodeType":"YulAssignment","src":"12819:19:21","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12830:3:21"},{"name":"_4","nodeType":"YulIdentifier","src":"12835:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12826:3:21"},"nodeType":"YulFunctionCall","src":"12826:12:21"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"12819:3:21"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12642:3:21"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"12647:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12639:2:21"},"nodeType":"YulFunctionCall","src":"12639:15:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12655:23:21","statements":[{"nodeType":"YulAssignment","src":"12657:19:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12668:3:21"},{"name":"_4","nodeType":"YulIdentifier","src":"12673:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12664:3:21"},"nodeType":"YulFunctionCall","src":"12664:12:21"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"12657:3:21"}]}]},"pre":{"nodeType":"YulBlock","src":"12635:3:21","statements":[]},"src":"12631:217:21"},{"nodeType":"YulAssignment","src":"12857:16:21","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"12867:6:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12857:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"12882:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12915:9:21"},{"name":"_4","nodeType":"YulIdentifier","src":"12926:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12911:3:21"},"nodeType":"YulFunctionCall","src":"12911:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12898:12:21"},"nodeType":"YulFunctionCall","src":"12898:32:21"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"12886:8:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"12959:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12968:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12971:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12961:6:21"},"nodeType":"YulFunctionCall","src":"12961:12:21"},"nodeType":"YulExpressionStatement","src":"12961:12:21"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"12945:8:21"},{"name":"_1","nodeType":"YulIdentifier","src":"12955:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12942:2:21"},"nodeType":"YulFunctionCall","src":"12942:16:21"},"nodeType":"YulIf","src":"12939:36:21"},{"nodeType":"YulAssignment","src":"12984:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13027:9:21"},{"name":"offset_1","nodeType":"YulIdentifier","src":"13038:8:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13023:3:21"},"nodeType":"YulFunctionCall","src":"13023:24:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13049:7:21"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"12994:28:21"},"nodeType":"YulFunctionCall","src":"12994:63:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12984:6:21"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11881:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11892:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11904:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11912:6:21","type":""}],"src":"11786:1277:21"},{"body":{"nodeType":"YulBlock","src":"13129:374:21","statements":[{"nodeType":"YulVariableDeclaration","src":"13139:26:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13159:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13153:5:21"},"nodeType":"YulFunctionCall","src":"13153:12:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13143:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13181:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"13186:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13174:6:21"},"nodeType":"YulFunctionCall","src":"13174:19:21"},"nodeType":"YulExpressionStatement","src":"13174:19:21"},{"nodeType":"YulVariableDeclaration","src":"13202:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"13212:4:21","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13206:2:21","type":""}]},{"nodeType":"YulAssignment","src":"13225:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13236:3:21"},{"name":"_1","nodeType":"YulIdentifier","src":"13241:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13232:3:21"},"nodeType":"YulFunctionCall","src":"13232:12:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13225:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"13253:28:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13271:5:21"},{"name":"_1","nodeType":"YulIdentifier","src":"13278:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13267:3:21"},"nodeType":"YulFunctionCall","src":"13267:14:21"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"13257:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13290:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"13299:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13294:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"13358:120:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13379:3:21"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13390:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13384:5:21"},"nodeType":"YulFunctionCall","src":"13384:13:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13372:6:21"},"nodeType":"YulFunctionCall","src":"13372:26:21"},"nodeType":"YulExpressionStatement","src":"13372:26:21"},{"nodeType":"YulAssignment","src":"13411:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13422:3:21"},{"name":"_1","nodeType":"YulIdentifier","src":"13427:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13418:3:21"},"nodeType":"YulFunctionCall","src":"13418:12:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13411:3:21"}]},{"nodeType":"YulAssignment","src":"13443:25:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13457:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"13465:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13453:3:21"},"nodeType":"YulFunctionCall","src":"13453:15:21"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13443:6:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13320:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"13323:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13317:2:21"},"nodeType":"YulFunctionCall","src":"13317:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13331:18:21","statements":[{"nodeType":"YulAssignment","src":"13333:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13342:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"13345:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13338:3:21"},"nodeType":"YulFunctionCall","src":"13338:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13333:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"13313:3:21","statements":[]},"src":"13309:169:21"},{"nodeType":"YulAssignment","src":"13487:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"13494:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13487:3:21"}]}]},"name":"abi_encode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13106:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13113:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13121:3:21","type":""}],"src":"13068:435:21"},{"body":{"nodeType":"YulBlock","src":"13659:110:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13676:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13687:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13669:6:21"},"nodeType":"YulFunctionCall","src":"13669:21:21"},"nodeType":"YulExpressionStatement","src":"13669:21:21"},{"nodeType":"YulAssignment","src":"13699:64:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13736:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13748:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13759:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13744:3:21"},"nodeType":"YulFunctionCall","src":"13744:18:21"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"13707:28:21"},"nodeType":"YulFunctionCall","src":"13707:56:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13699:4:21"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13628:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13639:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13650:4:21","type":""}],"src":"13508:261:21"},{"body":{"nodeType":"YulBlock","src":"13900:125:21","statements":[{"nodeType":"YulAssignment","src":"13910:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13922:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13933:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13918:3:21"},"nodeType":"YulFunctionCall","src":"13918:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13910:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13952:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13967:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"13975:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13963:3:21"},"nodeType":"YulFunctionCall","src":"13963:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13945:6:21"},"nodeType":"YulFunctionCall","src":"13945:74:21"},"nodeType":"YulExpressionStatement","src":"13945:74:21"}]},"name":"abi_encode_tuple_t_contract$_IMetadataService_$2253__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13869:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13880:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13891:4:21","type":""}],"src":"13774:251:21"},{"body":{"nodeType":"YulBlock","src":"14134:352:21","statements":[{"body":{"nodeType":"YulBlock","src":"14180:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14189:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14192:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14182:6:21"},"nodeType":"YulFunctionCall","src":"14182:12:21"},"nodeType":"YulExpressionStatement","src":"14182:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14155:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"14164:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14151:3:21"},"nodeType":"YulFunctionCall","src":"14151:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"14176:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14147:3:21"},"nodeType":"YulFunctionCall","src":"14147:32:21"},"nodeType":"YulIf","src":"14144:52:21"},{"nodeType":"YulVariableDeclaration","src":"14205:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14231:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14218:12:21"},"nodeType":"YulFunctionCall","src":"14218:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"14209:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14275:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"14250:24:21"},"nodeType":"YulFunctionCall","src":"14250:31:21"},"nodeType":"YulExpressionStatement","src":"14250:31:21"},{"nodeType":"YulAssignment","src":"14290:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"14300:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14290:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"14314:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14346:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14357:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14342:3:21"},"nodeType":"YulFunctionCall","src":"14342:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14329:12:21"},"nodeType":"YulFunctionCall","src":"14329:32:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"14318:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"14395:7:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"14370:24:21"},"nodeType":"YulFunctionCall","src":"14370:33:21"},"nodeType":"YulExpressionStatement","src":"14370:33:21"},{"nodeType":"YulAssignment","src":"14412:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"14422:7:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14412:6:21"}]},{"nodeType":"YulAssignment","src":"14438:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14465:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14476:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14461:3:21"},"nodeType":"YulFunctionCall","src":"14461:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14448:12:21"},"nodeType":"YulFunctionCall","src":"14448:32:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14438:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14084:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14095:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14107:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14115:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14123:6:21","type":""}],"src":"14030:456:21"},{"body":{"nodeType":"YulBlock","src":"14592:125:21","statements":[{"nodeType":"YulAssignment","src":"14602:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14614:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14625:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14610:3:21"},"nodeType":"YulFunctionCall","src":"14610:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14602:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14644:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14659:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14667:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14655:3:21"},"nodeType":"YulFunctionCall","src":"14655:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14637:6:21"},"nodeType":"YulFunctionCall","src":"14637:74:21"},"nodeType":"YulExpressionStatement","src":"14637:74:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14561:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14572:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14583:4:21","type":""}],"src":"14491:226:21"},{"body":{"nodeType":"YulBlock","src":"14825:217:21","statements":[{"body":{"nodeType":"YulBlock","src":"14871:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14880:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14883:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14873:6:21"},"nodeType":"YulFunctionCall","src":"14873:12:21"},"nodeType":"YulExpressionStatement","src":"14873:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14846:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"14855:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14842:3:21"},"nodeType":"YulFunctionCall","src":"14842:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"14867:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14838:3:21"},"nodeType":"YulFunctionCall","src":"14838:32:21"},"nodeType":"YulIf","src":"14835:52:21"},{"nodeType":"YulAssignment","src":"14896:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14919:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14906:12:21"},"nodeType":"YulFunctionCall","src":"14906:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14896:6:21"}]},{"nodeType":"YulAssignment","src":"14938:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14965:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14976:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14961:3:21"},"nodeType":"YulFunctionCall","src":"14961:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14948:12:21"},"nodeType":"YulFunctionCall","src":"14948:32:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14938:6:21"}]},{"nodeType":"YulAssignment","src":"14989:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15021:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15032:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15017:3:21"},"nodeType":"YulFunctionCall","src":"15017:18:21"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"14999:17:21"},"nodeType":"YulFunctionCall","src":"14999:37:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14989:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes32t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14775:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14786:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14798:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14806:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14814:6:21","type":""}],"src":"14722:320:21"},{"body":{"nodeType":"YulBlock","src":"15146:101:21","statements":[{"nodeType":"YulAssignment","src":"15156:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15168:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15179:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15164:3:21"},"nodeType":"YulFunctionCall","src":"15164:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15156:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15198:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15213:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"15221:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15209:3:21"},"nodeType":"YulFunctionCall","src":"15209:31:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15191:6:21"},"nodeType":"YulFunctionCall","src":"15191:50:21"},"nodeType":"YulExpressionStatement","src":"15191:50:21"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15115:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15126:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15137:4:21","type":""}],"src":"15047:200:21"},{"body":{"nodeType":"YulBlock","src":"15356:352:21","statements":[{"body":{"nodeType":"YulBlock","src":"15402:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15411:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15414:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15404:6:21"},"nodeType":"YulFunctionCall","src":"15404:12:21"},"nodeType":"YulExpressionStatement","src":"15404:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15377:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"15386:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15373:3:21"},"nodeType":"YulFunctionCall","src":"15373:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"15398:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15369:3:21"},"nodeType":"YulFunctionCall","src":"15369:32:21"},"nodeType":"YulIf","src":"15366:52:21"},{"nodeType":"YulAssignment","src":"15427:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15450:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15437:12:21"},"nodeType":"YulFunctionCall","src":"15437:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15427:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"15469:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15499:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15510:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15495:3:21"},"nodeType":"YulFunctionCall","src":"15495:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15482:12:21"},"nodeType":"YulFunctionCall","src":"15482:32:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"15473:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15548:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"15523:24:21"},"nodeType":"YulFunctionCall","src":"15523:31:21"},"nodeType":"YulExpressionStatement","src":"15523:31:21"},{"nodeType":"YulAssignment","src":"15563:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"15573:5:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15563:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"15587:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15619:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15630:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15615:3:21"},"nodeType":"YulFunctionCall","src":"15615:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15602:12:21"},"nodeType":"YulFunctionCall","src":"15602:32:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"15591:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"15668:7:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"15643:24:21"},"nodeType":"YulFunctionCall","src":"15643:33:21"},"nodeType":"YulExpressionStatement","src":"15643:33:21"},{"nodeType":"YulAssignment","src":"15685:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"15695:7:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"15685:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15306:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15317:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15329:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15337:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15345:6:21","type":""}],"src":"15252:456:21"},{"body":{"nodeType":"YulBlock","src":"15853:619:21","statements":[{"body":{"nodeType":"YulBlock","src":"15900:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15909:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15912:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15902:6:21"},"nodeType":"YulFunctionCall","src":"15902:12:21"},"nodeType":"YulExpressionStatement","src":"15902:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15874:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"15883:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15870:3:21"},"nodeType":"YulFunctionCall","src":"15870:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"15895:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15866:3:21"},"nodeType":"YulFunctionCall","src":"15866:33:21"},"nodeType":"YulIf","src":"15863:53:21"},{"nodeType":"YulVariableDeclaration","src":"15925:37:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15952:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15939:12:21"},"nodeType":"YulFunctionCall","src":"15939:23:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15929:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"16005:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16014:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16017:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16007:6:21"},"nodeType":"YulFunctionCall","src":"16007:12:21"},"nodeType":"YulExpressionStatement","src":"16007:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15977:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"15985:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15974:2:21"},"nodeType":"YulFunctionCall","src":"15974:30:21"},"nodeType":"YulIf","src":"15971:50:21"},{"nodeType":"YulVariableDeclaration","src":"16030:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16086:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"16097:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16082:3:21"},"nodeType":"YulFunctionCall","src":"16082:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16106:7:21"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"16056:25:21"},"nodeType":"YulFunctionCall","src":"16056:58:21"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"16034:8:21","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"16044:8:21","type":""}]},{"nodeType":"YulAssignment","src":"16123:18:21","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"16133:8:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16123:6:21"}]},{"nodeType":"YulAssignment","src":"16150:18:21","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"16160:8:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16150:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"16177:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16207:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16218:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16203:3:21"},"nodeType":"YulFunctionCall","src":"16203:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16190:12:21"},"nodeType":"YulFunctionCall","src":"16190:32:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"16181:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16256:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"16231:24:21"},"nodeType":"YulFunctionCall","src":"16231:31:21"},"nodeType":"YulExpressionStatement","src":"16231:31:21"},{"nodeType":"YulAssignment","src":"16271:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"16281:5:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"16271:6:21"}]},{"nodeType":"YulAssignment","src":"16295:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16327:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16338:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16323:3:21"},"nodeType":"YulFunctionCall","src":"16323:18:21"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"16305:17:21"},"nodeType":"YulFunctionCall","src":"16305:37:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"16295:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"16351:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16383:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16394:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16379:3:21"},"nodeType":"YulFunctionCall","src":"16379:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16366:12:21"},"nodeType":"YulFunctionCall","src":"16366:32:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"16355:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"16432:7:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"16407:24:21"},"nodeType":"YulFunctionCall","src":"16407:33:21"},"nodeType":"YulExpressionStatement","src":"16407:33:21"},{"nodeType":"YulAssignment","src":"16449:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"16459:7:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"16449:6:21"}]}]},"name":"abi_decode_tuple_t_string_calldata_ptrt_addresst_uint16t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15787:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15798:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15810:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15818:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15826:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15834:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15842:6:21","type":""}],"src":"15713:759:21"},{"body":{"nodeType":"YulBlock","src":"16519:76:21","statements":[{"body":{"nodeType":"YulBlock","src":"16573:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16582:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16585:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16575:6:21"},"nodeType":"YulFunctionCall","src":"16575:12:21"},"nodeType":"YulExpressionStatement","src":"16575:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16542:5:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16563:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16556:6:21"},"nodeType":"YulFunctionCall","src":"16556:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16549:6:21"},"nodeType":"YulFunctionCall","src":"16549:21:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16539:2:21"},"nodeType":"YulFunctionCall","src":"16539:32:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16532:6:21"},"nodeType":"YulFunctionCall","src":"16532:40:21"},"nodeType":"YulIf","src":"16529:60:21"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16508:5:21","type":""}],"src":"16477:118:21"},{"body":{"nodeType":"YulBlock","src":"16684:298:21","statements":[{"body":{"nodeType":"YulBlock","src":"16730:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16739:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16742:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16732:6:21"},"nodeType":"YulFunctionCall","src":"16732:12:21"},"nodeType":"YulExpressionStatement","src":"16732:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16705:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"16714:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16701:3:21"},"nodeType":"YulFunctionCall","src":"16701:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"16726:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16697:3:21"},"nodeType":"YulFunctionCall","src":"16697:32:21"},"nodeType":"YulIf","src":"16694:52:21"},{"nodeType":"YulVariableDeclaration","src":"16755:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16781:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16768:12:21"},"nodeType":"YulFunctionCall","src":"16768:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"16759:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16825:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"16800:24:21"},"nodeType":"YulFunctionCall","src":"16800:31:21"},"nodeType":"YulExpressionStatement","src":"16800:31:21"},{"nodeType":"YulAssignment","src":"16840:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"16850:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16840:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"16864:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16896:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16907:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16892:3:21"},"nodeType":"YulFunctionCall","src":"16892:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16879:12:21"},"nodeType":"YulFunctionCall","src":"16879:32:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"16868:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"16942:7:21"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"16920:21:21"},"nodeType":"YulFunctionCall","src":"16920:30:21"},"nodeType":"YulExpressionStatement","src":"16920:30:21"},{"nodeType":"YulAssignment","src":"16959:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"16969:7:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16959:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16642:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16653:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16665:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16673:6:21","type":""}],"src":"16600:382:21"},{"body":{"nodeType":"YulBlock","src":"17144:671:21","statements":[{"body":{"nodeType":"YulBlock","src":"17191:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17200:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17203:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17193:6:21"},"nodeType":"YulFunctionCall","src":"17193:12:21"},"nodeType":"YulExpressionStatement","src":"17193:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17165:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"17174:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17161:3:21"},"nodeType":"YulFunctionCall","src":"17161:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"17186:3:21","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17157:3:21"},"nodeType":"YulFunctionCall","src":"17157:33:21"},"nodeType":"YulIf","src":"17154:53:21"},{"nodeType":"YulVariableDeclaration","src":"17216:37:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17243:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17230:12:21"},"nodeType":"YulFunctionCall","src":"17230:23:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17220:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"17296:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17305:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17308:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17298:6:21"},"nodeType":"YulFunctionCall","src":"17298:12:21"},"nodeType":"YulExpressionStatement","src":"17298:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17268:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"17276:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17265:2:21"},"nodeType":"YulFunctionCall","src":"17265:30:21"},"nodeType":"YulIf","src":"17262:50:21"},{"nodeType":"YulVariableDeclaration","src":"17321:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17377:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"17388:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17373:3:21"},"nodeType":"YulFunctionCall","src":"17373:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17397:7:21"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"17347:25:21"},"nodeType":"YulFunctionCall","src":"17347:58:21"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"17325:8:21","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"17335:8:21","type":""}]},{"nodeType":"YulAssignment","src":"17414:18:21","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"17424:8:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17414:6:21"}]},{"nodeType":"YulAssignment","src":"17441:18:21","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"17451:8:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"17441:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"17468:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17498:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17509:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17494:3:21"},"nodeType":"YulFunctionCall","src":"17494:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17481:12:21"},"nodeType":"YulFunctionCall","src":"17481:32:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"17472:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17547:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"17522:24:21"},"nodeType":"YulFunctionCall","src":"17522:31:21"},"nodeType":"YulExpressionStatement","src":"17522:31:21"},{"nodeType":"YulAssignment","src":"17562:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"17572:5:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"17562:6:21"}]},{"nodeType":"YulAssignment","src":"17586:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17613:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17624:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17609:3:21"},"nodeType":"YulFunctionCall","src":"17609:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17596:12:21"},"nodeType":"YulFunctionCall","src":"17596:32:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"17586:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"17637:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17669:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17680:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17665:3:21"},"nodeType":"YulFunctionCall","src":"17665:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17652:12:21"},"nodeType":"YulFunctionCall","src":"17652:32:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"17641:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"17718:7:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"17693:24:21"},"nodeType":"YulFunctionCall","src":"17693:33:21"},"nodeType":"YulExpressionStatement","src":"17693:33:21"},{"nodeType":"YulAssignment","src":"17735:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"17745:7:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"17735:6:21"}]},{"nodeType":"YulAssignment","src":"17761:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17793:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17804:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17789:3:21"},"nodeType":"YulFunctionCall","src":"17789:19:21"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"17771:17:21"},"nodeType":"YulFunctionCall","src":"17771:38:21"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"17761:6:21"}]}]},"name":"abi_decode_tuple_t_string_calldata_ptrt_addresst_uint256t_addresst_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17070:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17081:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17093:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17101:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17109:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17117:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17125:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"17133:6:21","type":""}],"src":"16987:828:21"},{"body":{"nodeType":"YulBlock","src":"17906:166:21","statements":[{"body":{"nodeType":"YulBlock","src":"17952:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17961:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17964:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17954:6:21"},"nodeType":"YulFunctionCall","src":"17954:12:21"},"nodeType":"YulExpressionStatement","src":"17954:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17927:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"17936:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17923:3:21"},"nodeType":"YulFunctionCall","src":"17923:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"17948:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17919:3:21"},"nodeType":"YulFunctionCall","src":"17919:32:21"},"nodeType":"YulIf","src":"17916:52:21"},{"nodeType":"YulAssignment","src":"17977:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18000:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17987:12:21"},"nodeType":"YulFunctionCall","src":"17987:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17977:6:21"}]},{"nodeType":"YulAssignment","src":"18019:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18051:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18062:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18047:3:21"},"nodeType":"YulFunctionCall","src":"18047:18:21"}],"functionName":{"name":"abi_decode_uint32","nodeType":"YulIdentifier","src":"18029:17:21"},"nodeType":"YulFunctionCall","src":"18029:37:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18019:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17864:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17875:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17887:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17895:6:21","type":""}],"src":"17820:252:21"},{"body":{"nodeType":"YulBlock","src":"18175:177:21","statements":[{"body":{"nodeType":"YulBlock","src":"18221:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18230:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18233:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18223:6:21"},"nodeType":"YulFunctionCall","src":"18223:12:21"},"nodeType":"YulExpressionStatement","src":"18223:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18196:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"18205:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18192:3:21"},"nodeType":"YulFunctionCall","src":"18192:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"18217:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18188:3:21"},"nodeType":"YulFunctionCall","src":"18188:32:21"},"nodeType":"YulIf","src":"18185:52:21"},{"nodeType":"YulVariableDeclaration","src":"18246:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18272:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18259:12:21"},"nodeType":"YulFunctionCall","src":"18259:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"18250:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18316:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"18291:24:21"},"nodeType":"YulFunctionCall","src":"18291:31:21"},"nodeType":"YulExpressionStatement","src":"18291:31:21"},{"nodeType":"YulAssignment","src":"18331:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"18341:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18331:6:21"}]}]},"name":"abi_decode_tuple_t_contract$_INameWrapperUpgrade_$2580","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18141:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18152:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18164:6:21","type":""}],"src":"18077:275:21"},{"body":{"nodeType":"YulBlock","src":"18444:161:21","statements":[{"body":{"nodeType":"YulBlock","src":"18490:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18499:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18502:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18492:6:21"},"nodeType":"YulFunctionCall","src":"18492:12:21"},"nodeType":"YulExpressionStatement","src":"18492:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18465:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"18474:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18461:3:21"},"nodeType":"YulFunctionCall","src":"18461:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"18486:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18457:3:21"},"nodeType":"YulFunctionCall","src":"18457:32:21"},"nodeType":"YulIf","src":"18454:52:21"},{"nodeType":"YulAssignment","src":"18515:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18538:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18525:12:21"},"nodeType":"YulFunctionCall","src":"18525:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18515:6:21"}]},{"nodeType":"YulAssignment","src":"18557:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18584:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18595:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18580:3:21"},"nodeType":"YulFunctionCall","src":"18580:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18567:12:21"},"nodeType":"YulFunctionCall","src":"18567:32:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18557:6:21"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18402:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18413:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18425:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18433:6:21","type":""}],"src":"18357:248:21"},{"body":{"nodeType":"YulBlock","src":"18766:603:21","statements":[{"body":{"nodeType":"YulBlock","src":"18813:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18822:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18825:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18815:6:21"},"nodeType":"YulFunctionCall","src":"18815:12:21"},"nodeType":"YulExpressionStatement","src":"18815:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18787:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"18796:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18783:3:21"},"nodeType":"YulFunctionCall","src":"18783:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"18808:3:21","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18779:3:21"},"nodeType":"YulFunctionCall","src":"18779:33:21"},"nodeType":"YulIf","src":"18776:53:21"},{"nodeType":"YulAssignment","src":"18838:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18861:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18848:12:21"},"nodeType":"YulFunctionCall","src":"18848:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18838:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"18880:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18911:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18922:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18907:3:21"},"nodeType":"YulFunctionCall","src":"18907:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18894:12:21"},"nodeType":"YulFunctionCall","src":"18894:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18884:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"18969:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18978:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18981:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18971:6:21"},"nodeType":"YulFunctionCall","src":"18971:12:21"},"nodeType":"YulExpressionStatement","src":"18971:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18941:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"18949:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18938:2:21"},"nodeType":"YulFunctionCall","src":"18938:30:21"},"nodeType":"YulIf","src":"18935:50:21"},{"nodeType":"YulVariableDeclaration","src":"18994:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19050:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"19061:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19046:3:21"},"nodeType":"YulFunctionCall","src":"19046:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19070:7:21"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"19020:25:21"},"nodeType":"YulFunctionCall","src":"19020:58:21"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"18998:8:21","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"19008:8:21","type":""}]},{"nodeType":"YulAssignment","src":"19087:18:21","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"19097:8:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19087:6:21"}]},{"nodeType":"YulAssignment","src":"19114:18:21","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"19124:8:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"19114:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"19141:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19171:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19182:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19167:3:21"},"nodeType":"YulFunctionCall","src":"19167:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19154:12:21"},"nodeType":"YulFunctionCall","src":"19154:32:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"19145:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19220:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"19195:24:21"},"nodeType":"YulFunctionCall","src":"19195:31:21"},"nodeType":"YulExpressionStatement","src":"19195:31:21"},{"nodeType":"YulAssignment","src":"19235:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"19245:5:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"19235:6:21"}]},{"nodeType":"YulAssignment","src":"19259:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19291:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19302:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19287:3:21"},"nodeType":"YulFunctionCall","src":"19287:18:21"}],"functionName":{"name":"abi_decode_uint32","nodeType":"YulIdentifier","src":"19269:17:21"},"nodeType":"YulFunctionCall","src":"19269:37:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"19259:6:21"}]},{"nodeType":"YulAssignment","src":"19315:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19347:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19358:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19343:3:21"},"nodeType":"YulFunctionCall","src":"19343:19:21"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"19325:17:21"},"nodeType":"YulFunctionCall","src":"19325:38:21"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"19315:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32t_string_calldata_ptrt_addresst_uint32t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18692:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18703:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18715:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18723:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18731:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18739:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"18747:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"18755:6:21","type":""}],"src":"18610:759:21"},{"body":{"nodeType":"YulBlock","src":"19494:409:21","statements":[{"body":{"nodeType":"YulBlock","src":"19541:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19550:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19553:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19543:6:21"},"nodeType":"YulFunctionCall","src":"19543:12:21"},"nodeType":"YulExpressionStatement","src":"19543:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19515:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"19524:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19511:3:21"},"nodeType":"YulFunctionCall","src":"19511:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"19536:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19507:3:21"},"nodeType":"YulFunctionCall","src":"19507:33:21"},"nodeType":"YulIf","src":"19504:53:21"},{"nodeType":"YulAssignment","src":"19566:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19589:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19576:12:21"},"nodeType":"YulFunctionCall","src":"19576:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19566:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"19608:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19638:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19649:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19634:3:21"},"nodeType":"YulFunctionCall","src":"19634:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19621:12:21"},"nodeType":"YulFunctionCall","src":"19621:32:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"19612:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19687:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"19662:24:21"},"nodeType":"YulFunctionCall","src":"19662:31:21"},"nodeType":"YulExpressionStatement","src":"19662:31:21"},{"nodeType":"YulAssignment","src":"19702:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"19712:5:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19702:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"19726:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19758:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19769:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19754:3:21"},"nodeType":"YulFunctionCall","src":"19754:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19741:12:21"},"nodeType":"YulFunctionCall","src":"19741:32:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"19730:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"19807:7:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"19782:24:21"},"nodeType":"YulFunctionCall","src":"19782:33:21"},"nodeType":"YulExpressionStatement","src":"19782:33:21"},{"nodeType":"YulAssignment","src":"19824:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"19834:7:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"19824:6:21"}]},{"nodeType":"YulAssignment","src":"19850:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19882:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19893:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19878:3:21"},"nodeType":"YulFunctionCall","src":"19878:18:21"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"19860:17:21"},"nodeType":"YulFunctionCall","src":"19860:37:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"19850:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32t_addresst_addresst_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19436:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19447:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19459:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19467:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19475:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19483:6:21","type":""}],"src":"19374:529:21"},{"body":{"nodeType":"YulBlock","src":"20012:279:21","statements":[{"body":{"nodeType":"YulBlock","src":"20058:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20067:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20070:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20060:6:21"},"nodeType":"YulFunctionCall","src":"20060:12:21"},"nodeType":"YulExpressionStatement","src":"20060:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20033:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"20042:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20029:3:21"},"nodeType":"YulFunctionCall","src":"20029:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"20054:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20025:3:21"},"nodeType":"YulFunctionCall","src":"20025:32:21"},"nodeType":"YulIf","src":"20022:52:21"},{"nodeType":"YulAssignment","src":"20083:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20106:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20093:12:21"},"nodeType":"YulFunctionCall","src":"20093:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20083:6:21"}]},{"nodeType":"YulAssignment","src":"20125:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20152:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20163:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20148:3:21"},"nodeType":"YulFunctionCall","src":"20148:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20135:12:21"},"nodeType":"YulFunctionCall","src":"20135:32:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"20125:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"20176:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20206:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20217:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20202:3:21"},"nodeType":"YulFunctionCall","src":"20202:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20189:12:21"},"nodeType":"YulFunctionCall","src":"20189:32:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"20180:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20255:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"20230:24:21"},"nodeType":"YulFunctionCall","src":"20230:31:21"},"nodeType":"YulExpressionStatement","src":"20230:31:21"},{"nodeType":"YulAssignment","src":"20270:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"20280:5:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"20270:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19962:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19973:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19985:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19993:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20001:6:21","type":""}],"src":"19908:383:21"},{"body":{"nodeType":"YulBlock","src":"20366:177:21","statements":[{"body":{"nodeType":"YulBlock","src":"20412:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20421:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20424:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20414:6:21"},"nodeType":"YulFunctionCall","src":"20414:12:21"},"nodeType":"YulExpressionStatement","src":"20414:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20387:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"20396:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20383:3:21"},"nodeType":"YulFunctionCall","src":"20383:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"20408:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20379:3:21"},"nodeType":"YulFunctionCall","src":"20379:32:21"},"nodeType":"YulIf","src":"20376:52:21"},{"nodeType":"YulVariableDeclaration","src":"20437:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20463:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20450:12:21"},"nodeType":"YulFunctionCall","src":"20450:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"20441:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20507:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"20482:24:21"},"nodeType":"YulFunctionCall","src":"20482:31:21"},"nodeType":"YulExpressionStatement","src":"20482:31:21"},{"nodeType":"YulAssignment","src":"20522:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"20532:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20522:6:21"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20332:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20343:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20355:6:21","type":""}],"src":"20296:247:21"},{"body":{"nodeType":"YulBlock","src":"20672:562:21","statements":[{"body":{"nodeType":"YulBlock","src":"20718:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20727:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20730:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20720:6:21"},"nodeType":"YulFunctionCall","src":"20720:12:21"},"nodeType":"YulExpressionStatement","src":"20720:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20693:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"20702:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20689:3:21"},"nodeType":"YulFunctionCall","src":"20689:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"20714:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20685:3:21"},"nodeType":"YulFunctionCall","src":"20685:32:21"},"nodeType":"YulIf","src":"20682:52:21"},{"nodeType":"YulVariableDeclaration","src":"20743:37:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20770:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20757:12:21"},"nodeType":"YulFunctionCall","src":"20757:23:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20747:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"20823:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20832:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20835:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20825:6:21"},"nodeType":"YulFunctionCall","src":"20825:12:21"},"nodeType":"YulExpressionStatement","src":"20825:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20795:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"20803:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20792:2:21"},"nodeType":"YulFunctionCall","src":"20792:30:21"},"nodeType":"YulIf","src":"20789:50:21"},{"nodeType":"YulVariableDeclaration","src":"20848:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20904:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"20915:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20900:3:21"},"nodeType":"YulFunctionCall","src":"20900:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20924:7:21"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"20874:25:21"},"nodeType":"YulFunctionCall","src":"20874:58:21"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"20852:8:21","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"20862:8:21","type":""}]},{"nodeType":"YulAssignment","src":"20941:18:21","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"20951:8:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20941:6:21"}]},{"nodeType":"YulAssignment","src":"20968:18:21","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"20978:8:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"20968:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"20995:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21025:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21036:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21021:3:21"},"nodeType":"YulFunctionCall","src":"21021:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21008:12:21"},"nodeType":"YulFunctionCall","src":"21008:32:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"20999:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21074:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"21049:24:21"},"nodeType":"YulFunctionCall","src":"21049:31:21"},"nodeType":"YulExpressionStatement","src":"21049:31:21"},{"nodeType":"YulAssignment","src":"21089:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"21099:5:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"21089:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"21113:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21145:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21156:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21141:3:21"},"nodeType":"YulFunctionCall","src":"21141:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21128:12:21"},"nodeType":"YulFunctionCall","src":"21128:32:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"21117:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"21194:7:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"21169:24:21"},"nodeType":"YulFunctionCall","src":"21169:33:21"},"nodeType":"YulExpressionStatement","src":"21169:33:21"},{"nodeType":"YulAssignment","src":"21211:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"21221:7:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"21211:6:21"}]}]},"name":"abi_decode_tuple_t_string_calldata_ptrt_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20614:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20625:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20637:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20645:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20653:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20661:6:21","type":""}],"src":"20548:686:21"},{"body":{"nodeType":"YulBlock","src":"21326:301:21","statements":[{"body":{"nodeType":"YulBlock","src":"21372:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21381:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21384:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21374:6:21"},"nodeType":"YulFunctionCall","src":"21374:12:21"},"nodeType":"YulExpressionStatement","src":"21374:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21347:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"21356:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21343:3:21"},"nodeType":"YulFunctionCall","src":"21343:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"21368:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21339:3:21"},"nodeType":"YulFunctionCall","src":"21339:32:21"},"nodeType":"YulIf","src":"21336:52:21"},{"nodeType":"YulVariableDeclaration","src":"21397:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21423:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21410:12:21"},"nodeType":"YulFunctionCall","src":"21410:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"21401:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21467:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"21442:24:21"},"nodeType":"YulFunctionCall","src":"21442:31:21"},"nodeType":"YulExpressionStatement","src":"21442:31:21"},{"nodeType":"YulAssignment","src":"21482:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"21492:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21482:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"21506:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21538:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21549:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21534:3:21"},"nodeType":"YulFunctionCall","src":"21534:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21521:12:21"},"nodeType":"YulFunctionCall","src":"21521:32:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"21510:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"21587:7:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"21562:24:21"},"nodeType":"YulFunctionCall","src":"21562:33:21"},"nodeType":"YulExpressionStatement","src":"21562:33:21"},{"nodeType":"YulAssignment","src":"21604:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"21614:7:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"21604:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21284:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21295:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21307:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21315:6:21","type":""}],"src":"21239:388:21"},{"body":{"nodeType":"YulBlock","src":"21755:562:21","statements":[{"body":{"nodeType":"YulBlock","src":"21801:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21810:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21813:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21803:6:21"},"nodeType":"YulFunctionCall","src":"21803:12:21"},"nodeType":"YulExpressionStatement","src":"21803:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21776:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"21785:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21772:3:21"},"nodeType":"YulFunctionCall","src":"21772:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"21797:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21768:3:21"},"nodeType":"YulFunctionCall","src":"21768:32:21"},"nodeType":"YulIf","src":"21765:52:21"},{"nodeType":"YulVariableDeclaration","src":"21826:37:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21853:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21840:12:21"},"nodeType":"YulFunctionCall","src":"21840:23:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21830:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"21906:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21915:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21918:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21908:6:21"},"nodeType":"YulFunctionCall","src":"21908:12:21"},"nodeType":"YulExpressionStatement","src":"21908:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21878:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"21886:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21875:2:21"},"nodeType":"YulFunctionCall","src":"21875:30:21"},"nodeType":"YulIf","src":"21872:50:21"},{"nodeType":"YulVariableDeclaration","src":"21931:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21987:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"21998:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21983:3:21"},"nodeType":"YulFunctionCall","src":"21983:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22007:7:21"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"21957:25:21"},"nodeType":"YulFunctionCall","src":"21957:58:21"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"21935:8:21","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"21945:8:21","type":""}]},{"nodeType":"YulAssignment","src":"22024:18:21","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"22034:8:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22024:6:21"}]},{"nodeType":"YulAssignment","src":"22051:18:21","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"22061:8:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"22051:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"22078:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22108:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22119:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22104:3:21"},"nodeType":"YulFunctionCall","src":"22104:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"22091:12:21"},"nodeType":"YulFunctionCall","src":"22091:32:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"22082:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22157:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"22132:24:21"},"nodeType":"YulFunctionCall","src":"22132:31:21"},"nodeType":"YulExpressionStatement","src":"22132:31:21"},{"nodeType":"YulAssignment","src":"22172:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"22182:5:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"22172:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"22196:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22228:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22239:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22224:3:21"},"nodeType":"YulFunctionCall","src":"22224:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"22211:12:21"},"nodeType":"YulFunctionCall","src":"22211:32:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"22200:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"22277:7:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"22252:24:21"},"nodeType":"YulFunctionCall","src":"22252:33:21"},"nodeType":"YulExpressionStatement","src":"22252:33:21"},{"nodeType":"YulAssignment","src":"22294:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"22304:7:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"22294:6:21"}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptrt_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21697:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21708:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21720:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21728:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21736:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21744:6:21","type":""}],"src":"21632:685:21"},{"body":{"nodeType":"YulBlock","src":"22463:614:21","statements":[{"body":{"nodeType":"YulBlock","src":"22510:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22519:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22522:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22512:6:21"},"nodeType":"YulFunctionCall","src":"22512:12:21"},"nodeType":"YulExpressionStatement","src":"22512:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22484:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"22493:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22480:3:21"},"nodeType":"YulFunctionCall","src":"22480:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"22505:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22476:3:21"},"nodeType":"YulFunctionCall","src":"22476:33:21"},"nodeType":"YulIf","src":"22473:53:21"},{"nodeType":"YulAssignment","src":"22535:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22558:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"22545:12:21"},"nodeType":"YulFunctionCall","src":"22545:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22535:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"22577:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22608:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22619:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22604:3:21"},"nodeType":"YulFunctionCall","src":"22604:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"22591:12:21"},"nodeType":"YulFunctionCall","src":"22591:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22581:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"22666:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22675:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22678:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22668:6:21"},"nodeType":"YulFunctionCall","src":"22668:12:21"},"nodeType":"YulExpressionStatement","src":"22668:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22638:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"22646:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22635:2:21"},"nodeType":"YulFunctionCall","src":"22635:30:21"},"nodeType":"YulIf","src":"22632:50:21"},{"nodeType":"YulVariableDeclaration","src":"22691:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22747:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"22758:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22743:3:21"},"nodeType":"YulFunctionCall","src":"22743:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22767:7:21"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"22717:25:21"},"nodeType":"YulFunctionCall","src":"22717:58:21"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"22695:8:21","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"22705:8:21","type":""}]},{"nodeType":"YulAssignment","src":"22784:18:21","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"22794:8:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"22784:6:21"}]},{"nodeType":"YulAssignment","src":"22811:18:21","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"22821:8:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"22811:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"22838:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22868:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22879:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22864:3:21"},"nodeType":"YulFunctionCall","src":"22864:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"22851:12:21"},"nodeType":"YulFunctionCall","src":"22851:32:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"22842:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22917:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"22892:24:21"},"nodeType":"YulFunctionCall","src":"22892:31:21"},"nodeType":"YulExpressionStatement","src":"22892:31:21"},{"nodeType":"YulAssignment","src":"22932:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"22942:5:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"22932:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"22956:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22988:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22999:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22984:3:21"},"nodeType":"YulFunctionCall","src":"22984:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"22971:12:21"},"nodeType":"YulFunctionCall","src":"22971:32:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"22960:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"23037:7:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"23012:24:21"},"nodeType":"YulFunctionCall","src":"23012:33:21"},"nodeType":"YulExpressionStatement","src":"23012:33:21"},{"nodeType":"YulAssignment","src":"23054:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"23064:7:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"23054:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32t_string_calldata_ptrt_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22397:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22408:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22420:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22428:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22436:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22444:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"22452:6:21","type":""}],"src":"22322:755:21"},{"body":{"nodeType":"YulBlock","src":"23229:588:21","statements":[{"body":{"nodeType":"YulBlock","src":"23276:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23285:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23288:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23278:6:21"},"nodeType":"YulFunctionCall","src":"23278:12:21"},"nodeType":"YulExpressionStatement","src":"23278:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23250:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"23259:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23246:3:21"},"nodeType":"YulFunctionCall","src":"23246:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"23271:3:21","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23242:3:21"},"nodeType":"YulFunctionCall","src":"23242:33:21"},"nodeType":"YulIf","src":"23239:53:21"},{"nodeType":"YulVariableDeclaration","src":"23301:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23327:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23314:12:21"},"nodeType":"YulFunctionCall","src":"23314:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"23305:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23371:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"23346:24:21"},"nodeType":"YulFunctionCall","src":"23346:31:21"},"nodeType":"YulExpressionStatement","src":"23346:31:21"},{"nodeType":"YulAssignment","src":"23386:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"23396:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23386:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"23410:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23442:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23453:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23438:3:21"},"nodeType":"YulFunctionCall","src":"23438:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23425:12:21"},"nodeType":"YulFunctionCall","src":"23425:32:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"23414:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"23491:7:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"23466:24:21"},"nodeType":"YulFunctionCall","src":"23466:33:21"},"nodeType":"YulExpressionStatement","src":"23466:33:21"},{"nodeType":"YulAssignment","src":"23508:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"23518:7:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"23508:6:21"}]},{"nodeType":"YulAssignment","src":"23534:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23561:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23572:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23557:3:21"},"nodeType":"YulFunctionCall","src":"23557:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23544:12:21"},"nodeType":"YulFunctionCall","src":"23544:32:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"23534:6:21"}]},{"nodeType":"YulAssignment","src":"23585:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23612:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23623:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23608:3:21"},"nodeType":"YulFunctionCall","src":"23608:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23595:12:21"},"nodeType":"YulFunctionCall","src":"23595:32:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"23585:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"23636:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23667:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23678:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23663:3:21"},"nodeType":"YulFunctionCall","src":"23663:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23650:12:21"},"nodeType":"YulFunctionCall","src":"23650:33:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23640:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"23726:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23735:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23738:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23728:6:21"},"nodeType":"YulFunctionCall","src":"23728:12:21"},"nodeType":"YulExpressionStatement","src":"23728:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23698:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"23706:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23695:2:21"},"nodeType":"YulFunctionCall","src":"23695:30:21"},"nodeType":"YulIf","src":"23692:50:21"},{"nodeType":"YulAssignment","src":"23751:60:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23783:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"23794:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23779:3:21"},"nodeType":"YulFunctionCall","src":"23779:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23803:7:21"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"23761:17:21"},"nodeType":"YulFunctionCall","src":"23761:50:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"23751:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23163:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"23174:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"23186:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23194:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23202:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23210:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"23218:6:21","type":""}],"src":"23082:735:21"},{"body":{"nodeType":"YulBlock","src":"23996:233:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24013:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24024:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24006:6:21"},"nodeType":"YulFunctionCall","src":"24006:21:21"},"nodeType":"YulExpressionStatement","src":"24006:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24047:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24058:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24043:3:21"},"nodeType":"YulFunctionCall","src":"24043:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"24063:2:21","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24036:6:21"},"nodeType":"YulFunctionCall","src":"24036:30:21"},"nodeType":"YulExpressionStatement","src":"24036:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24086:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24097:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24082:3:21"},"nodeType":"YulFunctionCall","src":"24082:18:21"},{"hexValue":"455243313135353a2062616c616e636520717565727920666f7220746865207a","kind":"string","nodeType":"YulLiteral","src":"24102:34:21","type":"","value":"ERC1155: balance query for the z"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24075:6:21"},"nodeType":"YulFunctionCall","src":"24075:62:21"},"nodeType":"YulExpressionStatement","src":"24075:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24157:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24168:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24153:3:21"},"nodeType":"YulFunctionCall","src":"24153:18:21"},{"hexValue":"65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"24173:13:21","type":"","value":"ero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24146:6:21"},"nodeType":"YulFunctionCall","src":"24146:41:21"},"nodeType":"YulExpressionStatement","src":"24146:41:21"},{"nodeType":"YulAssignment","src":"24196:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24208:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24219:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24204:3:21"},"nodeType":"YulFunctionCall","src":"24204:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24196:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23973:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23987:4:21","type":""}],"src":"23822:407:21"},{"body":{"nodeType":"YulBlock","src":"24325:613:21","statements":[{"body":{"nodeType":"YulBlock","src":"24371:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24380:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24383:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24373:6:21"},"nodeType":"YulFunctionCall","src":"24373:12:21"},"nodeType":"YulExpressionStatement","src":"24373:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24346:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"24355:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24342:3:21"},"nodeType":"YulFunctionCall","src":"24342:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"24367:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24338:3:21"},"nodeType":"YulFunctionCall","src":"24338:32:21"},"nodeType":"YulIf","src":"24335:52:21"},{"nodeType":"YulVariableDeclaration","src":"24396:30:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24416:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24410:5:21"},"nodeType":"YulFunctionCall","src":"24410:16:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24400:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"24469:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24478:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24481:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24471:6:21"},"nodeType":"YulFunctionCall","src":"24471:12:21"},"nodeType":"YulExpressionStatement","src":"24471:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24441:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"24449:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24438:2:21"},"nodeType":"YulFunctionCall","src":"24438:30:21"},"nodeType":"YulIf","src":"24435:50:21"},{"nodeType":"YulVariableDeclaration","src":"24494:32:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24508:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"24519:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24504:3:21"},"nodeType":"YulFunctionCall","src":"24504:22:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"24498:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"24574:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24583:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24586:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24576:6:21"},"nodeType":"YulFunctionCall","src":"24576:12:21"},"nodeType":"YulExpressionStatement","src":"24576:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"24553:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"24557:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24549:3:21"},"nodeType":"YulFunctionCall","src":"24549:13:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24564:7:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24545:3:21"},"nodeType":"YulFunctionCall","src":"24545:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24538:6:21"},"nodeType":"YulFunctionCall","src":"24538:35:21"},"nodeType":"YulIf","src":"24535:55:21"},{"nodeType":"YulVariableDeclaration","src":"24599:19:21","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"24615:2:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24609:5:21"},"nodeType":"YulFunctionCall","src":"24609:9:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"24603:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"24627:42:21","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"24666:2:21"}],"functionName":{"name":"array_allocation_size_string","nodeType":"YulIdentifier","src":"24637:28:21"},"nodeType":"YulFunctionCall","src":"24637:32:21"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"24631:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"24678:23:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24698:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24692:5:21"},"nodeType":"YulFunctionCall","src":"24692:9:21"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"24682:6:21","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24730:6:21"},{"name":"_3","nodeType":"YulIdentifier","src":"24738:2:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"24710:19:21"},"nodeType":"YulFunctionCall","src":"24710:31:21"},"nodeType":"YulExpressionStatement","src":"24710:31:21"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24757:6:21"},{"name":"_2","nodeType":"YulIdentifier","src":"24765:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24750:6:21"},"nodeType":"YulFunctionCall","src":"24750:18:21"},"nodeType":"YulExpressionStatement","src":"24750:18:21"},{"body":{"nodeType":"YulBlock","src":"24814:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24823:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24826:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24816:6:21"},"nodeType":"YulFunctionCall","src":"24816:12:21"},"nodeType":"YulExpressionStatement","src":"24816:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"24791:2:21"},{"name":"_2","nodeType":"YulIdentifier","src":"24795:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24787:3:21"},"nodeType":"YulFunctionCall","src":"24787:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"24800:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24783:3:21"},"nodeType":"YulFunctionCall","src":"24783:20:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24805:7:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24780:2:21"},"nodeType":"YulFunctionCall","src":"24780:33:21"},"nodeType":"YulIf","src":"24777:53:21"},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"24878:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"24882:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24874:3:21"},"nodeType":"YulFunctionCall","src":"24874:11:21"},{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24891:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"24899:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24887:3:21"},"nodeType":"YulFunctionCall","src":"24887:15:21"},{"name":"_2","nodeType":"YulIdentifier","src":"24904:2:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"24839:34:21"},"nodeType":"YulFunctionCall","src":"24839:68:21"},"nodeType":"YulExpressionStatement","src":"24839:68:21"},{"nodeType":"YulAssignment","src":"24916:16:21","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"24926:6:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24916:6:21"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24291:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24302:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24314:6:21","type":""}],"src":"24234:704:21"},{"body":{"nodeType":"YulBlock","src":"25072:168:21","statements":[{"nodeType":"YulAssignment","src":"25082:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25094:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25105:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25090:3:21"},"nodeType":"YulFunctionCall","src":"25090:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25082:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25124:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"25135:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25117:6:21"},"nodeType":"YulFunctionCall","src":"25117:25:21"},"nodeType":"YulExpressionStatement","src":"25117:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25162:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25173:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25158:3:21"},"nodeType":"YulFunctionCall","src":"25158:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25182:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"25190:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25178:3:21"},"nodeType":"YulFunctionCall","src":"25178:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25151:6:21"},"nodeType":"YulFunctionCall","src":"25151:83:21"},"nodeType":"YulExpressionStatement","src":"25151:83:21"}]},"name":"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25033:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25044:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25052:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25063:4:21","type":""}],"src":"24943:297:21"},{"body":{"nodeType":"YulBlock","src":"25372:144:21","statements":[{"nodeType":"YulAssignment","src":"25382:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25394:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25405:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25390:3:21"},"nodeType":"YulFunctionCall","src":"25390:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25382:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25424:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"25435:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25417:6:21"},"nodeType":"YulFunctionCall","src":"25417:25:21"},"nodeType":"YulExpressionStatement","src":"25417:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25462:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25473:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25458:3:21"},"nodeType":"YulFunctionCall","src":"25458:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25482:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"25490:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25478:3:21"},"nodeType":"YulFunctionCall","src":"25478:31:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25451:6:21"},"nodeType":"YulFunctionCall","src":"25451:59:21"},"nodeType":"YulExpressionStatement","src":"25451:59:21"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64__to_t_bytes32_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25333:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25344:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25352:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25363:4:21","type":""}],"src":"25245:271:21"},{"body":{"nodeType":"YulBlock","src":"25667:541:21","statements":[{"body":{"nodeType":"YulBlock","src":"25714:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25723:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25726:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25716:6:21"},"nodeType":"YulFunctionCall","src":"25716:12:21"},"nodeType":"YulExpressionStatement","src":"25716:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"25688:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"25697:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25684:3:21"},"nodeType":"YulFunctionCall","src":"25684:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"25709:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"25680:3:21"},"nodeType":"YulFunctionCall","src":"25680:33:21"},"nodeType":"YulIf","src":"25677:53:21"},{"nodeType":"YulVariableDeclaration","src":"25739:37:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25766:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25753:12:21"},"nodeType":"YulFunctionCall","src":"25753:23:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25743:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"25819:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25828:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25831:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25821:6:21"},"nodeType":"YulFunctionCall","src":"25821:12:21"},"nodeType":"YulExpressionStatement","src":"25821:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25791:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"25799:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25788:2:21"},"nodeType":"YulFunctionCall","src":"25788:30:21"},"nodeType":"YulIf","src":"25785:50:21"},{"nodeType":"YulAssignment","src":"25844:60:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25876:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"25887:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25872:3:21"},"nodeType":"YulFunctionCall","src":"25872:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25896:7:21"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"25854:17:21"},"nodeType":"YulFunctionCall","src":"25854:50:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"25844:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"25913:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25943:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25954:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25939:3:21"},"nodeType":"YulFunctionCall","src":"25939:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25926:12:21"},"nodeType":"YulFunctionCall","src":"25926:32:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"25917:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25992:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"25967:24:21"},"nodeType":"YulFunctionCall","src":"25967:31:21"},"nodeType":"YulExpressionStatement","src":"25967:31:21"},{"nodeType":"YulAssignment","src":"26007:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"26017:5:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"26007:6:21"}]},{"nodeType":"YulAssignment","src":"26031:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26063:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26074:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26059:3:21"},"nodeType":"YulFunctionCall","src":"26059:18:21"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"26041:17:21"},"nodeType":"YulFunctionCall","src":"26041:37:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"26031:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"26087:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26119:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26130:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26115:3:21"},"nodeType":"YulFunctionCall","src":"26115:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"26102:12:21"},"nodeType":"YulFunctionCall","src":"26102:32:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"26091:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"26168:7:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"26143:24:21"},"nodeType":"YulFunctionCall","src":"26143:33:21"},"nodeType":"YulExpressionStatement","src":"26143:33:21"},{"nodeType":"YulAssignment","src":"26185:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"26195:7:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"26185:6:21"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_address_payablet_uint16t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25609:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"25620:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"25632:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25640:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25648:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"25656:6:21","type":""}],"src":"25521:687:21"},{"body":{"nodeType":"YulBlock","src":"26342:119:21","statements":[{"nodeType":"YulAssignment","src":"26352:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26364:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26375:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26360:3:21"},"nodeType":"YulFunctionCall","src":"26360:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26352:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26394:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"26405:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26387:6:21"},"nodeType":"YulFunctionCall","src":"26387:25:21"},"nodeType":"YulExpressionStatement","src":"26387:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26432:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26443:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26428:3:21"},"nodeType":"YulFunctionCall","src":"26428:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"26448:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26421:6:21"},"nodeType":"YulFunctionCall","src":"26421:34:21"},"nodeType":"YulExpressionStatement","src":"26421:34:21"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26303:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26314:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26322:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26333:4:21","type":""}],"src":"26213:248:21"},{"body":{"nodeType":"YulBlock","src":"26595:168:21","statements":[{"nodeType":"YulAssignment","src":"26605:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26617:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26628:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26613:3:21"},"nodeType":"YulFunctionCall","src":"26613:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26605:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26647:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"26658:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26640:6:21"},"nodeType":"YulFunctionCall","src":"26640:25:21"},"nodeType":"YulExpressionStatement","src":"26640:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26685:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26696:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26681:3:21"},"nodeType":"YulFunctionCall","src":"26681:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26705:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"26713:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26701:3:21"},"nodeType":"YulFunctionCall","src":"26701:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26674:6:21"},"nodeType":"YulFunctionCall","src":"26674:83:21"},"nodeType":"YulExpressionStatement","src":"26674:83:21"}]},"name":"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26556:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26567:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26575:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26586:4:21","type":""}],"src":"26466:297:21"},{"body":{"nodeType":"YulBlock","src":"26823:382:21","statements":[{"nodeType":"YulAssignment","src":"26833:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26847:1:21","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"26850:4:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"26843:3:21"},"nodeType":"YulFunctionCall","src":"26843:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"26833:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"26864:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"26894:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"26900:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26890:3:21"},"nodeType":"YulFunctionCall","src":"26890:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"26868:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"26941:31:21","statements":[{"nodeType":"YulAssignment","src":"26943:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"26957:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"26965:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26953:3:21"},"nodeType":"YulFunctionCall","src":"26953:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"26943:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"26921:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26914:6:21"},"nodeType":"YulFunctionCall","src":"26914:26:21"},"nodeType":"YulIf","src":"26911:61:21"},{"body":{"nodeType":"YulBlock","src":"27031:168:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27052:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27055:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27045:6:21"},"nodeType":"YulFunctionCall","src":"27045:88:21"},"nodeType":"YulExpressionStatement","src":"27045:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27153:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27156:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27146:6:21"},"nodeType":"YulFunctionCall","src":"27146:15:21"},"nodeType":"YulExpressionStatement","src":"27146:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27181:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27184:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27174:6:21"},"nodeType":"YulFunctionCall","src":"27174:15:21"},"nodeType":"YulExpressionStatement","src":"27174:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"26987:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27010:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"27018:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"27007:2:21"},"nodeType":"YulFunctionCall","src":"27007:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"26984:2:21"},"nodeType":"YulFunctionCall","src":"26984:38:21"},"nodeType":"YulIf","src":"26981:218:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"26803:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"26812:6:21","type":""}],"src":"26768:437:21"},{"body":{"nodeType":"YulBlock","src":"27421:354:21","statements":[{"nodeType":"YulAssignment","src":"27431:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27443:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27454:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27439:3:21"},"nodeType":"YulFunctionCall","src":"27439:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27431:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27474:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"27485:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27467:6:21"},"nodeType":"YulFunctionCall","src":"27467:25:21"},"nodeType":"YulExpressionStatement","src":"27467:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27512:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27523:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27508:3:21"},"nodeType":"YulFunctionCall","src":"27508:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"27528:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27501:6:21"},"nodeType":"YulFunctionCall","src":"27501:34:21"},"nodeType":"YulExpressionStatement","src":"27501:34:21"},{"nodeType":"YulVariableDeclaration","src":"27544:52:21","value":{"kind":"number","nodeType":"YulLiteral","src":"27554:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"27548:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27616:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27627:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27612:3:21"},"nodeType":"YulFunctionCall","src":"27612:18:21"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27636:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"27644:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27632:3:21"},"nodeType":"YulFunctionCall","src":"27632:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27605:6:21"},"nodeType":"YulFunctionCall","src":"27605:43:21"},"nodeType":"YulExpressionStatement","src":"27605:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27668:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27679:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27664:3:21"},"nodeType":"YulFunctionCall","src":"27664:18:21"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"27688:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"27696:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27684:3:21"},"nodeType":"YulFunctionCall","src":"27684:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27657:6:21"},"nodeType":"YulFunctionCall","src":"27657:43:21"},"nodeType":"YulExpressionStatement","src":"27657:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27720:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27731:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27716:3:21"},"nodeType":"YulFunctionCall","src":"27716:19:21"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"27741:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"27749:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27737:3:21"},"nodeType":"YulFunctionCall","src":"27737:31:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27709:6:21"},"nodeType":"YulFunctionCall","src":"27709:60:21"},"nodeType":"YulExpressionStatement","src":"27709:60:21"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_address_t_address_t_uint64__to_t_bytes32_t_bytes32_t_address_t_address_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27358:9:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"27369:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"27377:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27385:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27393:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27401:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27412:4:21","type":""}],"src":"27210:565:21"},{"body":{"nodeType":"YulBlock","src":"27954:230:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27971:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27982:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27964:6:21"},"nodeType":"YulFunctionCall","src":"27964:21:21"},"nodeType":"YulExpressionStatement","src":"27964:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28005:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28016:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28001:3:21"},"nodeType":"YulFunctionCall","src":"28001:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"28021:2:21","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27994:6:21"},"nodeType":"YulFunctionCall","src":"27994:30:21"},"nodeType":"YulExpressionStatement","src":"27994:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28044:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28055:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28040:3:21"},"nodeType":"YulFunctionCall","src":"28040:18:21"},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e67746820","kind":"string","nodeType":"YulLiteral","src":"28060:34:21","type":"","value":"ERC1155: ids and amounts length "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28033:6:21"},"nodeType":"YulFunctionCall","src":"28033:62:21"},"nodeType":"YulExpressionStatement","src":"28033:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28115:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28126:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28111:3:21"},"nodeType":"YulFunctionCall","src":"28111:18:21"},{"hexValue":"6d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"28131:10:21","type":"","value":"mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28104:6:21"},"nodeType":"YulFunctionCall","src":"28104:38:21"},"nodeType":"YulExpressionStatement","src":"28104:38:21"},{"nodeType":"YulAssignment","src":"28151:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28163:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28174:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28159:3:21"},"nodeType":"YulFunctionCall","src":"28159:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28151:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27931:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27945:4:21","type":""}],"src":"27780:404:21"},{"body":{"nodeType":"YulBlock","src":"28363:227:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28380:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28391:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28373:6:21"},"nodeType":"YulFunctionCall","src":"28373:21:21"},"nodeType":"YulExpressionStatement","src":"28373:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28414:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28425:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28410:3:21"},"nodeType":"YulFunctionCall","src":"28410:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"28430:2:21","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28403:6:21"},"nodeType":"YulFunctionCall","src":"28403:30:21"},"nodeType":"YulExpressionStatement","src":"28403:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28453:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28464:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28449:3:21"},"nodeType":"YulFunctionCall","src":"28449:18:21"},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"28469:34:21","type":"","value":"ERC1155: transfer to the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28442:6:21"},"nodeType":"YulFunctionCall","src":"28442:62:21"},"nodeType":"YulExpressionStatement","src":"28442:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28524:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28535:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28520:3:21"},"nodeType":"YulFunctionCall","src":"28520:18:21"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"28540:7:21","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28513:6:21"},"nodeType":"YulFunctionCall","src":"28513:35:21"},"nodeType":"YulExpressionStatement","src":"28513:35:21"},{"nodeType":"YulAssignment","src":"28557:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28569:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28580:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28565:3:21"},"nodeType":"YulFunctionCall","src":"28565:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28557:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28340:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28354:4:21","type":""}],"src":"28189:401:21"},{"body":{"nodeType":"YulBlock","src":"28769:240:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28786:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28797:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28779:6:21"},"nodeType":"YulFunctionCall","src":"28779:21:21"},"nodeType":"YulExpressionStatement","src":"28779:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28820:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28831:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28816:3:21"},"nodeType":"YulFunctionCall","src":"28816:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"28836:2:21","type":"","value":"50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28809:6:21"},"nodeType":"YulFunctionCall","src":"28809:30:21"},"nodeType":"YulExpressionStatement","src":"28809:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28859:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28870:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28855:3:21"},"nodeType":"YulFunctionCall","src":"28855:18:21"},{"hexValue":"455243313135353a207472616e736665722063616c6c6572206973206e6f7420","kind":"string","nodeType":"YulLiteral","src":"28875:34:21","type":"","value":"ERC1155: transfer caller is not "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28848:6:21"},"nodeType":"YulFunctionCall","src":"28848:62:21"},"nodeType":"YulExpressionStatement","src":"28848:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28930:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28941:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28926:3:21"},"nodeType":"YulFunctionCall","src":"28926:18:21"},{"hexValue":"6f776e6572206e6f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"28946:20:21","type":"","value":"owner nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28919:6:21"},"nodeType":"YulFunctionCall","src":"28919:48:21"},"nodeType":"YulExpressionStatement","src":"28919:48:21"},{"nodeType":"YulAssignment","src":"28976:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28988:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28999:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28984:3:21"},"nodeType":"YulFunctionCall","src":"28984:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28976:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28746:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28760:4:21","type":""}],"src":"28595:414:21"},{"body":{"nodeType":"YulBlock","src":"29046:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29063:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29066:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29056:6:21"},"nodeType":"YulFunctionCall","src":"29056:88:21"},"nodeType":"YulExpressionStatement","src":"29056:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29160:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"29163:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29153:6:21"},"nodeType":"YulFunctionCall","src":"29153:15:21"},"nodeType":"YulExpressionStatement","src":"29153:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29184:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29187:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29177:6:21"},"nodeType":"YulFunctionCall","src":"29177:15:21"},"nodeType":"YulExpressionStatement","src":"29177:15:21"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"29014:184:21"},{"body":{"nodeType":"YulBlock","src":"29377:232:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29394:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29405:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29387:6:21"},"nodeType":"YulFunctionCall","src":"29387:21:21"},"nodeType":"YulExpressionStatement","src":"29387:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29428:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29439:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29424:3:21"},"nodeType":"YulFunctionCall","src":"29424:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"29444:2:21","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29417:6:21"},"nodeType":"YulFunctionCall","src":"29417:30:21"},"nodeType":"YulExpressionStatement","src":"29417:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29467:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29478:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29463:3:21"},"nodeType":"YulFunctionCall","src":"29463:18:21"},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"29483:34:21","type":"","value":"ERC1155: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29456:6:21"},"nodeType":"YulFunctionCall","src":"29456:62:21"},"nodeType":"YulExpressionStatement","src":"29456:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29538:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29549:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29534:3:21"},"nodeType":"YulFunctionCall","src":"29534:18:21"},{"hexValue":"72207472616e73666572","kind":"string","nodeType":"YulLiteral","src":"29554:12:21","type":"","value":"r transfer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29527:6:21"},"nodeType":"YulFunctionCall","src":"29527:40:21"},"nodeType":"YulExpressionStatement","src":"29527:40:21"},{"nodeType":"YulAssignment","src":"29576:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29588:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29599:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29584:3:21"},"nodeType":"YulFunctionCall","src":"29584:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29576:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29354:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29368:4:21","type":""}],"src":"29203:406:21"},{"body":{"nodeType":"YulBlock","src":"29646:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29663:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29666:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29656:6:21"},"nodeType":"YulFunctionCall","src":"29656:88:21"},"nodeType":"YulExpressionStatement","src":"29656:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29760:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"29763:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29753:6:21"},"nodeType":"YulFunctionCall","src":"29753:15:21"},"nodeType":"YulExpressionStatement","src":"29753:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29784:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29787:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29777:6:21"},"nodeType":"YulFunctionCall","src":"29777:15:21"},"nodeType":"YulExpressionStatement","src":"29777:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"29614:184:21"},{"body":{"nodeType":"YulBlock","src":"29850:148:21","statements":[{"body":{"nodeType":"YulBlock","src":"29941:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"29943:16:21"},"nodeType":"YulFunctionCall","src":"29943:18:21"},"nodeType":"YulExpressionStatement","src":"29943:18:21"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29866:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"29873:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"29863:2:21"},"nodeType":"YulFunctionCall","src":"29863:77:21"},"nodeType":"YulIf","src":"29860:103:21"},{"nodeType":"YulAssignment","src":"29972:20:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29983:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"29990:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29979:3:21"},"nodeType":"YulFunctionCall","src":"29979:13:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"29972:3:21"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29832:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"29842:3:21","type":""}],"src":"29803:195:21"},{"body":{"nodeType":"YulBlock","src":"30232:236:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30249:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30260:2:21","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30242:6:21"},"nodeType":"YulFunctionCall","src":"30242:21:21"},"nodeType":"YulExpressionStatement","src":"30242:21:21"},{"nodeType":"YulVariableDeclaration","src":"30272:70:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30315:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30327:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30338:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30323:3:21"},"nodeType":"YulFunctionCall","src":"30323:18:21"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"30286:28:21"},"nodeType":"YulFunctionCall","src":"30286:56:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"30276:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30362:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30373:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30358:3:21"},"nodeType":"YulFunctionCall","src":"30358:18:21"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"30382:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"30390:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30378:3:21"},"nodeType":"YulFunctionCall","src":"30378:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30351:6:21"},"nodeType":"YulFunctionCall","src":"30351:50:21"},"nodeType":"YulExpressionStatement","src":"30351:50:21"},{"nodeType":"YulAssignment","src":"30410:52:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"30447:6:21"},{"name":"tail_1","nodeType":"YulIdentifier","src":"30455:6:21"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"30418:28:21"},"nodeType":"YulFunctionCall","src":"30418:44:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30410:4:21"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30193:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30204:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30212:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30223:4:21","type":""}],"src":"30003:465:21"},{"body":{"nodeType":"YulBlock","src":"30554:170:21","statements":[{"body":{"nodeType":"YulBlock","src":"30600:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30609:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30612:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30602:6:21"},"nodeType":"YulFunctionCall","src":"30602:12:21"},"nodeType":"YulExpressionStatement","src":"30602:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"30575:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"30584:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30571:3:21"},"nodeType":"YulFunctionCall","src":"30571:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"30596:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"30567:3:21"},"nodeType":"YulFunctionCall","src":"30567:32:21"},"nodeType":"YulIf","src":"30564:52:21"},{"nodeType":"YulVariableDeclaration","src":"30625:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30644:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30638:5:21"},"nodeType":"YulFunctionCall","src":"30638:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"30629:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30688:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"30663:24:21"},"nodeType":"YulFunctionCall","src":"30663:31:21"},"nodeType":"YulExpressionStatement","src":"30663:31:21"},{"nodeType":"YulAssignment","src":"30703:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"30713:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"30703:6:21"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30520:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"30531:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"30543:6:21","type":""}],"src":"30473:251:21"},{"body":{"nodeType":"YulBlock","src":"30777:135:21","statements":[{"nodeType":"YulVariableDeclaration","src":"30787:28:21","value":{"kind":"number","nodeType":"YulLiteral","src":"30797:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"30791:2:21","type":""}]},{"nodeType":"YulAssignment","src":"30824:35:21","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30840:1:21"},{"name":"_1","nodeType":"YulIdentifier","src":"30843:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30836:3:21"},"nodeType":"YulFunctionCall","src":"30836:10:21"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"30852:1:21"},{"name":"_1","nodeType":"YulIdentifier","src":"30855:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30848:3:21"},"nodeType":"YulFunctionCall","src":"30848:10:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30832:3:21"},"nodeType":"YulFunctionCall","src":"30832:27:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"30824:4:21"}]},{"body":{"nodeType":"YulBlock","src":"30884:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"30886:16:21"},"nodeType":"YulFunctionCall","src":"30886:18:21"},"nodeType":"YulExpressionStatement","src":"30886:18:21"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"30874:4:21"},{"name":"_1","nodeType":"YulIdentifier","src":"30880:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30871:2:21"},"nodeType":"YulFunctionCall","src":"30871:12:21"},"nodeType":"YulIf","src":"30868:38:21"}]},"name":"checked_sub_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"30759:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"30762:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"30768:4:21","type":""}],"src":"30729:183:21"},{"body":{"nodeType":"YulBlock","src":"31091:231:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31108:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31119:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31101:6:21"},"nodeType":"YulFunctionCall","src":"31101:21:21"},"nodeType":"YulExpressionStatement","src":"31101:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31142:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31153:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31138:3:21"},"nodeType":"YulFunctionCall","src":"31138:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"31158:2:21","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31131:6:21"},"nodeType":"YulFunctionCall","src":"31131:30:21"},"nodeType":"YulExpressionStatement","src":"31131:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31181:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31192:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31177:3:21"},"nodeType":"YulFunctionCall","src":"31177:18:21"},{"hexValue":"455243313135353a206163636f756e747320616e6420696473206c656e677468","kind":"string","nodeType":"YulLiteral","src":"31197:34:21","type":"","value":"ERC1155: accounts and ids length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31170:6:21"},"nodeType":"YulFunctionCall","src":"31170:62:21"},"nodeType":"YulExpressionStatement","src":"31170:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31252:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31263:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31248:3:21"},"nodeType":"YulFunctionCall","src":"31248:18:21"},{"hexValue":"206d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"31268:11:21","type":"","value":" mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31241:6:21"},"nodeType":"YulFunctionCall","src":"31241:39:21"},"nodeType":"YulExpressionStatement","src":"31241:39:21"},{"nodeType":"YulAssignment","src":"31289:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31301:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31312:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31297:3:21"},"nodeType":"YulFunctionCall","src":"31297:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31289:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31068:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31082:4:21","type":""}],"src":"30917:405:21"},{"body":{"nodeType":"YulBlock","src":"31456:168:21","statements":[{"nodeType":"YulAssignment","src":"31466:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31478:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31489:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31474:3:21"},"nodeType":"YulFunctionCall","src":"31474:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31466:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31508:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31523:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"31531:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31519:3:21"},"nodeType":"YulFunctionCall","src":"31519:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31501:6:21"},"nodeType":"YulFunctionCall","src":"31501:74:21"},"nodeType":"YulExpressionStatement","src":"31501:74:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31595:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31606:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31591:3:21"},"nodeType":"YulFunctionCall","src":"31591:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"31611:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31584:6:21"},"nodeType":"YulFunctionCall","src":"31584:34:21"},"nodeType":"YulExpressionStatement","src":"31584:34:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31417:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31428:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31436:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31447:4:21","type":""}],"src":"31327:297:21"},{"body":{"nodeType":"YulBlock","src":"31707:167:21","statements":[{"body":{"nodeType":"YulBlock","src":"31753:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31762:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31765:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"31755:6:21"},"nodeType":"YulFunctionCall","src":"31755:12:21"},"nodeType":"YulExpressionStatement","src":"31755:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"31728:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"31737:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31724:3:21"},"nodeType":"YulFunctionCall","src":"31724:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"31749:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"31720:3:21"},"nodeType":"YulFunctionCall","src":"31720:32:21"},"nodeType":"YulIf","src":"31717:52:21"},{"nodeType":"YulVariableDeclaration","src":"31778:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31797:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"31791:5:21"},"nodeType":"YulFunctionCall","src":"31791:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"31782:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31838:5:21"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"31816:21:21"},"nodeType":"YulFunctionCall","src":"31816:28:21"},"nodeType":"YulExpressionStatement","src":"31816:28:21"},{"nodeType":"YulAssignment","src":"31853:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"31863:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"31853:6:21"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31673:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"31684:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"31696:6:21","type":""}],"src":"31629:245:21"},{"body":{"nodeType":"YulBlock","src":"32036:241:21","statements":[{"nodeType":"YulAssignment","src":"32046:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32058:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32069:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32054:3:21"},"nodeType":"YulFunctionCall","src":"32054:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32046:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"32081:52:21","value":{"kind":"number","nodeType":"YulLiteral","src":"32091:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"32085:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32149:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32164:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"32172:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32160:3:21"},"nodeType":"YulFunctionCall","src":"32160:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32142:6:21"},"nodeType":"YulFunctionCall","src":"32142:34:21"},"nodeType":"YulExpressionStatement","src":"32142:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32196:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32207:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32192:3:21"},"nodeType":"YulFunctionCall","src":"32192:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"32216:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"32224:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32212:3:21"},"nodeType":"YulFunctionCall","src":"32212:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32185:6:21"},"nodeType":"YulFunctionCall","src":"32185:43:21"},"nodeType":"YulExpressionStatement","src":"32185:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32248:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32259:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32244:3:21"},"nodeType":"YulFunctionCall","src":"32244:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"32264:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32237:6:21"},"nodeType":"YulFunctionCall","src":"32237:34:21"},"nodeType":"YulExpressionStatement","src":"32237:34:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31989:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"32000:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32008:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32016:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32027:4:21","type":""}],"src":"31879:398:21"},{"body":{"nodeType":"YulBlock","src":"32429:124:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32452:3:21"},{"name":"value0","nodeType":"YulIdentifier","src":"32457:6:21"},{"name":"value1","nodeType":"YulIdentifier","src":"32465:6:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"32439:12:21"},"nodeType":"YulFunctionCall","src":"32439:33:21"},"nodeType":"YulExpressionStatement","src":"32439:33:21"},{"nodeType":"YulVariableDeclaration","src":"32481:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32495:3:21"},{"name":"value1","nodeType":"YulIdentifier","src":"32500:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32491:3:21"},"nodeType":"YulFunctionCall","src":"32491:16:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"32485:2:21","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"32523:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"32527:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32516:6:21"},"nodeType":"YulFunctionCall","src":"32516:13:21"},"nodeType":"YulExpressionStatement","src":"32516:13:21"},{"nodeType":"YulAssignment","src":"32538:9:21","value":{"name":"_1","nodeType":"YulIdentifier","src":"32545:2:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32538:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32397:3:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32402:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32410:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32421:3:21","type":""}],"src":"32282:271:21"},{"body":{"nodeType":"YulBlock","src":"32687:198:21","statements":[{"nodeType":"YulAssignment","src":"32697:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32709:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32720:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32705:3:21"},"nodeType":"YulFunctionCall","src":"32705:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32697:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"32732:52:21","value":{"kind":"number","nodeType":"YulLiteral","src":"32742:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"32736:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32800:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32815:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"32823:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32811:3:21"},"nodeType":"YulFunctionCall","src":"32811:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32793:6:21"},"nodeType":"YulFunctionCall","src":"32793:34:21"},"nodeType":"YulExpressionStatement","src":"32793:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32847:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32858:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32843:3:21"},"nodeType":"YulFunctionCall","src":"32843:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"32867:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"32875:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32863:3:21"},"nodeType":"YulFunctionCall","src":"32863:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32836:6:21"},"nodeType":"YulFunctionCall","src":"32836:43:21"},"nodeType":"YulExpressionStatement","src":"32836:43:21"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32648:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32659:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32667:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32678:4:21","type":""}],"src":"32558:327:21"},{"body":{"nodeType":"YulBlock","src":"33064:231:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33081:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33092:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33074:6:21"},"nodeType":"YulFunctionCall","src":"33074:21:21"},"nodeType":"YulExpressionStatement","src":"33074:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33115:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33126:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33111:3:21"},"nodeType":"YulFunctionCall","src":"33111:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"33131:2:21","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33104:6:21"},"nodeType":"YulFunctionCall","src":"33104:30:21"},"nodeType":"YulExpressionStatement","src":"33104:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33154:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33165:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33150:3:21"},"nodeType":"YulFunctionCall","src":"33150:18:21"},{"hexValue":"455243313135353a2073657474696e6720617070726f76616c20737461747573","kind":"string","nodeType":"YulLiteral","src":"33170:34:21","type":"","value":"ERC1155: setting approval status"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33143:6:21"},"nodeType":"YulFunctionCall","src":"33143:62:21"},"nodeType":"YulExpressionStatement","src":"33143:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33225:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33236:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33221:3:21"},"nodeType":"YulFunctionCall","src":"33221:18:21"},{"hexValue":"20666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"33241:11:21","type":"","value":" for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33214:6:21"},"nodeType":"YulFunctionCall","src":"33214:39:21"},"nodeType":"YulExpressionStatement","src":"33214:39:21"},{"nodeType":"YulAssignment","src":"33262:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33274:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33285:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33270:3:21"},"nodeType":"YulFunctionCall","src":"33270:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33262:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33041:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33055:4:21","type":""}],"src":"32890:405:21"},{"body":{"nodeType":"YulBlock","src":"33474:230:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33491:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33502:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33484:6:21"},"nodeType":"YulFunctionCall","src":"33484:21:21"},"nodeType":"YulExpressionStatement","src":"33484:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33525:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33536:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33521:3:21"},"nodeType":"YulFunctionCall","src":"33521:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"33541:2:21","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33514:6:21"},"nodeType":"YulFunctionCall","src":"33514:30:21"},"nodeType":"YulExpressionStatement","src":"33514:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33564:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33575:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33560:3:21"},"nodeType":"YulFunctionCall","src":"33560:18:21"},{"hexValue":"436f6e74726f6c6c61626c653a2043616c6c6572206973206e6f74206120636f","kind":"string","nodeType":"YulLiteral","src":"33580:34:21","type":"","value":"Controllable: Caller is not a co"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33553:6:21"},"nodeType":"YulFunctionCall","src":"33553:62:21"},"nodeType":"YulExpressionStatement","src":"33553:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33635:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33646:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33631:3:21"},"nodeType":"YulFunctionCall","src":"33631:18:21"},{"hexValue":"6e74726f6c6c6572","kind":"string","nodeType":"YulLiteral","src":"33651:10:21","type":"","value":"ntroller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33624:6:21"},"nodeType":"YulFunctionCall","src":"33624:38:21"},"nodeType":"YulExpressionStatement","src":"33624:38:21"},{"nodeType":"YulAssignment","src":"33671:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33683:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33694:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33679:3:21"},"nodeType":"YulFunctionCall","src":"33679:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33671:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3a494915be969f0305371ebdb09944c6f39346fa8227994f38a7231f6aafbd7b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33451:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33465:4:21","type":""}],"src":"33300:404:21"},{"body":{"nodeType":"YulBlock","src":"33866:211:21","statements":[{"nodeType":"YulAssignment","src":"33876:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33888:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33899:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33884:3:21"},"nodeType":"YulFunctionCall","src":"33884:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33876:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33918:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"33929:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33911:6:21"},"nodeType":"YulFunctionCall","src":"33911:25:21"},"nodeType":"YulExpressionStatement","src":"33911:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33956:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33967:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33952:3:21"},"nodeType":"YulFunctionCall","src":"33952:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33976:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"33984:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33972:3:21"},"nodeType":"YulFunctionCall","src":"33972:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33945:6:21"},"nodeType":"YulFunctionCall","src":"33945:83:21"},"nodeType":"YulExpressionStatement","src":"33945:83:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34048:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"34059:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34044:3:21"},"nodeType":"YulFunctionCall","src":"34044:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"34064:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34037:6:21"},"nodeType":"YulFunctionCall","src":"34037:34:21"},"nodeType":"YulExpressionStatement","src":"34037:34:21"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33819:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"33830:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33838:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33846:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33857:4:21","type":""}],"src":"33709:368:21"},{"body":{"nodeType":"YulBlock","src":"34163:103:21","statements":[{"body":{"nodeType":"YulBlock","src":"34209:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34218:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"34221:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"34211:6:21"},"nodeType":"YulFunctionCall","src":"34211:12:21"},"nodeType":"YulExpressionStatement","src":"34211:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"34184:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"34193:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34180:3:21"},"nodeType":"YulFunctionCall","src":"34180:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"34205:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"34176:3:21"},"nodeType":"YulFunctionCall","src":"34176:32:21"},"nodeType":"YulIf","src":"34173:52:21"},{"nodeType":"YulAssignment","src":"34234:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34250:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"34244:5:21"},"nodeType":"YulFunctionCall","src":"34244:16:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"34234:6:21"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34129:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"34140:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"34152:6:21","type":""}],"src":"34082:184:21"},{"body":{"nodeType":"YulBlock","src":"34394:184:21","statements":[{"nodeType":"YulAssignment","src":"34404:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34416:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"34427:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34412:3:21"},"nodeType":"YulFunctionCall","src":"34412:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34404:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34446:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34461:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"34469:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34457:3:21"},"nodeType":"YulFunctionCall","src":"34457:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34439:6:21"},"nodeType":"YulFunctionCall","src":"34439:74:21"},"nodeType":"YulExpressionStatement","src":"34439:74:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34533:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"34544:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34529:3:21"},"nodeType":"YulFunctionCall","src":"34529:18:21"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"34563:6:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34556:6:21"},"nodeType":"YulFunctionCall","src":"34556:14:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34549:6:21"},"nodeType":"YulFunctionCall","src":"34549:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34522:6:21"},"nodeType":"YulFunctionCall","src":"34522:50:21"},"nodeType":"YulExpressionStatement","src":"34522:50:21"}]},"name":"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34355:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"34366:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34374:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34385:4:21","type":""}],"src":"34271:307:21"},{"body":{"nodeType":"YulBlock","src":"34712:119:21","statements":[{"nodeType":"YulAssignment","src":"34722:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34734:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"34745:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34730:3:21"},"nodeType":"YulFunctionCall","src":"34730:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34722:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34764:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"34775:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34757:6:21"},"nodeType":"YulFunctionCall","src":"34757:25:21"},"nodeType":"YulExpressionStatement","src":"34757:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34802:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"34813:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34798:3:21"},"nodeType":"YulFunctionCall","src":"34798:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"34818:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34791:6:21"},"nodeType":"YulFunctionCall","src":"34791:34:21"},"nodeType":"YulExpressionStatement","src":"34791:34:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34673:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"34684:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34692:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34703:4:21","type":""}],"src":"34583:248:21"},{"body":{"nodeType":"YulBlock","src":"34883:133:21","statements":[{"nodeType":"YulVariableDeclaration","src":"34893:28:21","value":{"kind":"number","nodeType":"YulLiteral","src":"34903:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"34897:2:21","type":""}]},{"nodeType":"YulAssignment","src":"34930:34:21","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34945:1:21"},{"name":"_1","nodeType":"YulIdentifier","src":"34948:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34941:3:21"},"nodeType":"YulFunctionCall","src":"34941:10:21"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34957:1:21"},{"name":"_1","nodeType":"YulIdentifier","src":"34960:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34953:3:21"},"nodeType":"YulFunctionCall","src":"34953:10:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34937:3:21"},"nodeType":"YulFunctionCall","src":"34937:27:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"34930:3:21"}]},{"body":{"nodeType":"YulBlock","src":"34988:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"34990:16:21"},"nodeType":"YulFunctionCall","src":"34990:18:21"},"nodeType":"YulExpressionStatement","src":"34990:18:21"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"34979:3:21"},{"name":"_1","nodeType":"YulIdentifier","src":"34984:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34976:2:21"},"nodeType":"YulFunctionCall","src":"34976:11:21"},"nodeType":"YulIf","src":"34973:37:21"}]},"name":"checked_add_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"34866:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"34869:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"34875:3:21","type":""}],"src":"34836:180:21"},{"body":{"nodeType":"YulBlock","src":"35178:211:21","statements":[{"nodeType":"YulAssignment","src":"35188:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35200:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"35211:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35196:3:21"},"nodeType":"YulFunctionCall","src":"35196:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35188:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35230:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"35241:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35223:6:21"},"nodeType":"YulFunctionCall","src":"35223:25:21"},"nodeType":"YulExpressionStatement","src":"35223:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35268:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"35279:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35264:3:21"},"nodeType":"YulFunctionCall","src":"35264:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"35284:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35257:6:21"},"nodeType":"YulFunctionCall","src":"35257:34:21"},"nodeType":"YulExpressionStatement","src":"35257:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35311:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"35322:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35307:3:21"},"nodeType":"YulFunctionCall","src":"35307:18:21"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"35331:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"35339:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35327:3:21"},"nodeType":"YulFunctionCall","src":"35327:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35300:6:21"},"nodeType":"YulFunctionCall","src":"35300:83:21"},"nodeType":"YulExpressionStatement","src":"35300:83:21"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_address__to_t_bytes32_t_bytes32_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35131:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"35142:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35150:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35158:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35169:4:21","type":""}],"src":"35021:368:21"},{"body":{"nodeType":"YulBlock","src":"35475:103:21","statements":[{"body":{"nodeType":"YulBlock","src":"35521:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35530:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"35533:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"35523:6:21"},"nodeType":"YulFunctionCall","src":"35523:12:21"},"nodeType":"YulExpressionStatement","src":"35523:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"35496:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"35505:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35492:3:21"},"nodeType":"YulFunctionCall","src":"35492:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"35517:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"35488:3:21"},"nodeType":"YulFunctionCall","src":"35488:32:21"},"nodeType":"YulIf","src":"35485:52:21"},{"nodeType":"YulAssignment","src":"35546:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35562:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35556:5:21"},"nodeType":"YulFunctionCall","src":"35556:16:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"35546:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35441:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"35452:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"35464:6:21","type":""}],"src":"35394:184:21"},{"body":{"nodeType":"YulBlock","src":"35766:310:21","statements":[{"nodeType":"YulAssignment","src":"35776:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35788:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"35799:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35784:3:21"},"nodeType":"YulFunctionCall","src":"35784:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35776:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35819:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"35830:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35812:6:21"},"nodeType":"YulFunctionCall","src":"35812:25:21"},"nodeType":"YulExpressionStatement","src":"35812:25:21"},{"nodeType":"YulVariableDeclaration","src":"35846:52:21","value":{"kind":"number","nodeType":"YulLiteral","src":"35856:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"35850:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35918:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"35929:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35914:3:21"},"nodeType":"YulFunctionCall","src":"35914:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"35938:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"35946:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35934:3:21"},"nodeType":"YulFunctionCall","src":"35934:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35907:6:21"},"nodeType":"YulFunctionCall","src":"35907:43:21"},"nodeType":"YulExpressionStatement","src":"35907:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35970:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"35981:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35966:3:21"},"nodeType":"YulFunctionCall","src":"35966:18:21"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"35990:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"35998:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35986:3:21"},"nodeType":"YulFunctionCall","src":"35986:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35959:6:21"},"nodeType":"YulFunctionCall","src":"35959:43:21"},"nodeType":"YulExpressionStatement","src":"35959:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36022:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"36033:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36018:3:21"},"nodeType":"YulFunctionCall","src":"36018:18:21"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"36042:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"36050:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36038:3:21"},"nodeType":"YulFunctionCall","src":"36038:31:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36011:6:21"},"nodeType":"YulFunctionCall","src":"36011:59:21"},"nodeType":"YulExpressionStatement","src":"36011:59:21"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint64__to_t_bytes32_t_address_t_address_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35711:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"35722:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"35730:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35738:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35746:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35757:4:21","type":""}],"src":"35583:493:21"},{"body":{"nodeType":"YulBlock","src":"36148:259:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36165:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"36170:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36158:6:21"},"nodeType":"YulFunctionCall","src":"36158:19:21"},"nodeType":"YulExpressionStatement","src":"36158:19:21"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36203:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"36208:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36199:3:21"},"nodeType":"YulFunctionCall","src":"36199:14:21"},{"name":"start","nodeType":"YulIdentifier","src":"36215:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"36222:6:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"36186:12:21"},"nodeType":"YulFunctionCall","src":"36186:43:21"},"nodeType":"YulExpressionStatement","src":"36186:43:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36253:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"36258:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36249:3:21"},"nodeType":"YulFunctionCall","src":"36249:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"36267:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36245:3:21"},"nodeType":"YulFunctionCall","src":"36245:27:21"},{"kind":"number","nodeType":"YulLiteral","src":"36274:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36238:6:21"},"nodeType":"YulFunctionCall","src":"36238:38:21"},"nodeType":"YulExpressionStatement","src":"36238:38:21"},{"nodeType":"YulAssignment","src":"36285:116:21","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36300:3:21"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"36313:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"36321:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36309:3:21"},"nodeType":"YulFunctionCall","src":"36309:15:21"},{"kind":"number","nodeType":"YulLiteral","src":"36326:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36305:3:21"},"nodeType":"YulFunctionCall","src":"36305:88:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36296:3:21"},"nodeType":"YulFunctionCall","src":"36296:98:21"},{"kind":"number","nodeType":"YulLiteral","src":"36396:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36292:3:21"},"nodeType":"YulFunctionCall","src":"36292:109:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36285:3:21"}]}]},"name":"abi_encode_string_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"36117:5:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"36124:6:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"36132:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36140:3:21","type":""}],"src":"36081:326:21"},{"body":{"nodeType":"YulBlock","src":"36651:412:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36668:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"36679:3:21","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36661:6:21"},"nodeType":"YulFunctionCall","src":"36661:22:21"},"nodeType":"YulExpressionStatement","src":"36661:22:21"},{"nodeType":"YulAssignment","src":"36692:71:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36727:6:21"},{"name":"value1","nodeType":"YulIdentifier","src":"36735:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36747:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"36758:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36743:3:21"},"nodeType":"YulFunctionCall","src":"36743:19:21"}],"functionName":{"name":"abi_encode_string_calldata","nodeType":"YulIdentifier","src":"36700:26:21"},"nodeType":"YulFunctionCall","src":"36700:63:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36692:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"36772:52:21","value":{"kind":"number","nodeType":"YulLiteral","src":"36782:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"36776:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36844:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"36855:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36840:3:21"},"nodeType":"YulFunctionCall","src":"36840:18:21"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"36864:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"36872:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36860:3:21"},"nodeType":"YulFunctionCall","src":"36860:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36833:6:21"},"nodeType":"YulFunctionCall","src":"36833:43:21"},"nodeType":"YulExpressionStatement","src":"36833:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36896:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"36907:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36892:3:21"},"nodeType":"YulFunctionCall","src":"36892:18:21"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"36916:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"36924:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36912:3:21"},"nodeType":"YulFunctionCall","src":"36912:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36885:6:21"},"nodeType":"YulFunctionCall","src":"36885:51:21"},"nodeType":"YulExpressionStatement","src":"36885:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36956:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"36967:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36952:3:21"},"nodeType":"YulFunctionCall","src":"36952:18:21"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"36976:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"36984:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36972:3:21"},"nodeType":"YulFunctionCall","src":"36972:31:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36945:6:21"},"nodeType":"YulFunctionCall","src":"36945:59:21"},"nodeType":"YulExpressionStatement","src":"36945:59:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37024:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"37035:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37020:3:21"},"nodeType":"YulFunctionCall","src":"37020:19:21"},{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"37045:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"37053:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"37041:3:21"},"nodeType":"YulFunctionCall","src":"37041:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37013:6:21"},"nodeType":"YulFunctionCall","src":"37013:44:21"},"nodeType":"YulExpressionStatement","src":"37013:44:21"}]},"name":"abi_encode_tuple_t_string_calldata_ptr_t_address_t_uint32_t_uint64_t_address__to_t_string_memory_ptr_t_address_t_uint32_t_uint64_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36580:9:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"36591:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"36599:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"36607:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"36615:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36623:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36631:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36642:4:21","type":""}],"src":"36412:651:21"},{"body":{"nodeType":"YulBlock","src":"37123:65:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37140:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"37143:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37133:6:21"},"nodeType":"YulFunctionCall","src":"37133:14:21"},"nodeType":"YulExpressionStatement","src":"37133:14:21"},{"nodeType":"YulAssignment","src":"37156:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37174:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37177:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"37164:9:21"},"nodeType":"YulFunctionCall","src":"37164:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"37156:4:21"}]}]},"name":"array_dataslot_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"37106:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"37114:4:21","type":""}],"src":"37068:120:21"},{"body":{"nodeType":"YulBlock","src":"37273:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"37306:425:21","statements":[{"nodeType":"YulVariableDeclaration","src":"37320:11:21","value":{"kind":"number","nodeType":"YulLiteral","src":"37330:1:21","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"37324:2:21","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"37351:2:21"},{"name":"array","nodeType":"YulIdentifier","src":"37355:5:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37344:6:21"},"nodeType":"YulFunctionCall","src":"37344:17:21"},"nodeType":"YulExpressionStatement","src":"37344:17:21"},{"nodeType":"YulVariableDeclaration","src":"37374:31:21","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"37396:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"37400:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"37386:9:21"},"nodeType":"YulFunctionCall","src":"37386:19:21"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"37378:4:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"37418:57:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"37441:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37451:1:21","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"37458:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"37470:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37454:3:21"},"nodeType":"YulFunctionCall","src":"37454:19:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"37447:3:21"},"nodeType":"YulFunctionCall","src":"37447:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37437:3:21"},"nodeType":"YulFunctionCall","src":"37437:38:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"37422:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"37512:23:21","statements":[{"nodeType":"YulAssignment","src":"37514:19:21","value":{"name":"data","nodeType":"YulIdentifier","src":"37529:4:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"37514:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"37494:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"37506:4:21","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"37491:2:21"},"nodeType":"YulFunctionCall","src":"37491:20:21"},"nodeType":"YulIf","src":"37488:47:21"},{"nodeType":"YulVariableDeclaration","src":"37548:41:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"37562:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37572:1:21","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"37579:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"37584:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37575:3:21"},"nodeType":"YulFunctionCall","src":"37575:12:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"37568:3:21"},"nodeType":"YulFunctionCall","src":"37568:20:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37558:3:21"},"nodeType":"YulFunctionCall","src":"37558:31:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"37552:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"37602:24:21","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"37615:11:21"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"37606:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"37700:21:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"37709:5:21"},{"name":"_1","nodeType":"YulIdentifier","src":"37716:2:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"37702:6:21"},"nodeType":"YulFunctionCall","src":"37702:17:21"},"nodeType":"YulExpressionStatement","src":"37702:17:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"37650:5:21"},{"name":"_2","nodeType":"YulIdentifier","src":"37657:2:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"37647:2:21"},"nodeType":"YulFunctionCall","src":"37647:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"37661:26:21","statements":[{"nodeType":"YulAssignment","src":"37663:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"37676:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"37683:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37672:3:21"},"nodeType":"YulFunctionCall","src":"37672:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"37663:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"37643:3:21","statements":[]},"src":"37639:82:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"37289:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"37294:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37286:2:21"},"nodeType":"YulFunctionCall","src":"37286:11:21"},"nodeType":"YulIf","src":"37283:448:21"}]},"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"37245:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"37252:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"37257:10:21","type":""}],"src":"37193:544:21"},{"body":{"nodeType":"YulBlock","src":"37827:141:21","statements":[{"nodeType":"YulAssignment","src":"37837:125:21","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"37852:4:21"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37870:1:21","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"37873:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"37866:3:21"},"nodeType":"YulFunctionCall","src":"37866:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"37879:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"37862:3:21"},"nodeType":"YulFunctionCall","src":"37862:84:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"37858:3:21"},"nodeType":"YulFunctionCall","src":"37858:89:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"37848:3:21"},"nodeType":"YulFunctionCall","src":"37848:100:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37954:1:21","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"37957:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"37950:3:21"},"nodeType":"YulFunctionCall","src":"37950:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"37845:2:21"},"nodeType":"YulFunctionCall","src":"37845:117:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"37837:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"37804:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"37810:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"37818:4:21","type":""}],"src":"37742:226:21"},{"body":{"nodeType":"YulBlock","src":"38074:1220:21","statements":[{"body":{"nodeType":"YulBlock","src":"38115:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"38117:16:21"},"nodeType":"YulFunctionCall","src":"38117:18:21"},"nodeType":"YulExpressionStatement","src":"38117:18:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"38090:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"38095:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"38087:2:21"},"nodeType":"YulFunctionCall","src":"38087:27:21"},"nodeType":"YulIf","src":"38084:53:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"38189:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"38227:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"38221:5:21"},"nodeType":"YulFunctionCall","src":"38221:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"38195:25:21"},"nodeType":"YulFunctionCall","src":"38195:38:21"},{"name":"len","nodeType":"YulIdentifier","src":"38235:3:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"38146:42:21"},"nodeType":"YulFunctionCall","src":"38146:93:21"},"nodeType":"YulExpressionStatement","src":"38146:93:21"},{"nodeType":"YulVariableDeclaration","src":"38248:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"38265:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"38252:9:21","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"38309:727:21","statements":[{"nodeType":"YulVariableDeclaration","src":"38323:91:21","value":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"38342:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"38347:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"38338:3:21"},"nodeType":"YulFunctionCall","src":"38338:76:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"38327:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"38427:48:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"38470:4:21"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"38441:28:21"},"nodeType":"YulFunctionCall","src":"38441:34:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"38431:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"38488:18:21","value":{"name":"srcOffset","nodeType":"YulIdentifier","src":"38497:9:21"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"38492:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"38576:172:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"38601:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"38626:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"38631:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38622:3:21"},"nodeType":"YulFunctionCall","src":"38622:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"38609:12:21"},"nodeType":"YulFunctionCall","src":"38609:33:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"38594:6:21"},"nodeType":"YulFunctionCall","src":"38594:49:21"},"nodeType":"YulExpressionStatement","src":"38594:49:21"},{"nodeType":"YulAssignment","src":"38660:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"38674:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"38682:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38670:3:21"},"nodeType":"YulFunctionCall","src":"38670:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"38660:6:21"}]},{"nodeType":"YulAssignment","src":"38701:33:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"38718:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38729:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38714:3:21"},"nodeType":"YulFunctionCall","src":"38714:20:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"38701:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"38530:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"38533:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"38527:2:21"},"nodeType":"YulFunctionCall","src":"38527:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"38542:21:21","statements":[{"nodeType":"YulAssignment","src":"38544:17:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"38553:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"38556:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38549:3:21"},"nodeType":"YulFunctionCall","src":"38549:12:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"38544:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"38523:3:21","statements":[]},"src":"38519:229:21"},{"body":{"nodeType":"YulBlock","src":"38793:187:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"38818:6:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"38847:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"38852:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38843:3:21"},"nodeType":"YulFunctionCall","src":"38843:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"38830:12:21"},"nodeType":"YulFunctionCall","src":"38830:33:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38881:1:21","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"38884:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"38877:3:21"},"nodeType":"YulFunctionCall","src":"38877:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"38890:3:21","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"38873:3:21"},"nodeType":"YulFunctionCall","src":"38873:21:21"},{"kind":"number","nodeType":"YulLiteral","src":"38896:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"38869:3:21"},"nodeType":"YulFunctionCall","src":"38869:94:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"38865:3:21"},"nodeType":"YulFunctionCall","src":"38865:99:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"38826:3:21"},"nodeType":"YulFunctionCall","src":"38826:139:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"38811:6:21"},"nodeType":"YulFunctionCall","src":"38811:155:21"},"nodeType":"YulExpressionStatement","src":"38811:155:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"38767:7:21"},{"name":"len","nodeType":"YulIdentifier","src":"38776:3:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"38764:2:21"},"nodeType":"YulFunctionCall","src":"38764:16:21"},"nodeType":"YulIf","src":"38761:219:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"39000:4:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39014:1:21","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"39017:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"39010:3:21"},"nodeType":"YulFunctionCall","src":"39010:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"39023:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39006:3:21"},"nodeType":"YulFunctionCall","src":"39006:19:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"38993:6:21"},"nodeType":"YulFunctionCall","src":"38993:33:21"},"nodeType":"YulExpressionStatement","src":"38993:33:21"}]},"nodeType":"YulCase","src":"38302:734:21","value":{"kind":"number","nodeType":"YulLiteral","src":"38307:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"39053:235:21","statements":[{"nodeType":"YulVariableDeclaration","src":"39067:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"39080:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"39071:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"39113:74:21","statements":[{"nodeType":"YulAssignment","src":"39131:42:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"39157:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"39162:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39153:3:21"},"nodeType":"YulFunctionCall","src":"39153:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"39140:12:21"},"nodeType":"YulFunctionCall","src":"39140:33:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"39131:5:21"}]}]},"condition":{"name":"len","nodeType":"YulIdentifier","src":"39097:3:21"},"nodeType":"YulIf","src":"39094:93:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"39207:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39266:5:21"},{"name":"len","nodeType":"YulIdentifier","src":"39273:3:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"39213:52:21"},"nodeType":"YulFunctionCall","src":"39213:64:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"39200:6:21"},"nodeType":"YulFunctionCall","src":"39200:78:21"},"nodeType":"YulExpressionStatement","src":"39200:78:21"}]},"nodeType":"YulCase","src":"39045:243:21","value":"default"}],"expression":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"38285:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"38290:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"38282:2:21"},"nodeType":"YulFunctionCall","src":"38282:11:21"},"nodeType":"YulSwitch","src":"38275:1013:21"}]},"name":"copy_byte_array_to_storage_from_t_bytes_calldata_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"38054:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"38060:3:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"38065:3:21","type":""}],"src":"37973:1321:21"},{"body":{"nodeType":"YulBlock","src":"39601:530:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39618:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"39629:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39611:6:21"},"nodeType":"YulFunctionCall","src":"39611:25:21"},"nodeType":"YulExpressionStatement","src":"39611:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39656:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"39667:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39652:3:21"},"nodeType":"YulFunctionCall","src":"39652:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"39672:3:21","type":"","value":"224"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39645:6:21"},"nodeType":"YulFunctionCall","src":"39645:31:21"},"nodeType":"YulExpressionStatement","src":"39645:31:21"},{"nodeType":"YulAssignment","src":"39685:71:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"39720:6:21"},{"name":"value2","nodeType":"YulIdentifier","src":"39728:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39740:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"39751:3:21","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39736:3:21"},"nodeType":"YulFunctionCall","src":"39736:19:21"}],"functionName":{"name":"abi_encode_string_calldata","nodeType":"YulIdentifier","src":"39693:26:21"},"nodeType":"YulFunctionCall","src":"39693:63:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39685:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"39765:52:21","value":{"kind":"number","nodeType":"YulLiteral","src":"39775:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"39769:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39837:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"39848:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39833:3:21"},"nodeType":"YulFunctionCall","src":"39833:18:21"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"39857:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"39865:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"39853:3:21"},"nodeType":"YulFunctionCall","src":"39853:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39826:6:21"},"nodeType":"YulFunctionCall","src":"39826:43:21"},"nodeType":"YulExpressionStatement","src":"39826:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39889:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"39900:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39885:3:21"},"nodeType":"YulFunctionCall","src":"39885:18:21"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"39909:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"39917:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"39905:3:21"},"nodeType":"YulFunctionCall","src":"39905:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39878:6:21"},"nodeType":"YulFunctionCall","src":"39878:43:21"},"nodeType":"YulExpressionStatement","src":"39878:43:21"},{"nodeType":"YulVariableDeclaration","src":"39930:28:21","value":{"kind":"number","nodeType":"YulLiteral","src":"39940:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"39934:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39978:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"39989:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39974:3:21"},"nodeType":"YulFunctionCall","src":"39974:19:21"},{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"39999:6:21"},{"name":"_2","nodeType":"YulIdentifier","src":"40007:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"39995:3:21"},"nodeType":"YulFunctionCall","src":"39995:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39967:6:21"},"nodeType":"YulFunctionCall","src":"39967:44:21"},"nodeType":"YulExpressionStatement","src":"39967:44:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40031:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"40042:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40027:3:21"},"nodeType":"YulFunctionCall","src":"40027:19:21"},{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"40052:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"40060:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"40048:3:21"},"nodeType":"YulFunctionCall","src":"40048:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40020:6:21"},"nodeType":"YulFunctionCall","src":"40020:52:21"},"nodeType":"YulExpressionStatement","src":"40020:52:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40092:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"40103:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40088:3:21"},"nodeType":"YulFunctionCall","src":"40088:19:21"},{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"40113:6:21"},{"name":"_2","nodeType":"YulIdentifier","src":"40121:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"40109:3:21"},"nodeType":"YulFunctionCall","src":"40109:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40081:6:21"},"nodeType":"YulFunctionCall","src":"40081:44:21"},"nodeType":"YulExpressionStatement","src":"40081:44:21"}]},"name":"abi_encode_tuple_t_bytes32_t_string_calldata_ptr_t_address_t_address_t_rational_0_by_1_t_uint32_t_uint64__to_t_bytes32_t_string_memory_ptr_t_address_t_address_t_uint64_t_uint32_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39514:9:21","type":""},{"name":"value7","nodeType":"YulTypedName","src":"39525:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"39533:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"39541:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"39549:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"39557:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"39565:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"39573:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39581:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39592:4:21","type":""}],"src":"39299:832:21"},{"body":{"nodeType":"YulBlock","src":"40310:231:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40327:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"40338:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40320:6:21"},"nodeType":"YulFunctionCall","src":"40320:21:21"},"nodeType":"YulExpressionStatement","src":"40320:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40361:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"40372:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40357:3:21"},"nodeType":"YulFunctionCall","src":"40357:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"40377:2:21","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40350:6:21"},"nodeType":"YulFunctionCall","src":"40350:30:21"},"nodeType":"YulExpressionStatement","src":"40350:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40400:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"40411:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40396:3:21"},"nodeType":"YulFunctionCall","src":"40396:18:21"},{"hexValue":"455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72","kind":"string","nodeType":"YulLiteral","src":"40416:34:21","type":"","value":"ERC1155: caller is not owner nor"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40389:6:21"},"nodeType":"YulFunctionCall","src":"40389:62:21"},"nodeType":"YulExpressionStatement","src":"40389:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40471:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"40482:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40467:3:21"},"nodeType":"YulFunctionCall","src":"40467:18:21"},{"hexValue":"20617070726f766564","kind":"string","nodeType":"YulLiteral","src":"40487:11:21","type":"","value":" approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40460:6:21"},"nodeType":"YulFunctionCall","src":"40460:39:21"},"nodeType":"YulExpressionStatement","src":"40460:39:21"},{"nodeType":"YulAssignment","src":"40508:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40520:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"40531:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40516:3:21"},"nodeType":"YulFunctionCall","src":"40516:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40508:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40287:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40301:4:21","type":""}],"src":"40136:405:21"},{"body":{"nodeType":"YulBlock","src":"40720:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40737:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"40748:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40730:6:21"},"nodeType":"YulFunctionCall","src":"40730:21:21"},"nodeType":"YulExpressionStatement","src":"40730:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40771:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"40782:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40767:3:21"},"nodeType":"YulFunctionCall","src":"40767:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"40787:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40760:6:21"},"nodeType":"YulFunctionCall","src":"40760:30:21"},"nodeType":"YulExpressionStatement","src":"40760:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40810:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"40821:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40806:3:21"},"nodeType":"YulFunctionCall","src":"40806:18:21"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"40826:34:21","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40799:6:21"},"nodeType":"YulFunctionCall","src":"40799:62:21"},"nodeType":"YulExpressionStatement","src":"40799:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40881:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"40892:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40877:3:21"},"nodeType":"YulFunctionCall","src":"40877:18:21"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"40897:8:21","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40870:6:21"},"nodeType":"YulFunctionCall","src":"40870:36:21"},"nodeType":"YulExpressionStatement","src":"40870:36:21"},{"nodeType":"YulAssignment","src":"40915:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40927:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"40938:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40923:3:21"},"nodeType":"YulFunctionCall","src":"40923:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40915:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40697:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40711:4:21","type":""}],"src":"40546:402:21"},{"body":{"nodeType":"YulBlock","src":"41047:1373:21","statements":[{"nodeType":"YulVariableDeclaration","src":"41057:24:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"41077:3:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"41071:5:21"},"nodeType":"YulFunctionCall","src":"41071:10:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"41061:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"41124:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"41126:16:21"},"nodeType":"YulFunctionCall","src":"41126:18:21"},"nodeType":"YulExpressionStatement","src":"41126:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"41096:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"41104:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"41093:2:21"},"nodeType":"YulFunctionCall","src":"41093:30:21"},"nodeType":"YulIf","src":"41090:56:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"41198:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"41236:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"41230:5:21"},"nodeType":"YulFunctionCall","src":"41230:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"41204:25:21"},"nodeType":"YulFunctionCall","src":"41204:38:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"41244:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"41155:42:21"},"nodeType":"YulFunctionCall","src":"41155:96:21"},"nodeType":"YulExpressionStatement","src":"41155:96:21"},{"nodeType":"YulVariableDeclaration","src":"41260:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"41277:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"41264:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"41287:23:21","value":{"kind":"number","nodeType":"YulLiteral","src":"41306:4:21","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"41291:11:21","type":""}]},{"nodeType":"YulAssignment","src":"41319:24:21","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"41332:11:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"41319:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"41389:774:21","statements":[{"nodeType":"YulVariableDeclaration","src":"41403:94:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"41422:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"41430:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41418:3:21"},"nodeType":"YulFunctionCall","src":"41418:79:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"41407:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"41510:48:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"41553:4:21"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"41524:28:21"},"nodeType":"YulFunctionCall","src":"41524:34:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"41514:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"41571:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"41580:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"41575:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"41658:172:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"41683:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"41701:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"41706:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41697:3:21"},"nodeType":"YulFunctionCall","src":"41697:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"41691:5:21"},"nodeType":"YulFunctionCall","src":"41691:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"41676:6:21"},"nodeType":"YulFunctionCall","src":"41676:42:21"},"nodeType":"YulExpressionStatement","src":"41676:42:21"},{"nodeType":"YulAssignment","src":"41735:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"41749:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"41757:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41745:3:21"},"nodeType":"YulFunctionCall","src":"41745:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"41735:6:21"}]},{"nodeType":"YulAssignment","src":"41776:40:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"41793:9:21"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"41804:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41789:3:21"},"nodeType":"YulFunctionCall","src":"41789:27:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"41776:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"41605:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"41608:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"41602:2:21"},"nodeType":"YulFunctionCall","src":"41602:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"41617:28:21","statements":[{"nodeType":"YulAssignment","src":"41619:24:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"41628:1:21"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"41631:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41624:3:21"},"nodeType":"YulFunctionCall","src":"41624:19:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"41619:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"41598:3:21","statements":[]},"src":"41594:236:21"},{"body":{"nodeType":"YulBlock","src":"41878:226:21","statements":[{"nodeType":"YulVariableDeclaration","src":"41896:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"41923:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"41928:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41919:3:21"},"nodeType":"YulFunctionCall","src":"41919:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"41913:5:21"},"nodeType":"YulFunctionCall","src":"41913:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"41900:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"41963:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"41975:9:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42002:1:21","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"42005:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"41998:3:21"},"nodeType":"YulFunctionCall","src":"41998:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"42014:3:21","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41994:3:21"},"nodeType":"YulFunctionCall","src":"41994:24:21"},{"kind":"number","nodeType":"YulLiteral","src":"42020:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"41990:3:21"},"nodeType":"YulFunctionCall","src":"41990:97:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"41986:3:21"},"nodeType":"YulFunctionCall","src":"41986:102:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41971:3:21"},"nodeType":"YulFunctionCall","src":"41971:118:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"41956:6:21"},"nodeType":"YulFunctionCall","src":"41956:134:21"},"nodeType":"YulExpressionStatement","src":"41956:134:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"41849:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"41858:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"41846:2:21"},"nodeType":"YulFunctionCall","src":"41846:19:21"},"nodeType":"YulIf","src":"41843:261:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"42124:4:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42138:1:21","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"42141:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"42134:3:21"},"nodeType":"YulFunctionCall","src":"42134:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"42150:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42130:3:21"},"nodeType":"YulFunctionCall","src":"42130:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"42117:6:21"},"nodeType":"YulFunctionCall","src":"42117:36:21"},"nodeType":"YulExpressionStatement","src":"42117:36:21"}]},"nodeType":"YulCase","src":"41382:781:21","value":{"kind":"number","nodeType":"YulLiteral","src":"41387:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"42180:234:21","statements":[{"nodeType":"YulVariableDeclaration","src":"42194:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"42207:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"42198:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"42243:67:21","statements":[{"nodeType":"YulAssignment","src":"42261:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"42280:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"42285:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42276:3:21"},"nodeType":"YulFunctionCall","src":"42276:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"42270:5:21"},"nodeType":"YulFunctionCall","src":"42270:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"42261:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"42224:6:21"},"nodeType":"YulIf","src":"42221:89:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"42330:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42389:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"42396:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"42336:52:21"},"nodeType":"YulFunctionCall","src":"42336:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"42323:6:21"},"nodeType":"YulFunctionCall","src":"42323:81:21"},"nodeType":"YulExpressionStatement","src":"42323:81:21"}]},"nodeType":"YulCase","src":"42172:242:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"41362:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"41370:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"41359:2:21"},"nodeType":"YulFunctionCall","src":"41359:14:21"},"nodeType":"YulSwitch","src":"41352:1062:21"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"41032:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"41038:3:21","type":""}],"src":"40953:1467:21"},{"body":{"nodeType":"YulBlock","src":"42599:182:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42616:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42627:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42609:6:21"},"nodeType":"YulFunctionCall","src":"42609:21:21"},"nodeType":"YulExpressionStatement","src":"42609:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42650:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42661:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42646:3:21"},"nodeType":"YulFunctionCall","src":"42646:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"42666:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42639:6:21"},"nodeType":"YulFunctionCall","src":"42639:30:21"},"nodeType":"YulExpressionStatement","src":"42639:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42689:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42700:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42685:3:21"},"nodeType":"YulFunctionCall","src":"42685:18:21"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"42705:34:21","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42678:6:21"},"nodeType":"YulFunctionCall","src":"42678:62:21"},"nodeType":"YulExpressionStatement","src":"42678:62:21"},{"nodeType":"YulAssignment","src":"42749:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42761:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42772:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42757:3:21"},"nodeType":"YulFunctionCall","src":"42757:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42749:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42576:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42590:4:21","type":""}],"src":"42425:356:21"},{"body":{"nodeType":"YulBlock","src":"42933:100:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42950:3:21"},{"name":"value0","nodeType":"YulIdentifier","src":"42955:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42943:6:21"},"nodeType":"YulFunctionCall","src":"42943:19:21"},"nodeType":"YulExpressionStatement","src":"42943:19:21"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42982:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"42987:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42978:3:21"},"nodeType":"YulFunctionCall","src":"42978:12:21"},{"name":"value1","nodeType":"YulIdentifier","src":"42992:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42971:6:21"},"nodeType":"YulFunctionCall","src":"42971:28:21"},"nodeType":"YulExpressionStatement","src":"42971:28:21"},{"nodeType":"YulAssignment","src":"43008:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43019:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"43024:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43015:3:21"},"nodeType":"YulFunctionCall","src":"43015:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"43008:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42901:3:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"42906:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"42914:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42925:3:21","type":""}],"src":"42786:247:21"},{"body":{"nodeType":"YulBlock","src":"43369:519:21","statements":[{"nodeType":"YulVariableDeclaration","src":"43379:52:21","value":{"kind":"number","nodeType":"YulLiteral","src":"43389:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"43383:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43447:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"43462:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"43470:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"43458:3:21"},"nodeType":"YulFunctionCall","src":"43458:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43440:6:21"},"nodeType":"YulFunctionCall","src":"43440:34:21"},"nodeType":"YulExpressionStatement","src":"43440:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43494:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"43505:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43490:3:21"},"nodeType":"YulFunctionCall","src":"43490:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"43514:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"43522:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"43510:3:21"},"nodeType":"YulFunctionCall","src":"43510:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43483:6:21"},"nodeType":"YulFunctionCall","src":"43483:43:21"},"nodeType":"YulExpressionStatement","src":"43483:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43546:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"43557:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43542:3:21"},"nodeType":"YulFunctionCall","src":"43542:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"43562:3:21","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43535:6:21"},"nodeType":"YulFunctionCall","src":"43535:31:21"},"nodeType":"YulExpressionStatement","src":"43535:31:21"},{"nodeType":"YulVariableDeclaration","src":"43575:71:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"43618:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43630:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"43641:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43626:3:21"},"nodeType":"YulFunctionCall","src":"43626:19:21"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"43589:28:21"},"nodeType":"YulFunctionCall","src":"43589:57:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"43579:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43666:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"43677:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43662:3:21"},"nodeType":"YulFunctionCall","src":"43662:18:21"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"43686:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"43694:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43682:3:21"},"nodeType":"YulFunctionCall","src":"43682:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43655:6:21"},"nodeType":"YulFunctionCall","src":"43655:50:21"},"nodeType":"YulExpressionStatement","src":"43655:50:21"},{"nodeType":"YulVariableDeclaration","src":"43714:58:21","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"43757:6:21"},{"name":"tail_1","nodeType":"YulIdentifier","src":"43765:6:21"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"43728:28:21"},"nodeType":"YulFunctionCall","src":"43728:44:21"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"43718:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43792:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"43803:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43788:3:21"},"nodeType":"YulFunctionCall","src":"43788:19:21"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"43813:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"43821:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43809:3:21"},"nodeType":"YulFunctionCall","src":"43809:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43781:6:21"},"nodeType":"YulFunctionCall","src":"43781:51:21"},"nodeType":"YulExpressionStatement","src":"43781:51:21"},{"nodeType":"YulAssignment","src":"43841:41:21","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"43867:6:21"},{"name":"tail_2","nodeType":"YulIdentifier","src":"43875:6:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"43849:17:21"},"nodeType":"YulFunctionCall","src":"43849:33:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43841:4:21"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43306:9:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"43317:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"43325:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"43333:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"43341:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"43349:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43360:4:21","type":""}],"src":"43038:850:21"},{"body":{"nodeType":"YulBlock","src":"43973:169:21","statements":[{"body":{"nodeType":"YulBlock","src":"44019:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44028:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44031:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"44021:6:21"},"nodeType":"YulFunctionCall","src":"44021:12:21"},"nodeType":"YulExpressionStatement","src":"44021:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"43994:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"44003:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43990:3:21"},"nodeType":"YulFunctionCall","src":"43990:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"44015:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"43986:3:21"},"nodeType":"YulFunctionCall","src":"43986:32:21"},"nodeType":"YulIf","src":"43983:52:21"},{"nodeType":"YulVariableDeclaration","src":"44044:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44063:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"44057:5:21"},"nodeType":"YulFunctionCall","src":"44057:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"44048:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44106:5:21"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"44082:23:21"},"nodeType":"YulFunctionCall","src":"44082:30:21"},"nodeType":"YulExpressionStatement","src":"44082:30:21"},{"nodeType":"YulAssignment","src":"44121:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"44131:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"44121:6:21"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43939:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"43950:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"43962:6:21","type":""}],"src":"43893:249:21"},{"body":{"nodeType":"YulBlock","src":"44190:136:21","statements":[{"body":{"nodeType":"YulBlock","src":"44235:85:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44264:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44267:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44270:1:21","type":"","value":"4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"44249:14:21"},"nodeType":"YulFunctionCall","src":"44249:23:21"},"nodeType":"YulExpressionStatement","src":"44249:23:21"},{"nodeType":"YulAssignment","src":"44285:25:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44296:3:21","type":"","value":"224"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44307:1:21","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"44301:5:21"},"nodeType":"YulFunctionCall","src":"44301:8:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"44292:3:21"},"nodeType":"YulFunctionCall","src":"44292:18:21"},"variableNames":[{"name":"sig","nodeType":"YulIdentifier","src":"44285:3:21"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"44206:14:21"},"nodeType":"YulFunctionCall","src":"44206:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"44224:1:21","type":"","value":"3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"44203:2:21"},"nodeType":"YulFunctionCall","src":"44203:23:21"},"nodeType":"YulIf","src":"44200:120:21"}]},"name":"return_data_selector","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"sig","nodeType":"YulTypedName","src":"44182:3:21","type":""}],"src":"44147:179:21"},{"body":{"nodeType":"YulBlock","src":"44378:684:21","statements":[{"body":{"nodeType":"YulBlock","src":"44418:9:21","statements":[{"nodeType":"YulLeave","src":"44420:5:21"}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"44394:14:21"},"nodeType":"YulFunctionCall","src":"44394:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"44412:4:21","type":"","value":"0x44"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"44391:2:21"},"nodeType":"YulFunctionCall","src":"44391:26:21"},"nodeType":"YulIf","src":"44388:39:21"},{"nodeType":"YulVariableDeclaration","src":"44436:21:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44454:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"44448:5:21"},"nodeType":"YulFunctionCall","src":"44448:9:21"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"44440:4:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"44466:76:21","value":{"kind":"number","nodeType":"YulLiteral","src":"44476:66:21","type":"","value":"0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"44470:2:21","type":""}]},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"44566:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"44572:1:21","type":"","value":"4"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"44579:14:21"},"nodeType":"YulFunctionCall","src":"44579:16:21"},{"name":"_1","nodeType":"YulIdentifier","src":"44597:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44575:3:21"},"nodeType":"YulFunctionCall","src":"44575:25:21"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"44551:14:21"},"nodeType":"YulFunctionCall","src":"44551:50:21"},"nodeType":"YulExpressionStatement","src":"44551:50:21"},{"nodeType":"YulVariableDeclaration","src":"44610:25:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"44630:4:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"44624:5:21"},"nodeType":"YulFunctionCall","src":"44624:11:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"44614:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"44644:26:21","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"44654:14:21"},"nodeType":"YulFunctionCall","src":"44654:16:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"44648:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"44679:28:21","value":{"kind":"number","nodeType":"YulLiteral","src":"44689:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"44683:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"44765:9:21","statements":[{"nodeType":"YulLeave","src":"44767:5:21"}]},"condition":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"44725:6:21"},{"name":"_3","nodeType":"YulIdentifier","src":"44733:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"44722:2:21"},"nodeType":"YulFunctionCall","src":"44722:14:21"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"44745:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"44753:4:21","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44741:3:21"},"nodeType":"YulFunctionCall","src":"44741:17:21"},{"name":"_2","nodeType":"YulIdentifier","src":"44760:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"44738:2:21"},"nodeType":"YulFunctionCall","src":"44738:25:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"44719:2:21"},"nodeType":"YulFunctionCall","src":"44719:45:21"},"nodeType":"YulIf","src":"44716:58:21"},{"nodeType":"YulVariableDeclaration","src":"44783:28:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"44798:4:21"},{"name":"offset","nodeType":"YulIdentifier","src":"44804:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44794:3:21"},"nodeType":"YulFunctionCall","src":"44794:17:21"},"variables":[{"name":"msg","nodeType":"YulTypedName","src":"44787:3:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"44820:24:21","value":{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"44840:3:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"44834:5:21"},"nodeType":"YulFunctionCall","src":"44834:10:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"44824:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"44871:9:21","statements":[{"nodeType":"YulLeave","src":"44873:5:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"44859:6:21"},{"name":"_3","nodeType":"YulIdentifier","src":"44867:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"44856:2:21"},"nodeType":"YulFunctionCall","src":"44856:14:21"},"nodeType":"YulIf","src":"44853:27:21"},{"body":{"nodeType":"YulBlock","src":"44962:9:21","statements":[{"nodeType":"YulLeave","src":"44964:5:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"44903:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"44908:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44899:3:21"},"nodeType":"YulFunctionCall","src":"44899:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"44917:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44895:3:21"},"nodeType":"YulFunctionCall","src":"44895:27:21"},{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"44932:4:21"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"44938:14:21"},"nodeType":"YulFunctionCall","src":"44938:16:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44928:3:21"},"nodeType":"YulFunctionCall","src":"44928:27:21"},{"name":"_1","nodeType":"YulIdentifier","src":"44957:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44924:3:21"},"nodeType":"YulFunctionCall","src":"44924:36:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"44892:2:21"},"nodeType":"YulFunctionCall","src":"44892:69:21"},"nodeType":"YulIf","src":"44889:82:21"},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"45000:4:21"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"45014:6:21"},{"name":"length","nodeType":"YulIdentifier","src":"45022:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45010:3:21"},"nodeType":"YulFunctionCall","src":"45010:19:21"},{"kind":"number","nodeType":"YulLiteral","src":"45031:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45006:3:21"},"nodeType":"YulFunctionCall","src":"45006:30:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"44980:19:21"},"nodeType":"YulFunctionCall","src":"44980:57:21"},"nodeType":"YulExpressionStatement","src":"44980:57:21"},{"nodeType":"YulAssignment","src":"45046:10:21","value":{"name":"msg","nodeType":"YulIdentifier","src":"45053:3:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"45046:3:21"}]}]},"name":"try_decode_error_message","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"44370:3:21","type":""}],"src":"44331:731:21"},{"body":{"nodeType":"YulBlock","src":"45241:242:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45258:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"45269:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45251:6:21"},"nodeType":"YulFunctionCall","src":"45251:21:21"},"nodeType":"YulExpressionStatement","src":"45251:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45292:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"45303:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45288:3:21"},"nodeType":"YulFunctionCall","src":"45288:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"45308:2:21","type":"","value":"52"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45281:6:21"},"nodeType":"YulFunctionCall","src":"45281:30:21"},"nodeType":"YulExpressionStatement","src":"45281:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45331:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"45342:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45327:3:21"},"nodeType":"YulFunctionCall","src":"45327:18:21"},{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2045524331313535","kind":"string","nodeType":"YulLiteral","src":"45347:34:21","type":"","value":"ERC1155: transfer to non ERC1155"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45320:6:21"},"nodeType":"YulFunctionCall","src":"45320:62:21"},"nodeType":"YulExpressionStatement","src":"45320:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45402:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"45413:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45398:3:21"},"nodeType":"YulFunctionCall","src":"45398:18:21"},{"hexValue":"526563656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"45418:22:21","type":"","value":"Receiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45391:6:21"},"nodeType":"YulFunctionCall","src":"45391:50:21"},"nodeType":"YulExpressionStatement","src":"45391:50:21"},{"nodeType":"YulAssignment","src":"45450:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45462:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"45473:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45458:3:21"},"nodeType":"YulFunctionCall","src":"45458:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45450:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45218:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45232:4:21","type":""}],"src":"45067:416:21"},{"body":{"nodeType":"YulBlock","src":"45662:230:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45679:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"45690:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45672:6:21"},"nodeType":"YulFunctionCall","src":"45672:21:21"},"nodeType":"YulExpressionStatement","src":"45672:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45713:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"45724:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45709:3:21"},"nodeType":"YulFunctionCall","src":"45709:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"45729:2:21","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45702:6:21"},"nodeType":"YulFunctionCall","src":"45702:30:21"},"nodeType":"YulExpressionStatement","src":"45702:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45752:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"45763:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45748:3:21"},"nodeType":"YulFunctionCall","src":"45748:18:21"},{"hexValue":"455243313135353a204552433131353552656365697665722072656a65637465","kind":"string","nodeType":"YulLiteral","src":"45768:34:21","type":"","value":"ERC1155: ERC1155Receiver rejecte"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45741:6:21"},"nodeType":"YulFunctionCall","src":"45741:62:21"},"nodeType":"YulExpressionStatement","src":"45741:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45823:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"45834:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45819:3:21"},"nodeType":"YulFunctionCall","src":"45819:18:21"},{"hexValue":"6420746f6b656e73","kind":"string","nodeType":"YulLiteral","src":"45839:10:21","type":"","value":"d tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45812:6:21"},"nodeType":"YulFunctionCall","src":"45812:38:21"},"nodeType":"YulExpressionStatement","src":"45812:38:21"},{"nodeType":"YulAssignment","src":"45859:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45871:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"45882:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45867:3:21"},"nodeType":"YulFunctionCall","src":"45867:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45859:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45639:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45653:4:21","type":""}],"src":"45488:404:21"},{"body":{"nodeType":"YulBlock","src":"46096:321:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46113:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"46124:3:21","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46106:6:21"},"nodeType":"YulFunctionCall","src":"46106:22:21"},"nodeType":"YulExpressionStatement","src":"46106:22:21"},{"nodeType":"YulAssignment","src":"46137:54:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"46163:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46175:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"46186:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46171:3:21"},"nodeType":"YulFunctionCall","src":"46171:19:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"46145:17:21"},"nodeType":"YulFunctionCall","src":"46145:46:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46137:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46211:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"46222:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46207:3:21"},"nodeType":"YulFunctionCall","src":"46207:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"46231:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"46239:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"46227:3:21"},"nodeType":"YulFunctionCall","src":"46227:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46200:6:21"},"nodeType":"YulFunctionCall","src":"46200:83:21"},"nodeType":"YulExpressionStatement","src":"46200:83:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46303:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"46314:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46299:3:21"},"nodeType":"YulFunctionCall","src":"46299:18:21"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"46323:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"46331:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"46319:3:21"},"nodeType":"YulFunctionCall","src":"46319:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46292:6:21"},"nodeType":"YulFunctionCall","src":"46292:51:21"},"nodeType":"YulExpressionStatement","src":"46292:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46363:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"46374:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46359:3:21"},"nodeType":"YulFunctionCall","src":"46359:18:21"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"46383:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"46391:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"46379:3:21"},"nodeType":"YulFunctionCall","src":"46379:31:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46352:6:21"},"nodeType":"YulFunctionCall","src":"46352:59:21"},"nodeType":"YulExpressionStatement","src":"46352:59:21"}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_address_t_uint32_t_uint64__to_t_bytes_memory_ptr_t_address_t_uint32_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46041:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"46052:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"46060:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"46068:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"46076:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46087:4:21","type":""}],"src":"45897:520:21"},{"body":{"nodeType":"YulBlock","src":"46596:180:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46613:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"46624:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46606:6:21"},"nodeType":"YulFunctionCall","src":"46606:21:21"},"nodeType":"YulExpressionStatement","src":"46606:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46647:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"46658:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46643:3:21"},"nodeType":"YulFunctionCall","src":"46643:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"46663:2:21","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46636:6:21"},"nodeType":"YulFunctionCall","src":"46636:30:21"},"nodeType":"YulExpressionStatement","src":"46636:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46686:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"46697:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46682:3:21"},"nodeType":"YulFunctionCall","src":"46682:18:21"},{"hexValue":"726561644c6162656c3a20496e646578206f7574206f6620626f756e6473","kind":"string","nodeType":"YulLiteral","src":"46702:32:21","type":"","value":"readLabel: Index out of bounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46675:6:21"},"nodeType":"YulFunctionCall","src":"46675:60:21"},"nodeType":"YulExpressionStatement","src":"46675:60:21"},{"nodeType":"YulAssignment","src":"46744:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46756:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"46767:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46752:3:21"},"nodeType":"YulFunctionCall","src":"46752:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46744:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_723ef06cf58e92d84b8ad4ad83db034cb099b69c213da6595a1e7ca6ebe51535__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46573:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46587:4:21","type":""}],"src":"46422:354:21"},{"body":{"nodeType":"YulBlock","src":"46829:77:21","statements":[{"nodeType":"YulAssignment","src":"46839:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"46850:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"46853:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46846:3:21"},"nodeType":"YulFunctionCall","src":"46846:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"46839:3:21"}]},{"body":{"nodeType":"YulBlock","src":"46878:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"46880:16:21"},"nodeType":"YulFunctionCall","src":"46880:18:21"},"nodeType":"YulExpressionStatement","src":"46880:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"46870:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"46873:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"46867:2:21"},"nodeType":"YulFunctionCall","src":"46867:10:21"},"nodeType":"YulIf","src":"46864:36:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"46812:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"46815:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"46821:3:21","type":""}],"src":"46781:125:21"},{"body":{"nodeType":"YulBlock","src":"46960:79:21","statements":[{"nodeType":"YulAssignment","src":"46970:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"46982:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"46985:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46978:3:21"},"nodeType":"YulFunctionCall","src":"46978:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"46970:4:21"}]},{"body":{"nodeType":"YulBlock","src":"47011:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"47013:16:21"},"nodeType":"YulFunctionCall","src":"47013:18:21"},"nodeType":"YulExpressionStatement","src":"47013:18:21"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"47002:4:21"},{"name":"x","nodeType":"YulIdentifier","src":"47008:1:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"46999:2:21"},"nodeType":"YulFunctionCall","src":"46999:11:21"},"nodeType":"YulIf","src":"46996:37:21"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"46942:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"46945:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"46951:4:21","type":""}],"src":"46911:128:21"},{"body":{"nodeType":"YulBlock","src":"47218:179:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47235:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"47246:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47228:6:21"},"nodeType":"YulFunctionCall","src":"47228:21:21"},"nodeType":"YulExpressionStatement","src":"47228:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47269:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"47280:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47265:3:21"},"nodeType":"YulFunctionCall","src":"47265:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"47285:2:21","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47258:6:21"},"nodeType":"YulFunctionCall","src":"47258:30:21"},"nodeType":"YulExpressionStatement","src":"47258:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47308:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"47319:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47304:3:21"},"nodeType":"YulFunctionCall","src":"47304:18:21"},{"hexValue":"6e616d65686173683a204a756e6b20617420656e64206f66206e616d65","kind":"string","nodeType":"YulLiteral","src":"47324:31:21","type":"","value":"namehash: Junk at end of name"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47297:6:21"},"nodeType":"YulFunctionCall","src":"47297:59:21"},"nodeType":"YulExpressionStatement","src":"47297:59:21"},{"nodeType":"YulAssignment","src":"47365:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47377:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"47388:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47373:3:21"},"nodeType":"YulFunctionCall","src":"47373:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47365:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_912cb3202b125350fc41f3ab0d7246878642a776f73877d55ca2cfbcec1f2142__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47195:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47209:4:21","type":""}],"src":"47044:353:21"},{"body":{"nodeType":"YulBlock","src":"47611:435:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47628:3:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47641:3:21","type":"","value":"248"},{"name":"value0","nodeType":"YulIdentifier","src":"47646:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"47637:3:21"},"nodeType":"YulFunctionCall","src":"47637:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"47655:66:21","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"47633:3:21"},"nodeType":"YulFunctionCall","src":"47633:89:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47621:6:21"},"nodeType":"YulFunctionCall","src":"47621:102:21"},"nodeType":"YulExpressionStatement","src":"47621:102:21"},{"nodeType":"YulVariableDeclaration","src":"47732:27:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"47752:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"47746:5:21"},"nodeType":"YulFunctionCall","src":"47746:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"47736:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"47807:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"47815:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47803:3:21"},"nodeType":"YulFunctionCall","src":"47803:17:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47826:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"47831:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47822:3:21"},"nodeType":"YulFunctionCall","src":"47822:11:21"},{"name":"length","nodeType":"YulIdentifier","src":"47835:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"47768:34:21"},"nodeType":"YulFunctionCall","src":"47768:74:21"},"nodeType":"YulExpressionStatement","src":"47768:74:21"},{"nodeType":"YulVariableDeclaration","src":"47851:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47865:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"47870:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47861:3:21"},"nodeType":"YulFunctionCall","src":"47861:16:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"47855:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"47886:29:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"47908:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"47902:5:21"},"nodeType":"YulFunctionCall","src":"47902:13:21"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"47890:8:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"47963:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"47971:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47959:3:21"},"nodeType":"YulFunctionCall","src":"47959:17:21"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"47982:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"47986:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47978:3:21"},"nodeType":"YulFunctionCall","src":"47978:10:21"},{"name":"length_1","nodeType":"YulIdentifier","src":"47990:8:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"47924:34:21"},"nodeType":"YulFunctionCall","src":"47924:75:21"},"nodeType":"YulExpressionStatement","src":"47924:75:21"},{"nodeType":"YulAssignment","src":"48008:32:21","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"48023:2:21"},{"name":"length_1","nodeType":"YulIdentifier","src":"48027:8:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48019:3:21"},"nodeType":"YulFunctionCall","src":"48019:17:21"},{"kind":"number","nodeType":"YulLiteral","src":"48038:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48015:3:21"},"nodeType":"YulFunctionCall","src":"48015:25:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"48008:3:21"}]}]},"name":"abi_encode_tuple_packed_t_uint8_t_string_memory_ptr_t_bytes_memory_ptr__to_t_uint8_t_string_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"47571:3:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"47576:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"47584:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"47592:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"47603:3:21","type":""}],"src":"47402:644:21"},{"body":{"nodeType":"YulBlock","src":"48188:119:21","statements":[{"nodeType":"YulAssignment","src":"48198:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48210:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"48221:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48206:3:21"},"nodeType":"YulFunctionCall","src":"48206:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48198:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48240:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"48251:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48233:6:21"},"nodeType":"YulFunctionCall","src":"48233:25:21"},"nodeType":"YulExpressionStatement","src":"48233:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48278:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"48289:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48274:3:21"},"nodeType":"YulFunctionCall","src":"48274:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"48294:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48267:6:21"},"nodeType":"YulFunctionCall","src":"48267:34:21"},"nodeType":"YulExpressionStatement","src":"48267:34:21"}]},"name":"abi_encode_tuple_t_uint256_t_rational_1_by_1__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"48149:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"48160:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"48168:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"48179:4:21","type":""}],"src":"48051:256:21"},{"body":{"nodeType":"YulBlock","src":"48543:353:21","statements":[{"nodeType":"YulVariableDeclaration","src":"48553:52:21","value":{"kind":"number","nodeType":"YulLiteral","src":"48563:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"48557:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48621:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"48636:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"48644:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"48632:3:21"},"nodeType":"YulFunctionCall","src":"48632:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48614:6:21"},"nodeType":"YulFunctionCall","src":"48614:34:21"},"nodeType":"YulExpressionStatement","src":"48614:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48668:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"48679:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48664:3:21"},"nodeType":"YulFunctionCall","src":"48664:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"48688:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"48696:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"48684:3:21"},"nodeType":"YulFunctionCall","src":"48684:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48657:6:21"},"nodeType":"YulFunctionCall","src":"48657:43:21"},"nodeType":"YulExpressionStatement","src":"48657:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48720:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"48731:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48716:3:21"},"nodeType":"YulFunctionCall","src":"48716:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"48736:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48709:6:21"},"nodeType":"YulFunctionCall","src":"48709:34:21"},"nodeType":"YulExpressionStatement","src":"48709:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48763:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"48774:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48759:3:21"},"nodeType":"YulFunctionCall","src":"48759:18:21"},{"name":"value3","nodeType":"YulIdentifier","src":"48779:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48752:6:21"},"nodeType":"YulFunctionCall","src":"48752:34:21"},"nodeType":"YulExpressionStatement","src":"48752:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48806:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"48817:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48802:3:21"},"nodeType":"YulFunctionCall","src":"48802:19:21"},{"kind":"number","nodeType":"YulLiteral","src":"48823:3:21","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48795:6:21"},"nodeType":"YulFunctionCall","src":"48795:32:21"},"nodeType":"YulExpressionStatement","src":"48795:32:21"},{"nodeType":"YulAssignment","src":"48836:54:21","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"48862:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48874:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"48885:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48870:3:21"},"nodeType":"YulFunctionCall","src":"48870:19:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"48844:17:21"},"nodeType":"YulFunctionCall","src":"48844:46:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48836:4:21"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"48480:9:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"48491:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"48499:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"48507:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"48515:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"48523:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"48534:4:21","type":""}],"src":"48312:584:21"},{"body":{"nodeType":"YulBlock","src":"49075:181:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49092:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"49103:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49085:6:21"},"nodeType":"YulFunctionCall","src":"49085:21:21"},"nodeType":"YulExpressionStatement","src":"49085:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49126:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"49137:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49122:3:21"},"nodeType":"YulFunctionCall","src":"49122:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"49142:2:21","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49115:6:21"},"nodeType":"YulFunctionCall","src":"49115:30:21"},"nodeType":"YulExpressionStatement","src":"49115:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49165:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"49176:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49161:3:21"},"nodeType":"YulFunctionCall","src":"49161:18:21"},{"hexValue":"455243313135353a206d696e74206f66206578697374696e6720746f6b656e","kind":"string","nodeType":"YulLiteral","src":"49181:33:21","type":"","value":"ERC1155: mint of existing token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49154:6:21"},"nodeType":"YulFunctionCall","src":"49154:61:21"},"nodeType":"YulExpressionStatement","src":"49154:61:21"},{"nodeType":"YulAssignment","src":"49224:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49236:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"49247:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49232:3:21"},"nodeType":"YulFunctionCall","src":"49232:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49224:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_0a5a3f6c2833a0d5056e4c87913f3b2ad716b97085ed243cd04d020b3830fcac__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49052:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"49066:4:21","type":""}],"src":"48901:355:21"},{"body":{"nodeType":"YulBlock","src":"49435:223:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49452:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"49463:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49445:6:21"},"nodeType":"YulFunctionCall","src":"49445:21:21"},"nodeType":"YulExpressionStatement","src":"49445:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49486:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"49497:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49482:3:21"},"nodeType":"YulFunctionCall","src":"49482:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"49502:2:21","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49475:6:21"},"nodeType":"YulFunctionCall","src":"49475:30:21"},"nodeType":"YulExpressionStatement","src":"49475:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49525:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"49536:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49521:3:21"},"nodeType":"YulFunctionCall","src":"49521:18:21"},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"49541:34:21","type":"","value":"ERC1155: mint to the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49514:6:21"},"nodeType":"YulFunctionCall","src":"49514:62:21"},"nodeType":"YulExpressionStatement","src":"49514:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49596:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"49607:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49592:3:21"},"nodeType":"YulFunctionCall","src":"49592:18:21"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"49612:3:21","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49585:6:21"},"nodeType":"YulFunctionCall","src":"49585:31:21"},"nodeType":"YulExpressionStatement","src":"49585:31:21"},{"nodeType":"YulAssignment","src":"49625:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49637:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"49648:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49633:3:21"},"nodeType":"YulFunctionCall","src":"49633:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49625:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49412:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"49426:4:21","type":""}],"src":"49261:397:21"},{"body":{"nodeType":"YulBlock","src":"49837:242:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49854:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"49865:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49847:6:21"},"nodeType":"YulFunctionCall","src":"49847:21:21"},"nodeType":"YulExpressionStatement","src":"49847:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49888:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"49899:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49884:3:21"},"nodeType":"YulFunctionCall","src":"49884:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"49904:2:21","type":"","value":"52"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49877:6:21"},"nodeType":"YulFunctionCall","src":"49877:30:21"},"nodeType":"YulExpressionStatement","src":"49877:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49927:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"49938:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49923:3:21"},"nodeType":"YulFunctionCall","src":"49923:18:21"},{"hexValue":"455243313135353a206e65774f776e65722063616e6e6f742062652074686520","kind":"string","nodeType":"YulLiteral","src":"49943:34:21","type":"","value":"ERC1155: newOwner cannot be the "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49916:6:21"},"nodeType":"YulFunctionCall","src":"49916:62:21"},"nodeType":"YulExpressionStatement","src":"49916:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49998:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"50009:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49994:3:21"},"nodeType":"YulFunctionCall","src":"49994:18:21"},{"hexValue":"4e616d655772617070657220636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"50014:22:21","type":"","value":"NameWrapper contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49987:6:21"},"nodeType":"YulFunctionCall","src":"49987:50:21"},"nodeType":"YulExpressionStatement","src":"49987:50:21"},{"nodeType":"YulAssignment","src":"50046:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50058:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"50069:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50054:3:21"},"nodeType":"YulFunctionCall","src":"50054:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50046:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_52680399c4a01b55318dc7a1e656395c494f95152fe03ad468b9b7af702c670b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49814:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"49828:4:21","type":""}],"src":"49663:416:21"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint32_t_uint64__to_t_address_t_uint32_t_uint64__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffff))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffff))\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_uint64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_uint64(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_uint64(add(headStart, 32))\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_decode_tuple_t_contract$_IMetadataService_$2253(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_contract$_INameWrapperUpgrade_$2580__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_string(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), 0x20)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := array_allocation_size_string(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _2)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_uint32(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_string_memory_ptrt_addresst_addresst_uint64t_uint32t_uint64(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n        value4 := abi_decode_uint64(add(headStart, 128))\n        value5 := abi_decode_uint32(add(headStart, 160))\n        value6 := abi_decode_uint64(add(headStart, 192))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IBaseRegistrar_$985__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_string(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes32t_bytes32t_uint32t_uint64(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_uint32(add(headStart, 64))\n        value3 := abi_decode_uint64(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_contract$_ENS_$1122__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_uint16(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_uint16(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IMetadataService_$2253__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bytes32t_bytes32t_uint64(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_uint64(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bytes32t_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_addresst_uint16t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value2 := value\n        value3 := abi_decode_uint16(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value4 := value_1\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_bool(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_addresst_uint256t_addresst_uint16(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value2 := value\n        value3 := calldataload(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value4 := value_1\n        value5 := abi_decode_uint16(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes32t_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_uint32(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_contract$_INameWrapperUpgrade_$2580(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_string_calldata_ptrt_addresst_uint32t_uint64(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value3 := value\n        value4 := abi_decode_uint32(add(headStart, 96))\n        value5 := abi_decode_uint64(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes32t_addresst_addresst_uint64(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n        value3 := abi_decode_uint64(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_bytes32t_bytes32t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value2 := value\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value3 := value_1\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptrt_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value2 := value\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value3 := value_1\n    }\n    function abi_decode_tuple_t_bytes32t_string_calldata_ptrt_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value3 := value\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value4 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let _2 := mload(_1)\n        let _3 := array_allocation_size_string(_2)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        mstore(memPtr, _2)\n        if gt(add(add(_1, _2), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_1, 32), add(memPtr, 32), _2)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint64__to_t_bytes32_t_uint64__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffff))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_address_payablet_uint16t_address_payable(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := abi_decode_uint16(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_address_t_address_t_uint64__to_t_bytes32_t_bytes32_t_address_t_address_t_uint64__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function checked_sub_t_uint64(x, y) -> diff\n    {\n        let _1 := 0xffffffffffffffff\n        diff := sub(and(x, _1), and(y, _1))\n        if gt(diff, _1) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3a494915be969f0305371ebdb09944c6f39346fa8227994f38a7231f6aafbd7b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Controllable: Caller is not a co\")\n        mstore(add(headStart, 96), \"ntroller\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint64(x, y) -> sum\n    {\n        let _1 := 0xffffffffffffffff\n        sum := add(and(x, _1), and(y, _1))\n        if gt(sum, _1) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_address__to_t_bytes32_t_bytes32_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint64__to_t_bytes32_t_address_t_address_t_uint64__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffff))\n    }\n    function abi_encode_string_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_calldata_ptr_t_address_t_uint32_t_uint64_t_address__to_t_string_memory_ptr_t_address_t_uint32_t_uint64_t_address__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 160)\n        tail := abi_encode_string_calldata(value0, value1, add(headStart, 160))\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value2, _1))\n        mstore(add(headStart, 64), and(value3, 0xffffffff))\n        mstore(add(headStart, 96), and(value4, 0xffffffffffffffff))\n        mstore(add(headStart, 128), and(value5, _1))\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_bytes_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_calldata_ptr_to_t_bytes_storage(slot, src, len)\n    {\n        if gt(len, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), len)\n        let srcOffset := 0\n        switch gt(len, 31)\n        case 1 {\n            let loopEnd := and(len, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := srcOffset\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, len)\n            {\n                sstore(dstPtr, and(calldataload(add(src, srcOffset)), not(shr(and(shl(3, len), 248), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))))\n            }\n            sstore(slot, add(shl(1, len), 1))\n        }\n        default {\n            let value := 0\n            if len\n            {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, len))\n        }\n    }\n    function abi_encode_tuple_t_bytes32_t_string_calldata_ptr_t_address_t_address_t_rational_0_by_1_t_uint32_t_uint64__to_t_bytes32_t_string_memory_ptr_t_address_t_address_t_uint64_t_uint32_t_uint64__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 224)\n        tail := abi_encode_string_calldata(value1, value2, add(headStart, 224))\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 64), and(value3, _1))\n        mstore(add(headStart, 96), and(value4, _1))\n        let _2 := 0xffffffffffffffff\n        mstore(add(headStart, 128), and(value5, _2))\n        mstore(add(headStart, 160), and(value6, 0xffffffff))\n        mstore(add(headStart, 192), and(value7, _2))\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        end := add(pos, 64)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr_t_address_t_uint32_t_uint64__to_t_bytes_memory_ptr_t_address_t_uint32_t_uint64__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        tail := abi_encode_string(value0, add(headStart, 128))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), and(value2, 0xffffffff))\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_723ef06cf58e92d84b8ad4ad83db034cb099b69c213da6595a1e7ca6ebe51535__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"readLabel: Index out of bounds\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_912cb3202b125350fc41f3ab0d7246878642a776f73877d55ca2cfbcec1f2142__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"namehash: Junk at end of name\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_uint8_t_string_memory_ptr_t_bytes_memory_ptr__to_t_uint8_t_string_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(248, value0), 0xff00000000000000000000000000000000000000000000000000000000000000))\n        let length := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(pos, 1), length)\n        let _1 := add(pos, length)\n        let length_1 := mload(value2)\n        copy_memory_to_memory_with_cleanup(add(value2, 0x20), add(_1, 1), length_1)\n        end := add(add(_1, length_1), 1)\n    }\n    function abi_encode_tuple_t_uint256_t_rational_1_by_1__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_stringliteral_0a5a3f6c2833a0d5056e4c87913f3b2ad716b97085ed243cd04d020b3830fcac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC1155: mint of existing token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52680399c4a01b55318dc7a1e656395c494f95152fe03ad468b9b7af702c670b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: newOwner cannot be the \")\n        mstore(add(headStart, 96), \"NameWrapper contract\")\n        tail := add(headStart, 128)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2672":[{"length":32,"start":1273},{"length":32,"start":2640},{"length":32,"start":3404},{"length":32,"start":3865},{"length":32,"start":4068},{"length":32,"start":5184},{"length":32,"start":8939},{"length":32,"start":9269},{"length":32,"start":9972},{"length":32,"start":10475},{"length":32,"start":10888},{"length":32,"start":12235},{"length":32,"start":12434},{"length":32,"start":12660},{"length":32,"start":12806},{"length":32,"start":13774},{"length":32,"start":14603},{"length":32,"start":14886},{"length":32,"start":17030}],"2676":[{"length":32,"start":1196},{"length":32,"start":2762},{"length":32,"start":3005},{"length":32,"start":7067},{"length":32,"start":7241},{"length":32,"start":7440},{"length":32,"start":7730},{"length":32,"start":7873},{"length":32,"start":8505},{"length":32,"start":8806},{"length":32,"start":9136},{"length":32,"start":9642},{"length":32,"start":9801},{"length":32,"start":14376}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106102fe5760003560e01c80636e5d6ad21161019c578063cf408823116100ee578063eb8ae53011610097578063f242432a11610071578063f242432a1461077d578063f2fde38b14610790578063fd0cd0d9146107a357600080fd5b8063eb8ae53014610737578063ed70554d1461074a578063ee7eba781461076a57600080fd5b8063e0dba60f116100c8578063e0dba60f146106d5578063e72bf00f146106e8578063e985e9c5146106fb57600080fd5b8063cf4088231461068c578063d8c9921a1461069f578063da8c229e146106b257600080fd5b8063a22cb46511610150578063b6bcad261161012a578063b6bcad2614610653578063c475abff14610666578063c658e0861461067957600080fd5b8063a22cb4651461061a578063a40149821461062d578063adf4960a1461064057600080fd5b80638b4dfa75116101815780638b4dfa75146105e35780638cf8b41e146105f65780638da5cb5b1461060957600080fd5b80636e5d6ad2146105af578063715018a6146105db57600080fd5b806324c1af4411610255578063402906fc1161020957806353095467116101e357806353095467146105765780635d3590d5146105895780636352211e1461059c57600080fd5b8063402906fc1461051b57806341415eab146105435780634e1273f41461055657600080fd5b80632eb2c2d61161023a5780632eb2c2d6146104ce57806333c69ea9146104e15780633f15457f146104f457600080fd5b806324c1af44146104945780632b20e397146104a757600080fd5b806314ab9038116102b75780631896f70a116102915780631896f70a146104435780631f4e15041461045657806320c38e2b1461048157600080fd5b806314ab9038146103ef578063150b7a02146104045780631534e1771461043057600080fd5b806301ffc9a7116102e857806301ffc9a71461037057806306fdde03146103935780630e89341c146103dc57600080fd5b8062fdd58e146103035780630178fe3f14610329575b600080fd5b610316610311366004614cd5565b6107b6565b6040519081526020015b60405180910390f35b61033c610337366004614d01565b610875565b604080516001600160a01b03909416845263ffffffff909216602084015267ffffffffffffffff1690820152606001610320565b61038361037e366004614d30565b6108a5565b6040519015158152602001610320565b6103cf6040518060400160405280600b81526020017f4e616d655772617070657200000000000000000000000000000000000000000081525081565b6040516103209190614d9d565b6103cf6103ea366004614d01565b610917565b6104026103fd366004614dcd565b6109a4565b005b610417610412366004614e42565b610abd565b6040516001600160e01b03199091168152602001610320565b61040261043e366004614eb5565b610c5e565b610402610451366004614ed2565b610ca0565b600654610469906001600160a01b031681565b6040516001600160a01b039091168152602001610320565b6103cf61048f366004614d01565b610d7b565b6103166104a2366004614fdd565b610e15565b6104697f000000000000000000000000000000000000000000000000000000000000000081565b6104026104dc366004615105565b61105b565b6104026104ef3660046151b3565b6113c9565b6104697f000000000000000000000000000000000000000000000000000000000000000081565b61052e61052936600461520b565b6115d7565b60405163ffffffff9091168152602001610320565b610383610551366004614ed2565b61167f565b61056961056436600461522e565b611711565b604051610320919061532c565b600454610469906001600160a01b031681565b61040261059736600461533f565b61184f565b6104696105aa366004614d01565b6118e9565b6105c26105bd366004615380565b6118f4565b60405167ffffffffffffffff9091168152602001610320565b610402611a26565b6104026105f13660046153b5565b611a3a565b6104026106043660046153f7565b611bfd565b6000546001600160a01b0316610469565b610402610628366004615480565b611f74565b61031661063b3660046154ae565b61205e565b61038361064e36600461552f565b6121ff565b610402610661366004614eb5565b612224565b610316610674366004615552565b612494565b610316610687366004615574565b6127b9565b61040261069a3660046155e7565b6129c6565b6104026106ad36600461561f565b612b98565b6103836106c0366004614eb5565b60036020526000908152604090205460ff1681565b6104026106e3366004615480565b612cda565b6104026106f636600461564d565b612d42565b6103836107093660046156b5565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b61040261074536600461564d565b612e7e565b610316610758366004614d01565b60016020526000908152604090205481565b6104026107783660046156e3565b6132ad565b61040261078b366004615739565b6133ce565b61040261079e366004614eb5565b613503565b6103836107b1366004614d01565b613590565b60006001600160a01b0383166108395760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000610844836118e9565b9050836001600160a01b0316816001600160a01b03160361086957600191505061086f565b60009150505b92915050565b60008181526001602052604090205460a081901c60c082901c610899838383613649565b90959094509092509050565b60006001600160e01b031982167f81b4e24c00000000000000000000000000000000000000000000000000000000148061090857506001600160e01b031982167f150b7a0200000000000000000000000000000000000000000000000000000000145b8061086f575061086f8261369d565b600480546040517f0e89341c0000000000000000000000000000000000000000000000000000000081529182018390526060916001600160a01b0390911690630e89341c90602401600060405180830381865afa15801561097c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261086f91908101906157a2565b816109af813361167f565b6109d55760405163168ab55d60e31b815260048101829052336024820152604401610830565b82601060006109e383610875565b5091505063ffffffff8282161615610a115760405163a2a7201360e01b815260048101849052602401610830565b6040517f14ab90380000000000000000000000000000000000000000000000000000000081526004810187905267ffffffffffffffff861660248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906314ab9038906044015b600060405180830381600087803b158015610a9d57600080fd5b505af1158015610ab1573d6000803e3d6000fd5b50505050505050505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b21576040517f1931a53800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808080610b328688018861581a565b83516020850120939750919550935091508890808214610b88576040517fc65c3ccc0000000000000000000000000000000000000000000000000000000081526004810182905260248101839052604401610830565b6040517f28ed4f6c000000000000000000000000000000000000000000000000000000008152600481018390523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906328ed4f6c90604401600060405180830381600087803b158015610c0957600080fd5b505af1158015610c1d573d6000803e3d6000fd5b50505050610c2d86868686613738565b507f150b7a02000000000000000000000000000000000000000000000000000000009b9a5050505050505050505050565b610c66613971565b600480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b81610cab813361167f565b610cd15760405163168ab55d60e31b815260048101829052336024820152604401610830565b8260086000610cdf83610875565b5091505063ffffffff8282161615610d0d5760405163a2a7201360e01b815260048101849052602401610830565b6040517f1896f70a000000000000000000000000000000000000000000000000000000008152600481018790526001600160a01b0386811660248301527f00000000000000000000000000000000000000000000000000000000000000001690631896f70a90604401610a83565b60056020526000908152604090208054610d9490615882565b80601f0160208091040260200160405190810160405280929190818152602001828054610dc090615882565b8015610e0d5780601f10610de257610100808354040283529160200191610e0d565b820191906000526020600020905b815481529060010190602001808311610df057829003601f168201915b505050505081565b600087610e22813361167f565b610e485760405163168ab55d60e31b815260048101829052336024820152604401610830565b87516020890120610e808a82604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b9250610e8c8a846139cb565b610e968386613b0a565b610ea18a848b613b3d565b50610eae8a848787613c0a565b9350610eb983613590565b610f88576040517f5ef2c7f0000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290523060448201526001600160a01b03888116606483015267ffffffffffffffff881660848301527f00000000000000000000000000000000000000000000000000000000000000001690635ef2c7f09060a401600060405180830381600087803b158015610f5d57600080fd5b505af1158015610f71573d6000803e3d6000fd5b50505050610f838a848b8b8989613c50565b61104e565b6040517f5ef2c7f0000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290523060448201526001600160a01b03888116606483015267ffffffffffffffff881660848301527f00000000000000000000000000000000000000000000000000000000000000001690635ef2c7f09060a401600060405180830381600087803b15801561102857600080fd5b505af115801561103c573d6000803e3d6000fd5b5050505061104e8a848b8b8989613c7e565b5050979650505050505050565b81518351146110d25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610830565b6001600160a01b03841661114e5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610830565b6001600160a01b03851633148061118857506001600160a01b038516600090815260026020908152604080832033845290915290205460ff165b6111fa5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610830565b60005b835181101561135c57600084828151811061121a5761121a6158bc565b602002602001015190506000848381518110611238576112386158bc565b60200260200101519050600080600061125085610875565b925092509250611261858383613d42565b5083600114801561128357508a6001600160a01b0316836001600160a01b0316145b6112f55760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152608401610830565b60008581526001602052604090206001600160a01b038b1663ffffffff60a01b60a085901b16177fffffffffffffffff00000000000000000000000000000000000000000000000060c084901b16179055505050505080611355906158e8565b90506111fd565b50836001600160a01b0316856001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516113ac929190615902565b60405180910390a46113c2338686868686613e19565b5050505050565b604080516020808201879052818301869052825180830384018152606090920190925280519101206113fb8184613b0a565b6000808061140884610875565b919450925090506001600160a01b03831615806114b757506040516302571be360e01b81526004810185905230906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906302571be390602401602060405180830381865afa158015611487573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ab9190615930565b6001600160a01b031614155b156114ee576040517f5374b59900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806114fa8a610875565b90935091508a905061153b57611510863361167f565b6115365760405163168ab55d60e31b815260048101879052336024820152604401610830565b61156b565b6115458a3361167f565b61156b5760405163168ab55d60e31b815260048101879052336024820152604401610830565b611576868984614005565b611581878483614040565b9650620100008416158015906115a557508363ffffffff1688851763ffffffff1614155b156115c65760405163a2a7201360e01b815260048101879052602401610830565b96831796610ab186868a868b61408a565b6000826115e4813361167f565b61160a5760405163168ab55d60e31b815260048101829052336024820152604401610830565b836002600061161883610875565b5091505063ffffffff82821616156116465760405163a2a7201360e01b815260048101849052602401610830565b600080806116538a610875565b92509250925061166c8a84848c61ffff1617848561408a565b505061ffff909616979650505050505050565b600080808061168d86610875565b925092509250846001600160a01b0316836001600160a01b031614806116d857506001600160a01b0380841660009081526002602090815260408083209389168352929052205460ff165b8015611707575062020000821615806117075750426116fa6276a7008361594d565b67ffffffffffffffff1610155b9695505050505050565b6060815183511461178a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610830565b6000835167ffffffffffffffff8111156117a6576117a6614f02565b6040519080825280602002602001820160405280156117cf578160200160208202803683370190505b50905060005b84518110156118475761181a8582815181106117f3576117f36158bc565b602002602001015185838151811061180d5761180d6158bc565b60200260200101516107b6565b82828151811061182c5761182c6158bc565b6020908102919091010152611840816158e8565b90506117d5565b509392505050565b611857613971565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af11580156118bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e39190615975565b50505050565b600061086f82614134565b60408051602080820186905281830185905282518083038401815260609092019092528051910120600090600061192b863361167f565b9050801580156119425750611940823361167f565b155b156119695760405163168ab55d60e31b815260048101839052336024820152604401610830565b6000808061197685610875565b9250925092508315801561198d5750620400008216155b156119ae5760405163a2a7201360e01b815260048101869052602401610830565b60006119b98a610875565b925050506119c8888383614040565b97506119d68685858b61414a565b60405167ffffffffffffffff8916815286907ff675815a0817338f93a7da433f6bd5f5542f1029b11b455191ac96c7f6a9b1329060200160405180910390a28796505050505050505b9392505050565b611a2e613971565b611a3860006141aa565b565b604080517f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae60208083019190915281830186905282518083038401815260609092019092528051910120611a8e813361167f565b611ab45760405163168ab55d60e31b815260048101829052336024820152604401610830565b306001600160a01b03841603611b01576040517f5949361a0000000000000000000000000000000000000000000000000000000081526001600160a01b0384166004820152602401610830565b604080517f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae60208083019190915281830187905282518083038401815260609092019092528051910120611b56905b83614212565b6040517f42842e0e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038481166024830152604482018690527f000000000000000000000000000000000000000000000000000000000000000016906342842e0e90606401600060405180830381600087803b158015611bdf57600080fd5b505af1158015611bf3573d6000803e3d6000fd5b5050505050505050565b60008585604051611c0f929190615992565b6040519081900381207f6352211e0000000000000000000000000000000000000000000000000000000082526004820181905291506000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636352211e90602401602060405180830381865afa158015611c98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cbc9190615930565b90506001600160a01b0381163314801590611d7d57506040517fe985e9c50000000000000000000000000000000000000000000000000000000081526001600160a01b0382811660048301523360248301527f0000000000000000000000000000000000000000000000000000000000000000169063e985e9c590604401602060405180830381865afa158015611d57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d7b9190615975565b155b15611ded57604080517f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae6020808301919091528183018590528251808303840181526060830193849052805191012063168ab55d60e31b909252606481019190915233608482015260a401610830565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b038281166004830152306024830152604482018490527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90606401600060405180830381600087803b158015611e7657600080fd5b505af1158015611e8a573d6000803e3d6000fd5b50506040517f28ed4f6c000000000000000000000000000000000000000000000000000000008152600481018590523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692506328ed4f6c9150604401600060405180830381600087803b158015611f0f57600080fd5b505af1158015611f23573d6000803e3d6000fd5b50505050611f6b87878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250899250889150879050613738565b50505050505050565b6001600160a01b0382163303611ff25760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610830565b3360008181526002602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b3360009081526003602052604081205460ff166120e35760405162461bcd60e51b815260206004820152602860248201527f436f6e74726f6c6c61626c653a2043616c6c6572206973206e6f74206120636f60448201527f6e74726f6c6c65720000000000000000000000000000000000000000000000006064820152608401610830565b600087876040516120f5929190615992565b6040519081900381207ffca247ac000000000000000000000000000000000000000000000000000000008252600482018190523060248301526044820187905291507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063fca247ac906064016020604051808303816000875af115801561218a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121ae91906159a2565b91506121f488888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a9250879150889050613738565b509695505050505050565b60008061220b84610875565b50841663ffffffff908116908516149250505092915050565b61222c613971565b6006546001600160a01b03161561234c5760065460405163a22cb46560e01b81526001600160a01b039182166004820152600060248201527f00000000000000000000000000000000000000000000000000000000000000009091169063a22cb46590604401600060405180830381600087803b1580156122ac57600080fd5b505af11580156122c0573d6000803e3d6000fd5b505060065460405163a22cb46560e01b81526001600160a01b039182166004820152600060248201527f0000000000000000000000000000000000000000000000000000000000000000909116925063a22cb4659150604401600060405180830381600087803b15801561233357600080fd5b505af1158015612347573d6000803e3d6000fd5b505050505b600680547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038316908117909155156124915760065460405163a22cb46560e01b81526001600160a01b039182166004820152600160248201527f00000000000000000000000000000000000000000000000000000000000000009091169063a22cb46590604401600060405180830381600087803b1580156123f657600080fd5b505af115801561240a573d6000803e3d6000fd5b505060065460405163a22cb46560e01b81526001600160a01b039182166004820152600160248201527f0000000000000000000000000000000000000000000000000000000000000000909116925063a22cb4659150604401600060405180830381600087803b15801561247d57600080fd5b505af11580156113c2573d6000803e3d6000fd5b50565b3360009081526003602052604081205460ff166125195760405162461bcd60e51b815260206004820152602860248201527f436f6e74726f6c6c61626c653a2043616c6c6572206973206e6f74206120636f60448201527f6e74726f6c6c65720000000000000000000000000000000000000000000000006064820152608401610830565b604080517f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae602080830191909152818301869052825180830384018152606090920190925280519101206000906040517fc475abff00000000000000000000000000000000000000000000000000000000815260048101869052602481018590529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c475abff906044016020604051808303816000875af11580156125f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061261791906159a2565b6040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018790529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636352211e90602401602060405180830381865afa9250505080156126b4575060408051601f3d908101601f191682019092526126b191810190615930565b60015b6126c157915061086f9050565b6001600160a01b0381163014158061276b57506040516302571be360e01b81526004810184905230906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906302571be390602401602060405180830381865afa15801561273b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061275f9190615930565b6001600160a01b031614155b1561277a5750915061086f9050565b50600061278a6276a700836159bb565b60008481526001602052604090205490915060a081901c6127ad8583838661414a565b50919695505050505050565b6000866127c6813361167f565b6127ec5760405163168ab55d60e31b815260048101829052336024820152604401610830565b600087876040516127fe929190615992565b604051809103902090506128398982604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b925061284589846139cb565b61284f8386613b0a565b60006128928a858b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250613b3d92505050565b90506128a08a858888613c0a565b94506128ab84613590565b612973576040517f06ab5923000000000000000000000000000000000000000000000000000000008152600481018b9052602481018390523060448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906306ab5923906064016020604051808303816000875af115801561293c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061296091906159a2565b5061296e848289898961431d565b6129b9565b6129b98a858b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508d92508c91508b9050613c7e565b5050509695505050505050565b836129d1813361167f565b6129f75760405163168ab55d60e31b815260048101829052336024820152604401610830565b84601c6000612a0583610875565b5091505063ffffffff8282161615612a335760405163a2a7201360e01b815260048101849052602401610830565b6040517fcf408823000000000000000000000000000000000000000000000000000000008152600481018990523060248201526001600160a01b03878116604483015267ffffffffffffffff871660648301527f0000000000000000000000000000000000000000000000000000000000000000169063cf40882390608401600060405180830381600087803b158015612acc57600080fd5b505af1158015612ae0573d6000803e3d6000fd5b5050506001600160a01b0388169050612b60576000612afe89610875565b509150506201ffff1962020000821601612b4f576040517f5949361a0000000000000000000000000000000000000000000000000000000081526001600160a01b0389166004820152602401610830565b612b5a896000614212565b50611bf3565b6000612b6b896118e9565b9050612b8d81898b60001c60016040518060200160405280600081525061435f565b505050505050505050565b60408051602080820186905281830185905282518083038401815260609092019092528051910120612bca813361167f565b612bf05760405163168ab55d60e31b815260048101829052336024820152604401610830565b7f6c32148f748aba23997146d7fe89e962e3cc30271290fb96f5f4337756c03b528401612c49576040517f615a470300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0382161580612c6757506001600160a01b03821630145b15612ca9576040517f5949361a0000000000000000000000000000000000000000000000000000000081526001600160a01b0383166004820152602401610830565b604080516020808201879052818301869052825180830384018152606090920190925280519101206118e390611b50565b612ce2613971565b6001600160a01b038216600081815260036020908152604091829020805460ff191685151590811790915591519182527f4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf8791015b60405180910390a25050565b60008484604051612d54929190615992565b60405190819003902090506000612db27f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae83604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b90506000806000612dc2846144dd565b925092509250826001600160a01b0316876001600160a01b031614612dee57612dec848383613d42565b505b6006546040517ff9547a9e0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063f9547a9e90612e41908c908c908c90889088908e90600401615a07565b600060405180830381600087803b158015612e5b57600080fd5b505af1158015612e6f573d6000803e3d6000fd5b50505050505050505050505050565b600080612ec5600087878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092939250506145769050565b915091506000612f0e8288888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929392505061462d9050565b604080516020808201849052818301879052825180830384018152606090920190925280519101209091506000906000818152600560205260409020909150612f58888a83615aa8565b507f6c32148f748aba23997146d7fe89e962e3cc30271290fb96f5f4337756c03b528201612fb2576040517f615a470300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040516302571be360e01b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906302571be390602401602060405180830381865afa15801561301a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061303e9190615930565b90506001600160a01b03811633148015906130ff57506040517fe985e9c50000000000000000000000000000000000000000000000000000000081526001600160a01b0382811660048301523360248301527f0000000000000000000000000000000000000000000000000000000000000000169063e985e9c590604401602060405180830381865afa1580156130d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130fd9190615975565b155b156131265760405163168ab55d60e31b815260048101839052336024820152604401610830565b6001600160a01b038616156131d1576040517f1896f70a000000000000000000000000000000000000000000000000000000008152600481018390526001600160a01b0387811660248301527f00000000000000000000000000000000000000000000000000000000000000001690631896f70a90604401600060405180830381600087803b1580156131b857600080fd5b505af11580156131cc573d6000803e3d6000fd5b505050505b6040517f5b0fc9c3000000000000000000000000000000000000000000000000000000008152600481018390523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635b0fc9c390604401600060405180830381600087803b15801561325257600080fd5b505af1158015613266573d6000803e3d6000fd5b50505050612b8d828a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052508d9350915081905061431d565b600084846040516132bf929190615992565b6040518091039020905060006132fc8783604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b9050600080600061330c846144dd565b925092509250826001600160a01b0316876001600160a01b03161461333857613336848383613d42565b505b6006546040517f24c1af440000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906324c1af4490613390908d908d908d908d908d906000908b908b90600401615b68565b600060405180830381600087803b1580156133aa57600080fd5b505af11580156133be573d6000803e3d6000fd5b5050505050505050505050505050565b6001600160a01b03841661344a5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610830565b6001600160a01b03851633148061348457506001600160a01b038516600090815260026020908152604080832033845290915290205460ff165b6134f65760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610830565b6113c2858585858561435f565b61350b613971565b6001600160a01b0381166135875760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610830565b612491816141aa565b60008061359c836118e9565b6001600160a01b03161415801561086f57506040516302571be360e01b81526004810183905230906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906302571be390602401602060405180830381865afa158015613615573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136399190615930565b6001600160a01b03161492915050565b600080428367ffffffffffffffff161015613694577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00006201000085160161368f57600094505b600093505b50929391925050565b60006001600160e01b031982167fd9b67a2600000000000000000000000000000000000000000000000000000000148061370057506001600160e01b031982167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061086f57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b031983161461086f565b8351602085012060006137927f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae83604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b905060006137d5876040518060400160405280600581526020017f03657468000000000000000000000000000000000000000000000000000000008152506146ec565b60008381526005602052604090209091506137f08282615bcb565b506040517fd6e4fa86000000000000000000000000000000000000000000000000000000008152600481018490526000906276a700907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d6e4fa8690602401602060405180830381865afa158015613877573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061389b91906159a2565b6138a591906159bb565b90506138bd8383896203000061ffff8b16178561431d565b6001600160a01b03851615611bf3576040517f1896f70a000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b0386811660248301527f00000000000000000000000000000000000000000000000000000000000000001690631896f70a90604401600060405180830381600087803b15801561394f57600080fd5b505af1158015613963573d6000803e3d6000fd5b505050505050505050505050565b6000546001600160a01b03163314611a385760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610830565b600080806139d884610875565b919450925090504267ffffffffffffffff821610808015613a9c57506001600160a01b0384161580613a9c57506040516302571be360e01b8152600481018690526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906302571be390602401602060405180830381865afa158015613a6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a919190615930565b6001600160a01b0316145b15613adb576000613aac87610875565b509150506020811615613ad55760405163a2a7201360e01b815260048101879052602401610830565b50613b02565b62010000831615613b025760405163a2a7201360e01b815260048101869052602401610830565b505050505050565b63fffdffff81811763ffffffff1614613b395760405163a2a7201360e01b815260048101839052602401610830565b5050565b60606000613be683600560008881526020019081526020016000208054613b6390615882565b80601f0160208091040260200160405190810160405280929190818152602001828054613b8f90615882565b8015613bdc5780601f10613bb157610100808354040283529160200191613bdc565b820191906000526020600020905b815481529060010190602001808311613bbf57829003601f168201915b50505050506146ec565b6000858152600560205260409020909150613c018282615bcb565b50949350505050565b600080613c1685610875565b92505050600080613c298860001c610875565b9250925050613c39878784614005565b613c44858483614040565b98975050505050505050565b60008681526005602052604081208054613c6f918791613b6390615882565b9050611f6b868286868661431d565b60008080613c8b88610875565b9250925092506000613cb588600560008d81526020019081526020016000208054613b6390615882565b60008a8152600560205260409020805491925090613cd290615882565b9050600003613cf5576000898152600560205260409020613cf38282615bcb565b505b613d048985888617858961408a565b6001600160a01b038716613d2257613d1d896000614212565b610ab1565b610ab184888b60001c60016040518060200160405280600081525061435f565b60006201ffff1962020000841601613d6457613d616276a7008361594d565b91505b428267ffffffffffffffff161015613df45762010000831615613def5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152608401610830565b611a1f565b6004831615611a1f5760405163a2a7201360e01b815260048101859052602401610830565b6001600160a01b0384163b15613b02576040517fbc197c810000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063bc197c8190613e769089908990889088908890600401615c8b565b6020604051808303816000875af1925050508015613eb1575060408051601f3d908101601f19168201909252613eae91810190615cdd565b60015b613f6657613ebd615cfa565b806308c379a003613ef65750613ed1615d16565b80613edc5750613ef8565b8060405162461bcd60e51b81526004016108309190614d9d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610830565b6001600160e01b031981167fbc197c810000000000000000000000000000000000000000000000000000000014611f6b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e730000000000000000000000000000000000000000000000006064820152608401610830565b63ffff0000821615801590600183161590829061401f5750805b156113c25760405163a2a7201360e01b815260048101869052602401610830565b60008167ffffffffffffffff168467ffffffffffffffff161115614062578193505b8267ffffffffffffffff168467ffffffffffffffff161015614082578293505b509192915050565b6140968585858461414a565b60405163ffffffff8416815285907f39873f00c80f4f94b7bd1594aebcf650f003545b74824d57ddf4939e3ff3a34b9060200160405180910390a28167ffffffffffffffff168167ffffffffffffffff1611156113c25760405167ffffffffffffffff8216815285907ff675815a0817338f93a7da433f6bd5f5542f1029b11b455191ac96c7f6a9b132906020015b60405180910390a25050505050565b60008061414083610875565b5090949350505050565b6141548483614795565b60008481526001602052604090206001600160a01b03841663ffffffff60a01b60a085901b16177fffffffffffffffff00000000000000000000000000000000000000000000000060c084901b161790556118e3565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61421d8260016121ff565b1561423e5760405163a2a7201360e01b815260048101839052602401610830565b614247826147ce565b6040517f5b0fc9c3000000000000000000000000000000000000000000000000000000008152600481018390526001600160a01b0382811660248301527f00000000000000000000000000000000000000000000000000000000000000001690635b0fc9c390604401600060405180830381600087803b1580156142ca57600080fd5b505af11580156142de573d6000803e3d6000fd5b50506040516001600160a01b03841681528492507fee2ba1195c65bcf218a83d874335c6bf9d9067b4c672f3c3bf16cf40de7586c49150602001612d36565b61432985848484614890565b847f8ce7013e8abebc55c3890a68f5a27c67c3f7efa64e584de5fb22363c606fd340858585856040516141259493929190615dbe565b600080600061436d86610875565b92509250925061437e868383613d42565b508460011480156143a05750876001600160a01b0316836001600160a01b0316145b6144125760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152608401610830565b866001600160a01b0316836001600160a01b031603614433575050506113c2565b60008681526001602052604090206001600160a01b03881663ffffffff60a01b60a085901b16177fffffffffffffffff00000000000000000000000000000000000000000000000060c084901b1617905560408051878152602081018790526001600160a01b03808a1692908b169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611bf3338989898989614904565b600654600090819081906001600160a01b0316614526576040517f24c1d6d400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b614530843361167f565b6145565760405163168ab55d60e31b815260048101859052336024820152604401610830565b61455f84610875565b9194509250905061456f846147ce565b9193909250565b600080835183106145c95760405162461bcd60e51b815260206004820152601e60248201527f726561644c6162656c3a20496e646578206f7574206f6620626f756e647300006044820152606401610830565b60008484815181106145dd576145dd6158bc565b016020015160f81c9050801561460957614602856145fc866001615e06565b83614a47565b925061460e565b600092505b6146188185615e06565b614623906001615e06565b9150509250929050565b600080600061463c8585614576565b9092509050816146ae57600185516146549190615e19565b84146146a25760405162461bcd60e51b815260206004820152601d60248201527f6e616d65686173683a204a756e6b20617420656e64206f66206e616d650000006044820152606401610830565b506000915061086f9050565b6146b8858261462d565b6040805160208101929092528101839052606001604051602081830303815290604052805190602001209250505092915050565b606060018351101561472a576040517f280dacb600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60ff8351111561476857826040517fe3ba295f0000000000000000000000000000000000000000000000000000000081526004016108309190614d9d565b8251838360405160200161477e93929190615e2c565b604051602081830303815290604052905092915050565b61ffff8116158015906147ad57506201000181811614155b15613b395760405163a2a7201360e01b815260048101839052602401610830565b60008181526001602052604090205460a081901c60c082901c6147f2838383613649565b600086815260016020526040902063ffffffff60a01b60a083901b167fffffffffffffffff00000000000000000000000000000000000000000000000060c086901b1617905592506148419050565b60408051858152600160208201526000916001600160a01b0386169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a450505050565b61489a8483614795565b6000848152600160205260409020546001600160a01b038116156148f8576148c1856147ce565b6040516000815285907fee2ba1195c65bcf218a83d874335c6bf9d9067b4c672f3c3bf16cf40de7586c49060200160405180910390a25b6113c285858585614a6b565b6001600160a01b0384163b15613b02576040517ff23a6e610000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063f23a6e61906149619089908990889088908890600401615e8d565b6020604051808303816000875af192505050801561499c575060408051601f3d908101601f1916820190925261499991810190615cdd565b60015b6149a857613ebd615cfa565b6001600160e01b031981167ff23a6e610000000000000000000000000000000000000000000000000000000014611f6b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e730000000000000000000000000000000000000000000000006064820152608401610830565b8251600090614a568385615e06565b1115614a6157600080fd5b5091016020012090565b8360008080614a7984610875565b9194509250905063ffff0000821667ffffffffffffffff8087169083161115614aa0578195505b428267ffffffffffffffff1610614ab657958617955b6001600160a01b03841615614b0d5760405162461bcd60e51b815260206004820152601f60248201527f455243313135353a206d696e74206f66206578697374696e6720746f6b656e006044820152606401610830565b6001600160a01b038816614b895760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610830565b306001600160a01b03891603614c075760405162461bcd60e51b815260206004820152603460248201527f455243313135353a206e65774f776e65722063616e6e6f74206265207468652060448201527f4e616d655772617070657220636f6e74726163740000000000000000000000006064820152608401610830565b60008581526001602052604090206001600160a01b03891663ffffffff60a01b60a08a901b16177fffffffffffffffff00000000000000000000000000000000000000000000000060c089901b1617905560408051868152600160208201526001600160a01b038a169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4612b8d3360008a88600160405180602001604052806000815250614904565b6001600160a01b038116811461249157600080fd5b60008060408385031215614ce857600080fd5b8235614cf381614cc0565b946020939093013593505050565b600060208284031215614d1357600080fd5b5035919050565b6001600160e01b03198116811461249157600080fd5b600060208284031215614d4257600080fd5b8135611a1f81614d1a565b60005b83811015614d68578181015183820152602001614d50565b50506000910152565b60008151808452614d89816020860160208601614d4d565b601f01601f19169290920160200192915050565b602081526000611a1f6020830184614d71565b803567ffffffffffffffff81168114614dc857600080fd5b919050565b60008060408385031215614de057600080fd5b82359150614df060208401614db0565b90509250929050565b60008083601f840112614e0b57600080fd5b50813567ffffffffffffffff811115614e2357600080fd5b602083019150836020828501011115614e3b57600080fd5b9250929050565b600080600080600060808688031215614e5a57600080fd5b8535614e6581614cc0565b94506020860135614e7581614cc0565b935060408601359250606086013567ffffffffffffffff811115614e9857600080fd5b614ea488828901614df9565b969995985093965092949392505050565b600060208284031215614ec757600080fd5b8135611a1f81614cc0565b60008060408385031215614ee557600080fd5b823591506020830135614ef781614cc0565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715614f3e57614f3e614f02565b6040525050565b600067ffffffffffffffff821115614f5f57614f5f614f02565b50601f01601f191660200190565b600082601f830112614f7e57600080fd5b8135614f8981614f45565b604051614f968282614f18565b828152856020848701011115614fab57600080fd5b82602086016020830137600092810160200192909252509392505050565b803563ffffffff81168114614dc857600080fd5b600080600080600080600060e0888a031215614ff857600080fd5b87359650602088013567ffffffffffffffff81111561501657600080fd5b6150228a828b01614f6d565b965050604088013561503381614cc0565b9450606088013561504381614cc0565b935061505160808901614db0565b925061505f60a08901614fc9565b915061506d60c08901614db0565b905092959891949750929550565b600067ffffffffffffffff82111561509557615095614f02565b5060051b60200190565b600082601f8301126150b057600080fd5b813560206150bd8261507b565b6040516150ca8282614f18565b83815260059390931b85018201928281019150868411156150ea57600080fd5b8286015b848110156121f457803583529183019183016150ee565b600080600080600060a0868803121561511d57600080fd5b853561512881614cc0565b9450602086013561513881614cc0565b9350604086013567ffffffffffffffff8082111561515557600080fd5b61516189838a0161509f565b9450606088013591508082111561517757600080fd5b61518389838a0161509f565b9350608088013591508082111561519957600080fd5b506151a688828901614f6d565b9150509295509295909350565b600080600080608085870312156151c957600080fd5b84359350602085013592506151e060408601614fc9565b91506151ee60608601614db0565b905092959194509250565b803561ffff81168114614dc857600080fd5b6000806040838503121561521e57600080fd5b82359150614df0602084016151f9565b6000806040838503121561524157600080fd5b823567ffffffffffffffff8082111561525957600080fd5b818501915085601f83011261526d57600080fd5b8135602061527a8261507b565b6040516152878282614f18565b83815260059390931b85018201928281019150898411156152a757600080fd5b948201945b838610156152ce5785356152bf81614cc0565b825294820194908201906152ac565b965050860135925050808211156152e457600080fd5b506146238582860161509f565b600081518084526020808501945080840160005b8381101561532157815187529582019590820190600101615305565b509495945050505050565b602081526000611a1f60208301846152f1565b60008060006060848603121561535457600080fd5b833561535f81614cc0565b9250602084013561536f81614cc0565b929592945050506040919091013590565b60008060006060848603121561539557600080fd5b83359250602084013591506153ac60408501614db0565b90509250925092565b6000806000606084860312156153ca57600080fd5b8335925060208401356153dc81614cc0565b915060408401356153ec81614cc0565b809150509250925092565b60008060008060006080868803121561540f57600080fd5b853567ffffffffffffffff81111561542657600080fd5b61543288828901614df9565b909650945050602086013561544681614cc0565b9250615454604087016151f9565b9150606086013561546481614cc0565b809150509295509295909350565b801515811461249157600080fd5b6000806040838503121561549357600080fd5b823561549e81614cc0565b91506020830135614ef781615472565b60008060008060008060a087890312156154c757600080fd5b863567ffffffffffffffff8111156154de57600080fd5b6154ea89828a01614df9565b90975095505060208701356154fe81614cc0565b935060408701359250606087013561551581614cc0565b9150615523608088016151f9565b90509295509295509295565b6000806040838503121561554257600080fd5b82359150614df060208401614fc9565b6000806040838503121561556557600080fd5b50508035926020909101359150565b60008060008060008060a0878903121561558d57600080fd5b86359550602087013567ffffffffffffffff8111156155ab57600080fd5b6155b789828a01614df9565b90965094505060408701356155cb81614cc0565b92506155d960608801614fc9565b915061552360808801614db0565b600080600080608085870312156155fd57600080fd5b84359350602085013561560f81614cc0565b925060408501356151e081614cc0565b60008060006060848603121561563457600080fd5b833592506020840135915060408401356153ec81614cc0565b6000806000806060858703121561566357600080fd5b843567ffffffffffffffff81111561567a57600080fd5b61568687828801614df9565b909550935050602085013561569a81614cc0565b915060408501356156aa81614cc0565b939692955090935050565b600080604083850312156156c857600080fd5b82356156d381614cc0565b91506020830135614ef781614cc0565b6000806000806000608086880312156156fb57600080fd5b85359450602086013567ffffffffffffffff81111561571957600080fd5b61572588828901614df9565b909550935050604086013561545481614cc0565b600080600080600060a0868803121561575157600080fd5b853561575c81614cc0565b9450602086013561576c81614cc0565b93506040860135925060608601359150608086013567ffffffffffffffff81111561579657600080fd5b6151a688828901614f6d565b6000602082840312156157b457600080fd5b815167ffffffffffffffff8111156157cb57600080fd5b8201601f810184136157dc57600080fd5b80516157e781614f45565b6040516157f48282614f18565b82815286602084860101111561580957600080fd5b611707836020830160208701614d4d565b6000806000806080858703121561583057600080fd5b843567ffffffffffffffff81111561584757600080fd5b61585387828801614f6d565b945050602085013561586481614cc0565b9250615872604086016151f9565b915060608501356156aa81614cc0565b600181811c9082168061589657607f821691505b6020821081036158b657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982036158fb576158fb6158d2565b5060010190565b60408152600061591560408301856152f1565b828103602084015261592781856152f1565b95945050505050565b60006020828403121561594257600080fd5b8151611a1f81614cc0565b67ffffffffffffffff82811682821603908082111561596e5761596e6158d2565b5092915050565b60006020828403121561598757600080fd5b8151611a1f81615472565b8183823760009101908152919050565b6000602082840312156159b457600080fd5b5051919050565b67ffffffffffffffff81811683821601908082111561596e5761596e6158d2565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b60a081526000615a1b60a08301888a6159dc565b90506001600160a01b03808716602084015263ffffffff8616604084015267ffffffffffffffff85166060840152808416608084015250979650505050505050565b601f821115615aa357600081815260208120601f850160051c81016020861015615a845750805b601f850160051c820191505b81811015613b0257828155600101615a90565b505050565b67ffffffffffffffff831115615ac057615ac0614f02565b615ad483615ace8354615882565b83615a5d565b6000601f841160018114615b085760008515615af05750838201355b600019600387901b1c1916600186901b1783556113c2565b600083815260209020601f19861690835b82811015615b395786850135825560209485019460019092019101615b19565b5086821015615b565760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b88815260e060208201526000615b8260e08301898b6159dc565b6001600160a01b03978816604084015295909616606082015267ffffffffffffffff938416608082015263ffffffff9290921660a083015290911660c090910152949350505050565b815167ffffffffffffffff811115615be557615be5614f02565b615bf981615bf38454615882565b84615a5d565b602080601f831160018114615c2e5760008415615c165750858301515b600019600386901b1c1916600185901b178555613b02565b600085815260208120601f198616915b82811015615c5d57888601518255948401946001909101908401615c3e565b5085821015615c7b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006001600160a01b03808816835280871660208401525060a06040830152615cb760a08301866152f1565b8281036060840152615cc981866152f1565b90508281036080840152613c448185614d71565b600060208284031215615cef57600080fd5b8151611a1f81614d1a565b600060033d1115615d135760046000803e5060005160e01c5b90565b600060443d1015615d245790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff8160248401118184111715615d7257505050505090565b8285019150815181811115615d8a5750505050505090565b843d8701016020828501011115615da45750505050505090565b615db360208286010187614f18565b509095945050505050565b608081526000615dd16080830187614d71565b6001600160a01b039590951660208301525063ffffffff92909216604083015267ffffffffffffffff16606090910152919050565b8082018082111561086f5761086f6158d2565b8181038181111561086f5761086f6158d2565b7fff000000000000000000000000000000000000000000000000000000000000008460f81b16815260008351615e69816001850160208801614d4d565b835190830190615e80816001840160208801614d4d565b0160010195945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152615ec560a0830184614d71565b97965050505050505056fea264697066735822122069ffbfb0723a87fb1a8ea1c99d0a79e9c7883bdcedc5c06b292ae48afee0656764736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2FE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E5D6AD2 GT PUSH2 0x19C JUMPI DUP1 PUSH4 0xCF408823 GT PUSH2 0xEE JUMPI DUP1 PUSH4 0xEB8AE530 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xF242432A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x77D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x790 JUMPI DUP1 PUSH4 0xFD0CD0D9 EQ PUSH2 0x7A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xEB8AE530 EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0xED70554D EQ PUSH2 0x74A JUMPI DUP1 PUSH4 0xEE7EBA78 EQ PUSH2 0x76A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE0DBA60F GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0xE0DBA60F EQ PUSH2 0x6D5 JUMPI DUP1 PUSH4 0xE72BF00F EQ PUSH2 0x6E8 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x6FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCF408823 EQ PUSH2 0x68C JUMPI DUP1 PUSH4 0xD8C9921A EQ PUSH2 0x69F JUMPI DUP1 PUSH4 0xDA8C229E EQ PUSH2 0x6B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 GT PUSH2 0x150 JUMPI DUP1 PUSH4 0xB6BCAD26 GT PUSH2 0x12A JUMPI DUP1 PUSH4 0xB6BCAD26 EQ PUSH2 0x653 JUMPI DUP1 PUSH4 0xC475ABFF EQ PUSH2 0x666 JUMPI DUP1 PUSH4 0xC658E086 EQ PUSH2 0x679 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0xA4014982 EQ PUSH2 0x62D JUMPI DUP1 PUSH4 0xADF4960A EQ PUSH2 0x640 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8B4DFA75 GT PUSH2 0x181 JUMPI DUP1 PUSH4 0x8B4DFA75 EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0x8CF8B41E EQ PUSH2 0x5F6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E5D6AD2 EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x24C1AF44 GT PUSH2 0x255 JUMPI DUP1 PUSH4 0x402906FC GT PUSH2 0x209 JUMPI DUP1 PUSH4 0x53095467 GT PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x53095467 EQ PUSH2 0x576 JUMPI DUP1 PUSH4 0x5D3590D5 EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x59C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x402906FC EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0x41415EAB EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0x23A JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x4CE JUMPI DUP1 PUSH4 0x33C69EA9 EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0x3F15457F EQ PUSH2 0x4F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x24C1AF44 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0x2B20E397 EQ PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x14AB9038 GT PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x1896F70A GT PUSH2 0x291 JUMPI DUP1 PUSH4 0x1896F70A EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x1F4E1504 EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0x20C38E2B EQ PUSH2 0x481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x14AB9038 EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x1534E177 EQ PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 GT PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x178FE3F EQ PUSH2 0x329 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x316 PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x4CD5 JUMP JUMPDEST PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D01 JUMP JUMPDEST PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x320 JUMP JUMPDEST PUSH2 0x383 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x4D30 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x320 JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E616D6557726170706572000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x4D9D JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x3EA CALLDATASIZE PUSH1 0x4 PUSH2 0x4D01 JUMP JUMPDEST PUSH2 0x917 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x4DCD JUMP JUMPDEST PUSH2 0x9A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x417 PUSH2 0x412 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E42 JUMP JUMPDEST PUSH2 0xABD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x320 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x43E CALLDATASIZE PUSH1 0x4 PUSH2 0x4EB5 JUMP JUMPDEST PUSH2 0xC5E JUMP JUMPDEST PUSH2 0x402 PUSH2 0x451 CALLDATASIZE PUSH1 0x4 PUSH2 0x4ED2 JUMP JUMPDEST PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x469 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x320 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x48F CALLDATASIZE PUSH1 0x4 PUSH2 0x4D01 JUMP JUMPDEST PUSH2 0xD7B JUMP JUMPDEST PUSH2 0x316 PUSH2 0x4A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x4FDD JUMP JUMPDEST PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x469 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x4DC CALLDATASIZE PUSH1 0x4 PUSH2 0x5105 JUMP JUMPDEST PUSH2 0x105B JUMP JUMPDEST PUSH2 0x402 PUSH2 0x4EF CALLDATASIZE PUSH1 0x4 PUSH2 0x51B3 JUMP JUMPDEST PUSH2 0x13C9 JUMP JUMPDEST PUSH2 0x469 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x52E PUSH2 0x529 CALLDATASIZE PUSH1 0x4 PUSH2 0x520B JUMP JUMPDEST PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x320 JUMP JUMPDEST PUSH2 0x383 PUSH2 0x551 CALLDATASIZE PUSH1 0x4 PUSH2 0x4ED2 JUMP JUMPDEST PUSH2 0x167F JUMP JUMPDEST PUSH2 0x569 PUSH2 0x564 CALLDATASIZE PUSH1 0x4 PUSH2 0x522E JUMP JUMPDEST PUSH2 0x1711 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x532C JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x469 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x597 CALLDATASIZE PUSH1 0x4 PUSH2 0x533F JUMP JUMPDEST PUSH2 0x184F JUMP JUMPDEST PUSH2 0x469 PUSH2 0x5AA CALLDATASIZE PUSH1 0x4 PUSH2 0x4D01 JUMP JUMPDEST PUSH2 0x18E9 JUMP JUMPDEST PUSH2 0x5C2 PUSH2 0x5BD CALLDATASIZE PUSH1 0x4 PUSH2 0x5380 JUMP JUMPDEST PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x320 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x1A26 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x5F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x53B5 JUMP JUMPDEST PUSH2 0x1A3A JUMP JUMPDEST PUSH2 0x402 PUSH2 0x604 CALLDATASIZE PUSH1 0x4 PUSH2 0x53F7 JUMP JUMPDEST PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x469 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x628 CALLDATASIZE PUSH1 0x4 PUSH2 0x5480 JUMP JUMPDEST PUSH2 0x1F74 JUMP JUMPDEST PUSH2 0x316 PUSH2 0x63B CALLDATASIZE PUSH1 0x4 PUSH2 0x54AE JUMP JUMPDEST PUSH2 0x205E JUMP JUMPDEST PUSH2 0x383 PUSH2 0x64E CALLDATASIZE PUSH1 0x4 PUSH2 0x552F JUMP JUMPDEST PUSH2 0x21FF JUMP JUMPDEST PUSH2 0x402 PUSH2 0x661 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EB5 JUMP JUMPDEST PUSH2 0x2224 JUMP JUMPDEST PUSH2 0x316 PUSH2 0x674 CALLDATASIZE PUSH1 0x4 PUSH2 0x5552 JUMP JUMPDEST PUSH2 0x2494 JUMP JUMPDEST PUSH2 0x316 PUSH2 0x687 CALLDATASIZE PUSH1 0x4 PUSH2 0x5574 JUMP JUMPDEST PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x69A CALLDATASIZE PUSH1 0x4 PUSH2 0x55E7 JUMP JUMPDEST PUSH2 0x29C6 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x6AD CALLDATASIZE PUSH1 0x4 PUSH2 0x561F JUMP JUMPDEST PUSH2 0x2B98 JUMP JUMPDEST PUSH2 0x383 PUSH2 0x6C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EB5 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x6E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x5480 JUMP JUMPDEST PUSH2 0x2CDA JUMP JUMPDEST PUSH2 0x402 PUSH2 0x6F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x564D JUMP JUMPDEST PUSH2 0x2D42 JUMP JUMPDEST PUSH2 0x383 PUSH2 0x709 CALLDATASIZE PUSH1 0x4 PUSH2 0x56B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x745 CALLDATASIZE PUSH1 0x4 PUSH2 0x564D JUMP JUMPDEST PUSH2 0x2E7E JUMP JUMPDEST PUSH2 0x316 PUSH2 0x758 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x778 CALLDATASIZE PUSH1 0x4 PUSH2 0x56E3 JUMP JUMPDEST PUSH2 0x32AD JUMP JUMPDEST PUSH2 0x402 PUSH2 0x78B CALLDATASIZE PUSH1 0x4 PUSH2 0x5739 JUMP JUMPDEST PUSH2 0x33CE JUMP JUMPDEST PUSH2 0x402 PUSH2 0x79E CALLDATASIZE PUSH1 0x4 PUSH2 0x4EB5 JUMP JUMPDEST PUSH2 0x3503 JUMP JUMPDEST PUSH2 0x383 PUSH2 0x7B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D01 JUMP JUMPDEST PUSH2 0x3590 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x844 DUP4 PUSH2 0x18E9 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x869 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x86F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xA0 DUP2 SWAP1 SHR PUSH1 0xC0 DUP3 SWAP1 SHR PUSH2 0x899 DUP4 DUP4 DUP4 PUSH2 0x3649 JUMP JUMPDEST SWAP1 SWAP6 SWAP1 SWAP5 POP SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x81B4E24C00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x908 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x86F JUMPI POP PUSH2 0x86F DUP3 PUSH2 0x369D JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xE89341C SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x97C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x86F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x57A2 JUMP JUMPDEST DUP2 PUSH2 0x9AF DUP2 CALLER PUSH2 0x167F JUMP JUMPDEST PUSH2 0x9D5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST DUP3 PUSH1 0x10 PUSH1 0x0 PUSH2 0x9E3 DUP4 PUSH2 0x875 JUMP JUMPDEST POP SWAP2 POP POP PUSH4 0xFFFFFFFF DUP3 DUP3 AND AND ISZERO PUSH2 0xA11 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x14AB903800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x14AB9038 SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xB21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1931A53800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0xB32 DUP7 DUP9 ADD DUP9 PUSH2 0x581A JUMP JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP6 ADD KECCAK256 SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP DUP9 SWAP1 DUP1 DUP3 EQ PUSH2 0xB88 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC65C3CCC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x28ED4F6C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x28ED4F6C SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xC2D DUP7 DUP7 DUP7 DUP7 PUSH2 0x3738 JUMP JUMPDEST POP PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC66 PUSH2 0x3971 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP2 PUSH2 0xCAB DUP2 CALLER PUSH2 0x167F JUMP JUMPDEST PUSH2 0xCD1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST DUP3 PUSH1 0x8 PUSH1 0x0 PUSH2 0xCDF DUP4 PUSH2 0x875 JUMP JUMPDEST POP SWAP2 POP POP PUSH4 0xFFFFFFFF DUP3 DUP3 AND AND ISZERO PUSH2 0xD0D JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1896F70A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x1896F70A SWAP1 PUSH1 0x44 ADD PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xD94 SWAP1 PUSH2 0x5882 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDC0 SWAP1 PUSH2 0x5882 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE0D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDE2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE0D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDF0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP8 PUSH2 0xE22 DUP2 CALLER PUSH2 0x167F JUMP JUMPDEST PUSH2 0xE48 JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST DUP8 MLOAD PUSH1 0x20 DUP10 ADD KECCAK256 PUSH2 0xE80 DUP11 DUP3 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 POP PUSH2 0xE8C DUP11 DUP5 PUSH2 0x39CB JUMP JUMPDEST PUSH2 0xE96 DUP4 DUP7 PUSH2 0x3B0A JUMP JUMPDEST PUSH2 0xEA1 DUP11 DUP5 DUP12 PUSH2 0x3B3D JUMP JUMPDEST POP PUSH2 0xEAE DUP11 DUP5 DUP8 DUP8 PUSH2 0x3C0A JUMP JUMPDEST SWAP4 POP PUSH2 0xEB9 DUP4 PUSH2 0x3590 JUMP JUMPDEST PUSH2 0xF88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5EF2C7F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x64 DUP4 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP9 AND PUSH1 0x84 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x5EF2C7F0 SWAP1 PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF71 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xF83 DUP11 DUP5 DUP12 DUP12 DUP10 DUP10 PUSH2 0x3C50 JUMP JUMPDEST PUSH2 0x104E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x5EF2C7F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x64 DUP4 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP9 AND PUSH1 0x84 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x5EF2C7F0 SWAP1 PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1028 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x103C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x104E DUP11 DUP5 DUP12 DUP12 DUP10 DUP10 PUSH2 0x3C7E JUMP JUMPDEST POP POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x10D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x114E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x1188 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x11FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x135C JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x121A JUMPI PUSH2 0x121A PUSH2 0x58BC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1238 JUMPI PUSH2 0x1238 PUSH2 0x58BC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1250 DUP6 PUSH2 0x875 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1261 DUP6 DUP4 DUP4 PUSH2 0x3D42 JUMP JUMPDEST POP DUP4 PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x1283 JUMPI POP DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x12F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL PUSH1 0xA0 DUP6 SWAP1 SHL AND OR PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 PUSH1 0xC0 DUP5 SWAP1 SHL AND OR SWAP1 SSTORE POP POP POP POP POP DUP1 PUSH2 0x1355 SWAP1 PUSH2 0x58E8 JUMP JUMPDEST SWAP1 POP PUSH2 0x11FD JUMP JUMPDEST POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x13AC SWAP3 SWAP2 SWAP1 PUSH2 0x5902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x13C2 CALLER DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x3E19 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP8 SWAP1 MSTORE DUP2 DUP4 ADD DUP7 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x13FB DUP2 DUP5 PUSH2 0x3B0A JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x1408 DUP5 PUSH2 0x875 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 PUSH2 0x14B7 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x2571BE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x2571BE3 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1487 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14AB SWAP2 SWAP1 PUSH2 0x5930 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x14EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x5374B59900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x14FA DUP11 PUSH2 0x875 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP11 SWAP1 POP PUSH2 0x153B JUMPI PUSH2 0x1510 DUP7 CALLER PUSH2 0x167F JUMP JUMPDEST PUSH2 0x1536 JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST PUSH2 0x156B JUMP JUMPDEST PUSH2 0x1545 DUP11 CALLER PUSH2 0x167F JUMP JUMPDEST PUSH2 0x156B JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST PUSH2 0x1576 DUP7 DUP10 DUP5 PUSH2 0x4005 JUMP JUMPDEST PUSH2 0x1581 DUP8 DUP5 DUP4 PUSH2 0x4040 JUMP JUMPDEST SWAP7 POP PUSH3 0x10000 DUP5 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x15A5 JUMPI POP DUP4 PUSH4 0xFFFFFFFF AND DUP9 DUP6 OR PUSH4 0xFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x15C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST SWAP7 DUP4 OR SWAP7 PUSH2 0xAB1 DUP7 DUP7 DUP11 DUP7 DUP12 PUSH2 0x408A JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x15E4 DUP2 CALLER PUSH2 0x167F JUMP JUMPDEST PUSH2 0x160A JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST DUP4 PUSH1 0x2 PUSH1 0x0 PUSH2 0x1618 DUP4 PUSH2 0x875 JUMP JUMPDEST POP SWAP2 POP POP PUSH4 0xFFFFFFFF DUP3 DUP3 AND AND ISZERO PUSH2 0x1646 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x1653 DUP11 PUSH2 0x875 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x166C DUP11 DUP5 DUP5 DUP13 PUSH2 0xFFFF AND OR DUP5 DUP6 PUSH2 0x408A JUMP JUMPDEST POP POP PUSH2 0xFFFF SWAP1 SWAP7 AND SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x168D DUP7 PUSH2 0x875 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x16D8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x1707 JUMPI POP PUSH3 0x20000 DUP3 AND ISZERO DUP1 PUSH2 0x1707 JUMPI POP TIMESTAMP PUSH2 0x16FA PUSH3 0x76A700 DUP4 PUSH2 0x594D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x178A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17A6 JUMPI PUSH2 0x17A6 PUSH2 0x4F02 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17CF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1847 JUMPI PUSH2 0x181A DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x17F3 JUMPI PUSH2 0x17F3 PUSH2 0x58BC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x180D JUMPI PUSH2 0x180D PUSH2 0x58BC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x7B6 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x182C JUMPI PUSH2 0x182C PUSH2 0x58BC JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x1840 DUP2 PUSH2 0x58E8 JUMP JUMPDEST SWAP1 POP PUSH2 0x17D5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1857 PUSH2 0x3971 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18E3 SWAP2 SWAP1 PUSH2 0x5975 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86F DUP3 PUSH2 0x4134 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD DUP6 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 SWAP1 PUSH1 0x0 PUSH2 0x192B DUP7 CALLER PUSH2 0x167F JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x1942 JUMPI POP PUSH2 0x1940 DUP3 CALLER PUSH2 0x167F JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1969 JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x1976 DUP6 PUSH2 0x875 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP4 ISZERO DUP1 ISZERO PUSH2 0x198D JUMPI POP PUSH3 0x40000 DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0x19AE JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B9 DUP11 PUSH2 0x875 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x19C8 DUP9 DUP4 DUP4 PUSH2 0x4040 JUMP JUMPDEST SWAP8 POP PUSH2 0x19D6 DUP7 DUP6 DUP6 DUP12 PUSH2 0x414A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP10 AND DUP2 MSTORE DUP7 SWAP1 PUSH32 0xF675815A0817338F93A7DA433F6BD5F5542F1029B11B455191AC96C7F6A9B132 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP8 SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A2E PUSH2 0x3971 JUMP JUMPDEST PUSH2 0x1A38 PUSH1 0x0 PUSH2 0x41AA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x93CDEB708B7545DC668EB9280176169D1C33CFD8ED6F04690A0BCC88A93FC4AE PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD DUP7 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x1A8E DUP2 CALLER PUSH2 0x167F JUMP JUMPDEST PUSH2 0x1AB4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SUB PUSH2 0x1B01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5949361A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x93CDEB708B7545DC668EB9280176169D1C33CFD8ED6F04690A0BCC88A93FC4AE PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x1B56 SWAP1 JUMPDEST DUP4 PUSH2 0x4212 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x42842E0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP7 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BF3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1C0F SWAP3 SWAP2 SWAP1 PUSH2 0x5992 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH32 0x6352211E00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 POP PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CBC SWAP2 SWAP1 PUSH2 0x5930 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1D7D JUMPI POP PUSH1 0x40 MLOAD PUSH32 0xE985E9C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xE985E9C5 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D7B SWAP2 SWAP1 PUSH2 0x5975 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1DED JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x93CDEB708B7545DC668EB9280176169D1C33CFD8ED6F04690A0BCC88A93FC4AE PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD DUP6 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP4 DUP5 SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH4 0x168AB55D PUSH1 0xE3 SHL SWAP1 SWAP3 MSTORE PUSH1 0x64 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0x28ED4F6C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP PUSH4 0x28ED4F6C SWAP2 POP PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1F6B DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP10 SWAP3 POP DUP9 SWAP2 POP DUP8 SWAP1 POP PUSH2 0x3738 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER SUB PUSH2 0x1FF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x20E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74726F6C6C61626C653A2043616C6C6572206973206E6F74206120636F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E74726F6C6C6572000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x20F5 SWAP3 SWAP2 SWAP1 PUSH2 0x5992 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH32 0xFCA247AC00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xFCA247AC SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x218A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21AE SWAP2 SWAP1 PUSH2 0x59A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x21F4 DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP11 SWAP3 POP DUP8 SWAP2 POP DUP9 SWAP1 POP PUSH2 0x3738 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x220B DUP5 PUSH2 0x875 JUMP JUMPDEST POP DUP5 AND PUSH4 0xFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP6 AND EQ SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x222C PUSH2 0x3971 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x234C JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA22CB465 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA22CB465 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA22CB465 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP3 POP PUSH4 0xA22CB465 SWAP2 POP PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2347 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE ISZERO PUSH2 0x2491 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA22CB465 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA22CB465 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x240A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA22CB465 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP3 POP PUSH4 0xA22CB465 SWAP2 POP PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x247D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2519 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74726F6C6C61626C653A2043616C6C6572206973206E6F74206120636F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E74726F6C6C6572000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x93CDEB708B7545DC668EB9280176169D1C33CFD8ED6F04690A0BCC88A93FC4AE PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD DUP7 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 SWAP1 PUSH1 0x40 MLOAD PUSH32 0xC475ABFF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xC475ABFF SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x25F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2617 SWAP2 SWAP1 PUSH2 0x59A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6352211E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x26B4 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x26B1 SWAP2 DUP2 ADD SWAP1 PUSH2 0x5930 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x26C1 JUMPI SWAP2 POP PUSH2 0x86F SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ADDRESS EQ ISZERO DUP1 PUSH2 0x276B JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x2571BE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x2571BE3 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x273B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x275F SWAP2 SWAP1 PUSH2 0x5930 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x277A JUMPI POP SWAP2 POP PUSH2 0x86F SWAP1 POP JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x278A PUSH3 0x76A700 DUP4 PUSH2 0x59BB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xA0 DUP2 SWAP1 SHR PUSH2 0x27AD DUP6 DUP4 DUP4 DUP7 PUSH2 0x414A JUMP JUMPDEST POP SWAP2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP7 PUSH2 0x27C6 DUP2 CALLER PUSH2 0x167F JUMP JUMPDEST PUSH2 0x27EC JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x27FE SWAP3 SWAP2 SWAP1 PUSH2 0x5992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH2 0x2839 DUP10 DUP3 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 POP PUSH2 0x2845 DUP10 DUP5 PUSH2 0x39CB JUMP JUMPDEST PUSH2 0x284F DUP4 DUP7 PUSH2 0x3B0A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2892 DUP11 DUP6 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x3B3D SWAP3 POP POP POP JUMP JUMPDEST SWAP1 POP PUSH2 0x28A0 DUP11 DUP6 DUP9 DUP9 PUSH2 0x3C0A JUMP JUMPDEST SWAP5 POP PUSH2 0x28AB DUP5 PUSH2 0x3590 JUMP JUMPDEST PUSH2 0x2973 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6AB592300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6AB5923 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x293C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2960 SWAP2 SWAP1 PUSH2 0x59A2 JUMP JUMPDEST POP PUSH2 0x296E DUP5 DUP3 DUP10 DUP10 DUP10 PUSH2 0x431D JUMP JUMPDEST PUSH2 0x29B9 JUMP JUMPDEST PUSH2 0x29B9 DUP11 DUP6 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP14 SWAP3 POP DUP13 SWAP2 POP DUP12 SWAP1 POP PUSH2 0x3C7E JUMP JUMPDEST POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP4 PUSH2 0x29D1 DUP2 CALLER PUSH2 0x167F JUMP JUMPDEST PUSH2 0x29F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST DUP5 PUSH1 0x1C PUSH1 0x0 PUSH2 0x2A05 DUP4 PUSH2 0x875 JUMP JUMPDEST POP SWAP2 POP POP PUSH4 0xFFFFFFFF DUP3 DUP3 AND AND ISZERO PUSH2 0x2A33 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xCF40882300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x64 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xCF408823 SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2ACC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2AE0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 POP PUSH2 0x2B60 JUMPI PUSH1 0x0 PUSH2 0x2AFE DUP10 PUSH2 0x875 JUMP JUMPDEST POP SWAP2 POP POP PUSH3 0x1FFFF NOT PUSH3 0x20000 DUP3 AND ADD PUSH2 0x2B4F JUMPI PUSH1 0x40 MLOAD PUSH32 0x5949361A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST PUSH2 0x2B5A DUP10 PUSH1 0x0 PUSH2 0x4212 JUMP JUMPDEST POP PUSH2 0x1BF3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B6B DUP10 PUSH2 0x18E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x2B8D DUP2 DUP10 DUP12 PUSH1 0x0 SHR PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x435F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD DUP6 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x2BCA DUP2 CALLER PUSH2 0x167F JUMP JUMPDEST PUSH2 0x2BF0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST PUSH32 0x6C32148F748ABA23997146D7FE89E962E3CC30271290FB96F5F4337756C03B52 DUP5 ADD PUSH2 0x2C49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x615A470300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 PUSH2 0x2C67 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ JUMPDEST ISZERO PUSH2 0x2CA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5949361A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP8 SWAP1 MSTORE DUP2 DUP4 ADD DUP7 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x18E3 SWAP1 PUSH2 0x1B50 JUMP JUMPDEST PUSH2 0x2CE2 PUSH2 0x3971 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x4C97694570A07277810AF7E5669FFD5F6A2D6B74B6E9A274B8B870FD5114CF87 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2D54 SWAP3 SWAP2 SWAP1 PUSH2 0x5992 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB SWAP1 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x2DB2 PUSH32 0x93CDEB708B7545DC668EB9280176169D1C33CFD8ED6F04690A0BCC88A93FC4AE DUP4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2DC2 DUP5 PUSH2 0x44DD JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2DEE JUMPI PUSH2 0x2DEC DUP5 DUP4 DUP4 PUSH2 0x3D42 JUMP JUMPDEST POP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0xF9547A9E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF9547A9E SWAP1 PUSH2 0x2E41 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP15 SWAP1 PUSH1 0x4 ADD PUSH2 0x5A07 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E6F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EC5 PUSH1 0x0 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 SWAP3 POP POP PUSH2 0x4576 SWAP1 POP JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x2F0E DUP3 DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 SWAP3 POP POP PUSH2 0x462D SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x2F58 DUP9 DUP11 DUP4 PUSH2 0x5AA8 JUMP JUMPDEST POP PUSH32 0x6C32148F748ABA23997146D7FE89E962E3CC30271290FB96F5F4337756C03B52 DUP3 ADD PUSH2 0x2FB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x615A470300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2571BE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2571BE3 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x301A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x303E SWAP2 SWAP1 PUSH2 0x5930 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x30FF JUMPI POP PUSH1 0x40 MLOAD PUSH32 0xE985E9C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xE985E9C5 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30FD SWAP2 SWAP1 PUSH2 0x5975 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x3126 JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO PUSH2 0x31D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1896F70A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x1896F70A SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x31CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x5B0FC9C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x5B0FC9C3 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3266 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2B8D DUP3 DUP11 DUP11 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP DUP14 SWAP4 POP SWAP2 POP DUP2 SWAP1 POP PUSH2 0x431D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x32BF SWAP3 SWAP2 SWAP1 PUSH2 0x5992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x32FC DUP8 DUP4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x330C DUP5 PUSH2 0x44DD JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3338 JUMPI PUSH2 0x3336 DUP5 DUP4 DUP4 PUSH2 0x3D42 JUMP JUMPDEST POP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0x24C1AF4400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x24C1AF44 SWAP1 PUSH2 0x3390 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 PUSH1 0x0 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x5B68 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x33AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x33BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x344A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x3484 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x34F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH2 0x13C2 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x435F JUMP JUMPDEST PUSH2 0x350B PUSH2 0x3971 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3587 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH2 0x2491 DUP2 PUSH2 0x41AA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x359C DUP4 PUSH2 0x18E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x86F JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x2571BE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x2571BE3 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3615 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3639 SWAP2 SWAP1 PUSH2 0x5930 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x3694 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 PUSH3 0x10000 DUP6 AND ADD PUSH2 0x368F JUMPI PUSH1 0x0 SWAP5 POP JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST POP SWAP3 SWAP4 SWAP2 SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x3700 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x86F JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x86F JUMP JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP6 ADD KECCAK256 PUSH1 0x0 PUSH2 0x3792 PUSH32 0x93CDEB708B7545DC668EB9280176169D1C33CFD8ED6F04690A0BCC88A93FC4AE DUP4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x37D5 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x365746800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x46EC JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x37F0 DUP3 DUP3 PUSH2 0x5BCB JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0xD6E4FA8600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH3 0x76A700 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xD6E4FA86 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3877 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x389B SWAP2 SWAP1 PUSH2 0x59A2 JUMP JUMPDEST PUSH2 0x38A5 SWAP2 SWAP1 PUSH2 0x59BB JUMP JUMPDEST SWAP1 POP PUSH2 0x38BD DUP4 DUP4 DUP10 PUSH3 0x30000 PUSH2 0xFFFF DUP12 AND OR DUP6 PUSH2 0x431D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x1BF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1896F70A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x1896F70A SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x394F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3963 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x39D8 DUP5 PUSH2 0x875 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND LT DUP1 DUP1 ISZERO PUSH2 0x3A9C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 PUSH2 0x3A9C JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x2571BE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x2571BE3 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A91 SWAP2 SWAP1 PUSH2 0x5930 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0x3ADB JUMPI PUSH1 0x0 PUSH2 0x3AAC DUP8 PUSH2 0x875 JUMP JUMPDEST POP SWAP2 POP POP PUSH1 0x20 DUP2 AND ISZERO PUSH2 0x3AD5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST POP PUSH2 0x3B02 JUMP JUMPDEST PUSH3 0x10000 DUP4 AND ISZERO PUSH2 0x3B02 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0xFFFDFFFF DUP2 DUP2 OR PUSH4 0xFFFFFFFF AND EQ PUSH2 0x3B39 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3BE6 DUP4 PUSH1 0x5 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x3B63 SWAP1 PUSH2 0x5882 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B8F SWAP1 PUSH2 0x5882 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3BDC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BB1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3BDC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3BBF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x46EC JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x3C01 DUP3 DUP3 PUSH2 0x5BCB JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3C16 DUP6 PUSH2 0x875 JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x0 DUP1 PUSH2 0x3C29 DUP9 PUSH1 0x0 SHR PUSH2 0x875 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP PUSH2 0x3C39 DUP8 DUP8 DUP5 PUSH2 0x4005 JUMP JUMPDEST PUSH2 0x3C44 DUP6 DUP5 DUP4 PUSH2 0x4040 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x3C6F SWAP2 DUP8 SWAP2 PUSH2 0x3B63 SWAP1 PUSH2 0x5882 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F6B DUP7 DUP3 DUP7 DUP7 DUP7 PUSH2 0x431D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x3C8B DUP9 PUSH2 0x875 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH2 0x3CB5 DUP9 PUSH1 0x5 PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x3B63 SWAP1 PUSH2 0x5882 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x3CD2 SWAP1 PUSH2 0x5882 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SUB PUSH2 0x3CF5 JUMPI PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x3CF3 DUP3 DUP3 PUSH2 0x5BCB JUMP JUMPDEST POP JUMPDEST PUSH2 0x3D04 DUP10 DUP6 DUP9 DUP7 OR DUP6 DUP10 PUSH2 0x408A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x3D22 JUMPI PUSH2 0x3D1D DUP10 PUSH1 0x0 PUSH2 0x4212 JUMP JUMPDEST PUSH2 0xAB1 JUMP JUMPDEST PUSH2 0xAB1 DUP5 DUP9 DUP12 PUSH1 0x0 SHR PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x435F JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1FFFF NOT PUSH3 0x20000 DUP5 AND ADD PUSH2 0x3D64 JUMPI PUSH2 0x3D61 PUSH3 0x76A700 DUP4 PUSH2 0x594D JUMP JUMPDEST SWAP2 POP JUMPDEST TIMESTAMP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x3DF4 JUMPI PUSH3 0x10000 DUP4 AND ISZERO PUSH2 0x3DEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH2 0x1A1F JUMP JUMPDEST PUSH1 0x4 DUP4 AND ISZERO PUSH2 0x1A1F JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x3B02 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x3E76 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x5C8B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3EB1 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3EAE SWAP2 DUP2 ADD SWAP1 PUSH2 0x5CDD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x3F66 JUMPI PUSH2 0x3EBD PUSH2 0x5CFA JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x3EF6 JUMPI POP PUSH2 0x3ED1 PUSH2 0x5D16 JUMP JUMPDEST DUP1 PUSH2 0x3EDC JUMPI POP PUSH2 0x3EF8 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x830 SWAP2 SWAP1 PUSH2 0x4D9D JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 EQ PUSH2 0x1F6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH4 0xFFFF0000 DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH1 0x1 DUP4 AND ISZERO SWAP1 DUP3 SWAP1 PUSH2 0x401F JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x13C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x4062 JUMPI DUP2 SWAP4 POP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x4082 JUMPI DUP3 SWAP4 POP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4096 DUP6 DUP6 DUP6 DUP5 PUSH2 0x414A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF DUP5 AND DUP2 MSTORE DUP6 SWAP1 PUSH32 0x39873F00C80F4F94B7BD1594AEBCF650F003545B74824D57DDF4939E3FF3A34B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x13C2 JUMPI PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE DUP6 SWAP1 PUSH32 0xF675815A0817338F93A7DA433F6BD5F5542F1029B11B455191AC96C7F6A9B132 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4140 DUP4 PUSH2 0x875 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x4154 DUP5 DUP4 PUSH2 0x4795 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL PUSH1 0xA0 DUP6 SWAP1 SHL AND OR PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 PUSH1 0xC0 DUP5 SWAP1 SHL AND OR SWAP1 SSTORE PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x421D DUP3 PUSH1 0x1 PUSH2 0x21FF JUMP JUMPDEST ISZERO PUSH2 0x423E JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST PUSH2 0x4247 DUP3 PUSH2 0x47CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x5B0FC9C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x5B0FC9C3 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x42CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x42DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP5 SWAP3 POP PUSH32 0xEE2BA1195C65BCF218A83D874335C6BF9D9067B4C672F3C3BF16CF40DE7586C4 SWAP2 POP PUSH1 0x20 ADD PUSH2 0x2D36 JUMP JUMPDEST PUSH2 0x4329 DUP6 DUP5 DUP5 DUP5 PUSH2 0x4890 JUMP JUMPDEST DUP5 PUSH32 0x8CE7013E8ABEBC55C3890A68F5A27C67C3F7EFA64E584DE5FB22363C606FD340 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x4125 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5DBE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x436D DUP7 PUSH2 0x875 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x437E DUP7 DUP4 DUP4 PUSH2 0x3D42 JUMP JUMPDEST POP DUP5 PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x43A0 JUMPI POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x4412 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x4433 JUMPI POP POP POP PUSH2 0x13C2 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL PUSH1 0xA0 DUP6 SWAP1 SHL AND OR PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 PUSH1 0xC0 DUP5 SWAP1 SHL AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND SWAP3 SWAP1 DUP12 AND SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1BF3 CALLER DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x4904 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4526 JUMPI PUSH1 0x40 MLOAD PUSH32 0x24C1D6D400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4530 DUP5 CALLER PUSH2 0x167F JUMP JUMPDEST PUSH2 0x4556 JUMPI PUSH1 0x40 MLOAD PUSH4 0x168AB55D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x830 JUMP JUMPDEST PUSH2 0x455F DUP5 PUSH2 0x875 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH2 0x456F DUP5 PUSH2 0x47CE JUMP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 MLOAD DUP4 LT PUSH2 0x45C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x726561644C6162656C3A20496E646578206F7574206F6620626F756E64730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x45DD JUMPI PUSH2 0x45DD PUSH2 0x58BC JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR SWAP1 POP DUP1 ISZERO PUSH2 0x4609 JUMPI PUSH2 0x4602 DUP6 PUSH2 0x45FC DUP7 PUSH1 0x1 PUSH2 0x5E06 JUMP JUMPDEST DUP4 PUSH2 0x4A47 JUMP JUMPDEST SWAP3 POP PUSH2 0x460E JUMP JUMPDEST PUSH1 0x0 SWAP3 POP JUMPDEST PUSH2 0x4618 DUP2 DUP6 PUSH2 0x5E06 JUMP JUMPDEST PUSH2 0x4623 SWAP1 PUSH1 0x1 PUSH2 0x5E06 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x463C DUP6 DUP6 PUSH2 0x4576 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x46AE JUMPI PUSH1 0x1 DUP6 MLOAD PUSH2 0x4654 SWAP2 SWAP1 PUSH2 0x5E19 JUMP JUMPDEST DUP5 EQ PUSH2 0x46A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E616D65686173683A204A756E6B20617420656E64206F66206E616D65000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x830 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP PUSH2 0x86F SWAP1 POP JUMP JUMPDEST PUSH2 0x46B8 DUP6 DUP3 PUSH2 0x462D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP4 MLOAD LT ISZERO PUSH2 0x472A JUMPI PUSH1 0x40 MLOAD PUSH32 0x280DACB600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF DUP4 MLOAD GT ISZERO PUSH2 0x4768 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xE3BA295F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x830 SWAP2 SWAP1 PUSH2 0x4D9D JUMP JUMPDEST DUP3 MLOAD DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x477E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5E2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x47AD JUMPI POP PUSH3 0x10001 DUP2 DUP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3B39 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA2A72013 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xA0 DUP2 SWAP1 SHR PUSH1 0xC0 DUP3 SWAP1 SHR PUSH2 0x47F2 DUP4 DUP4 DUP4 PUSH2 0x3649 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL PUSH1 0xA0 DUP4 SWAP1 SHL AND PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 PUSH1 0xC0 DUP7 SWAP1 SHL AND OR SWAP1 SSTORE SWAP3 POP PUSH2 0x4841 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH2 0x489A DUP5 DUP4 PUSH2 0x4795 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x48F8 JUMPI PUSH2 0x48C1 DUP6 PUSH2 0x47CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE DUP6 SWAP1 PUSH32 0xEE2BA1195C65BCF218A83D874335C6BF9D9067B4C672F3C3BF16CF40DE7586C4 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH2 0x13C2 DUP6 DUP6 DUP6 DUP6 PUSH2 0x4A6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x3B02 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x4961 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x5E8D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x499C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x4999 SWAP2 DUP2 ADD SWAP1 PUSH2 0x5CDD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x49A8 JUMPI PUSH2 0x3EBD PUSH2 0x5CFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 EQ PUSH2 0x1F6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x4A56 DUP4 DUP6 PUSH2 0x5E06 JUMP JUMPDEST GT ISZERO PUSH2 0x4A61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 ADD PUSH1 0x20 ADD KECCAK256 SWAP1 JUMP JUMPDEST DUP4 PUSH1 0x0 DUP1 DUP1 PUSH2 0x4A79 DUP5 PUSH2 0x875 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH4 0xFFFF0000 DUP3 AND PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP8 AND SWAP1 DUP4 AND GT ISZERO PUSH2 0x4AA0 JUMPI DUP2 SWAP6 POP JUMPDEST TIMESTAMP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0x4AB6 JUMPI SWAP6 DUP7 OR SWAP6 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x4B0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E74206F66206578697374696E6720746F6B656E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x4B89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SUB PUSH2 0x4C07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206E65774F776E65722063616E6E6F742062652074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4E616D655772617070657220636F6E7472616374000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL PUSH1 0xA0 DUP11 SWAP1 SHL AND OR PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 PUSH1 0xC0 DUP10 SWAP1 SHL AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP2 PUSH1 0x0 SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2B8D CALLER PUSH1 0x0 DUP11 DUP9 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x4904 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4CE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4CF3 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x2491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A1F DUP2 PUSH2 0x4D1A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4D68 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4D50 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x4D89 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x4D4D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1A1F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4D71 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x4DC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4DE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x4DF0 PUSH1 0x20 DUP5 ADD PUSH2 0x4DB0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x4E0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4E23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x4E3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4E5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x4E65 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x4E75 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4E98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4EA4 DUP9 DUP3 DUP10 ADD PUSH2 0x4DF9 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4EC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A1F DUP2 PUSH2 0x4CC0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4EE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4EF7 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4F3E JUMPI PUSH2 0x4F3E PUSH2 0x4F02 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4F5F JUMPI PUSH2 0x4F5F PUSH2 0x4F02 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4F7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4F89 DUP2 PUSH2 0x4F45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F96 DUP3 DUP3 PUSH2 0x4F18 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP6 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x4FAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x4DC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x4FF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5016 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5022 DUP11 DUP3 DUP12 ADD PUSH2 0x4F6D JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH2 0x5033 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH2 0x5043 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP4 POP PUSH2 0x5051 PUSH1 0x80 DUP10 ADD PUSH2 0x4DB0 JUMP JUMPDEST SWAP3 POP PUSH2 0x505F PUSH1 0xA0 DUP10 ADD PUSH2 0x4FC9 JUMP JUMPDEST SWAP2 POP PUSH2 0x506D PUSH1 0xC0 DUP10 ADD PUSH2 0x4DB0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5095 JUMPI PUSH2 0x5095 PUSH2 0x4F02 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x50B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x50BD DUP3 PUSH2 0x507B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50CA DUP3 DUP3 PUSH2 0x4F18 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x50EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x21F4 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x50EE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x511D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x5128 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x5138 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x5155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5161 DUP10 DUP4 DUP11 ADD PUSH2 0x509F JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5183 DUP10 DUP4 DUP11 ADD PUSH2 0x509F JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51A6 DUP9 DUP3 DUP10 ADD PUSH2 0x4F6D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x51C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0x51E0 PUSH1 0x40 DUP7 ADD PUSH2 0x4FC9 JUMP JUMPDEST SWAP2 POP PUSH2 0x51EE PUSH1 0x60 DUP7 ADD PUSH2 0x4DB0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x4DC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x521E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x4DF0 PUSH1 0x20 DUP5 ADD PUSH2 0x51F9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x5259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x526D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x527A DUP3 PUSH2 0x507B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5287 DUP3 DUP3 PUSH2 0x4F18 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x52A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x52CE JUMPI DUP6 CALLDATALOAD PUSH2 0x52BF DUP2 PUSH2 0x4CC0 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x52AC JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x52E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4623 DUP6 DUP3 DUP7 ADD PUSH2 0x509F JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5321 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x5305 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1A1F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x52F1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x535F DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x536F DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x53AC PUSH1 0x40 DUP6 ADD PUSH2 0x4DB0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x53CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x53DC DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x53EC DUP2 PUSH2 0x4CC0 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x540F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5432 DUP9 DUP3 DUP10 ADD PUSH2 0x4DF9 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x5446 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP3 POP PUSH2 0x5454 PUSH1 0x40 DUP8 ADD PUSH2 0x51F9 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0x5464 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x549E DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4EF7 DUP2 PUSH2 0x5472 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x54C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x54DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x54EA DUP10 DUP3 DUP11 ADD PUSH2 0x4DF9 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x54FE DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x5515 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP2 POP PUSH2 0x5523 PUSH1 0x80 DUP9 ADD PUSH2 0x51F9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x4DF0 PUSH1 0x20 DUP5 ADD PUSH2 0x4FC9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5565 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x558D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x55AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55B7 DUP10 DUP3 DUP11 ADD PUSH2 0x4DF9 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x55CB DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP3 POP PUSH2 0x55D9 PUSH1 0x60 DUP9 ADD PUSH2 0x4FC9 JUMP JUMPDEST SWAP2 POP PUSH2 0x5523 PUSH1 0x80 DUP9 ADD PUSH2 0x4DB0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x55FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x560F DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x51E0 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5634 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x53EC DUP2 PUSH2 0x4CC0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x5663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x567A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5686 DUP8 DUP3 DUP9 ADD PUSH2 0x4DF9 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x569A DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x56AA DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x56C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x56D3 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4EF7 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x56FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5725 DUP9 DUP3 DUP10 ADD PUSH2 0x4DF9 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x5454 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x5751 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x575C DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x576C DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5796 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x51A6 DUP9 DUP3 DUP10 ADD PUSH2 0x4F6D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x57B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x57CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x57DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x57E7 DUP2 PUSH2 0x4F45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57F4 DUP3 DUP3 PUSH2 0x4F18 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP7 PUSH1 0x20 DUP5 DUP7 ADD ADD GT ISZERO PUSH2 0x5809 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1707 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x4D4D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x5830 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5853 DUP8 DUP3 DUP9 ADD PUSH2 0x4F6D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x5864 DUP2 PUSH2 0x4CC0 JUMP JUMPDEST SWAP3 POP PUSH2 0x5872 PUSH1 0x40 DUP7 ADD PUSH2 0x51F9 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x56AA DUP2 PUSH2 0x4CC0 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x5896 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x58B6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x58FB JUMPI PUSH2 0x58FB PUSH2 0x58D2 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5915 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x52F1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x5927 DUP2 DUP6 PUSH2 0x52F1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5942 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1A1F DUP2 PUSH2 0x4CC0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x596E JUMPI PUSH2 0x596E PUSH2 0x58D2 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5987 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1A1F DUP2 PUSH2 0x5472 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x59B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x596E JUMPI PUSH2 0x596E PUSH2 0x58D2 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND DUP5 ADD ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5A1B PUSH1 0xA0 DUP4 ADD DUP9 DUP11 PUSH2 0x59DC JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF DUP7 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x60 DUP5 ADD MSTORE DUP1 DUP5 AND PUSH1 0x80 DUP5 ADD MSTORE POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5AA3 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x5A84 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3B02 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x5A90 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x5AC0 JUMPI PUSH2 0x5AC0 PUSH2 0x4F02 JUMP JUMPDEST PUSH2 0x5AD4 DUP4 PUSH2 0x5ACE DUP4 SLOAD PUSH2 0x5882 JUMP JUMPDEST DUP4 PUSH2 0x5A5D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5B08 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x5AF0 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x13C2 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5B39 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x5B19 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x5B56 JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP9 DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x5B82 PUSH1 0xE0 DUP4 ADD DUP10 DUP12 PUSH2 0x59DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND PUSH1 0x40 DUP5 ADD MSTORE SWAP6 SWAP1 SWAP7 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5BE5 JUMPI PUSH2 0x5BE5 PUSH2 0x4F02 JUMP JUMPDEST PUSH2 0x5BF9 DUP2 PUSH2 0x5BF3 DUP5 SLOAD PUSH2 0x5882 JUMP JUMPDEST DUP5 PUSH2 0x5A5D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5C2E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x5C16 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x3B02 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5C5D JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x5C3E JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x5C7B JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x5CB7 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x52F1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x5CC9 DUP2 DUP7 PUSH2 0x52F1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x3C44 DUP2 DUP6 PUSH2 0x4D71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5CEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1A1F DUP2 PUSH2 0x4D1A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x5D13 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x5D24 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP1 RETURNDATASIZE ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x5D72 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x5D8A JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x5DA4 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x5DB3 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x4F18 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5DD1 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x4D71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x86F JUMPI PUSH2 0x86F PUSH2 0x58D2 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x86F JUMPI PUSH2 0x86F PUSH2 0x58D2 JUMP JUMPDEST PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP5 PUSH1 0xF8 SHL AND DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x5E69 DUP2 PUSH1 0x1 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x4D4D JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x5E80 DUP2 PUSH1 0x1 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x4D4D JUMP JUMPDEST ADD PUSH1 0x1 ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x5EC5 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x4D71 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xFFBFB0723A87FB1A8EA1 0xC9 SWAP14 EXP PUSH26 0xE9C7883BDCEDC5C06B292AE48AFEE0656764736F6C6343000811 STOP CALLER ","sourceMap":"1329:35229:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2003:386:16;;;;;;:::i;:::-;;:::i;:::-;;;639:25:21;;;627:2;612:18;2003:386:16;;;;;;;;3937:340:20;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;1076:55:21;;;1058:74;;1180:10;1168:23;;;1163:2;1148:18;;1141:51;1240:18;1228:31;1208:18;;;1201:59;1046:2;1031:18;3937:340:20;860:406:21;2993:354:20;;;;;;:::i;:::-;;:::i;:::-;;;1868:14:21;;1861:22;1843:41;;1831:2;1816:18;2993:354:20;1703:187:21;1702:43:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4754:127::-;;;;;;:::i;:::-;;:::i;24322:192::-;;;;;;:::i;:::-;;:::i;:::-;;27470:1014;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;4416:79:21;;;4398:98;;4386:2;4371:18;27470:1014:20;4254:248:21;4452:151:20;;;;;;:::i;:::-;;:::i;23963:218::-;;;;;;:::i;:::-;;:::i;2159:42::-;;;;;-1:-1:-1;;;;;2159:42:20;;;;;;-1:-1:-1;;;;;5296:55:21;;;5278:74;;5266:2;5251:18;2159:42:20;5104:254:21;1649:47:20;;;;;;:::i;:::-;;:::i;21598:1164::-;;;;;;:::i;:::-;;:::i;1539:50::-;;;;;4805:1255:16;;;;;;:::i;:::-;;:::i;18384:1380:20:-;;;;;;:::i;:::-;;:::i;1500:33::-;;;;;13769:458;;;;;;:::i;:::-;;:::i;:::-;;;11763:10:21;11751:23;;;11733:42;;11721:2;11706:18;13769:458:20;11589:192:21;6320:387:20;;;;;;:::i;:::-;;:::i;2546:542:16:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1595:48:20:-;;;;;-1:-1:-1;;;;;1595:48:20;;;633:171:13;;;;;;:::i;:::-;;:::i;3539:178:20:-;;;;;;:::i;:::-;;:::i;14585:1171::-;;;;;;:::i;:::-;;:::i;:::-;;;15221:18:21;15209:31;;;15191:50;;15179:2;15164:18;14585:1171:20;15047:200:21;1831:101:0;;;:::i;12155:477:20:-;;;;;;:::i;:::-;;:::i;7205:889::-;;;;;;:::i;:::-;;:::i;1201:85:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;3156:362:16;;;;;;:::i;:::-;;:::i;8714:475:20:-;;;;;;:::i;:::-;;:::i;27046:232::-;;;;;;:::i;:::-;;:::i;5201:564::-;;;;;;:::i;:::-;;:::i;9587:1029::-;;;;;;:::i;:::-;;:::i;20215:824::-;;;;;;:::i;:::-;;:::i;23040:761::-;;;;;;:::i;:::-;;:::i;13114:465::-;;;;;;:::i;:::-;;:::i;150:43:15:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;271:174;;;;;;:::i;:::-;;:::i;16124:614:20:-;;;;;;:::i;:::-;;:::i;3585:210:16:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3751:27:16;;;3724:4;3751:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3585:210;10991:790:20;;;;;;:::i;:::-;;:::i;948:42:16:-;;;;;;:::i;:::-;;;;;;;;;;;;;;17264:683:20;;;;;;:::i;:::-;;:::i;4279:454:16:-;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;27284:180:20:-;;;;;;:::i;:::-;;:::i;2003:386:16:-;2129:7;-1:-1:-1;;;;;2173:21:16;;2152:111;;;;-1:-1:-1;;;2152:111:16;;24024:2:21;2152:111:16;;;24006:21:21;24063:2;24043:18;;;24036:30;24102:34;24082:18;;;24075:62;24173:13;24153:18;;;24146:41;24204:19;;2152:111:16;;;;;;;;;2273:13;2289:11;2297:2;2289:7;:11::i;:::-;2273:27;;2323:7;-1:-1:-1;;;;;2314:16:16;:5;-1:-1:-1;;;;;2314:16:16;;2310:55;;2353:1;2346:8;;;;;2310:55;2381:1;2374:8;;;2003:386;;;;;:::o;3937:340:20:-;4068:13;4083:16:16;;;:7;:16;;;;;;4201:3;4196:8;;;4167:3;4162:8;;;4229:41:20;4083:16:16;4196:8;4162;4229:19:20;:41::i;:::-;4212:58;;;;-1:-1:-1;3937:340:20;;-1:-1:-1;3937:340:20;-1:-1:-1;3937:340:20:o;2993:354::-;3140:4;-1:-1:-1;;;;;;3179:45:20;;3194:30;3179:45;;:109;;-1:-1:-1;;;;;;;3240:48:20;;3255:33;3240:48;3179:109;:161;;;;3304:36;3328:11;3304:23;:36::i;4754:127::-;4846:15;;;:28;;;;;;;;639:25:21;;;4814:13:20;;-1:-1:-1;;;;;4846:15:20;;;;:19;;612:18:21;;4846:28:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4846:28:20;;;;;;;;;;;;:::i;24322:192::-;24419:4;5974:31;5988:4;5994:10;5974:13;:31::i;:::-;5969:100;;6028:30;;-1:-1:-1;;;6028:30:20;;;;;25117:25:21;;;6047:10:20;25158:18:21;;;25151:83;25090:18;;6028:30:20;24943:297:21;5969:100:20;24450:4;412:2:18::1;24817:12:20;24835:22;24450:4:::0;24835:7:::1;:22::i;:::-;-1:-1:-1::0;24814:43:20;-1:-1:-1;;24871:21:20::1;:16:::0;;::::1;:21;::::0;24867:84:::1;;24915:25;::::0;-1:-1:-1;;;24915:25:20;;::::1;::::0;::::1;639::21::0;;;612:18;;24915:25:20::1;493:177:21::0;24867:84:20::1;24486:21:::2;::::0;;;;::::2;::::0;::::2;25417:25:21::0;;;25490:18;25478:31;;25458:18;;;25451:59;24486:3:20::2;-1:-1:-1::0;;;;;24486:10:20::2;::::0;::::2;::::0;25390:18:21;;24486:21:20::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;24804:164:::1;6079:1;;24322:192:::0;;;:::o;27470:1014::-;27618:6;27689:10;-1:-1:-1;;;;;27711:9:20;27689:32;;27685:90;;27744:20;;;;;;;;;;;;;;27685:90;27799:19;;;;27929:52;;;;27940:4;27929:52;:::i;:::-;28066:23;;;;;;27785:196;;-1:-1:-1;27785:196:20;;-1:-1:-1;27785:196:20;-1:-1:-1;27785:196:20;-1:-1:-1;28020:7:20;;28104:30;;;28100:111;;28157:43;;;;;;;;26387:25:21;;;26428:18;;;26421:34;;;26360:18;;28157:43:20;26213:248:21;28100:111:20;28294:52;;;;;;;;25117:25:21;;;28340:4:20;25158:18:21;;;25151:83;28294:9:20;-1:-1:-1;;;;;28294:17:20;;;;25090:18:21;;28294:52:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28357:57;28369:5;28376;28383:20;28405:8;28357:11;:57::i;:::-;-1:-1:-1;28432:45:20;;27470:1014;-1:-1:-1;;;;;;;;;;;27470:1014:20:o;4452:151::-;1094:13:0;:11;:13::i;:::-;4562:15:20::1;:34:::0;;;::::1;-1:-1:-1::0;;;;;4562:34:20;;;::::1;::::0;;;::::1;::::0;;4452:151::o;23963:218::-;24071:4;5974:31;5988:4;5994:10;5974:13;:31::i;:::-;5969:100;;6028:30;;-1:-1:-1;;;6028:30:20;;;;;25117:25:21;;;6047:10:20;25158:18:21;;;25151:83;25090:18;;6028:30:20;24943:297:21;5969:100:20;24102:4;376:1:18::1;24817:12:20;24835:22;24102:4:::0;24835:7:::1;:22::i;:::-;-1:-1:-1::0;24814:43:20;-1:-1:-1;;24871:21:20::1;:16:::0;;::::1;:21;::::0;24867:84:::1;;24915:25;::::0;-1:-1:-1;;;24915:25:20;;::::1;::::0;::::1;639::21::0;;;612:18;;24915:25:20::1;493:177:21::0;24867:84:20::1;24143:31:::2;::::0;;;;::::2;::::0;::::2;25117:25:21::0;;;-1:-1:-1;;;;;25178:55:21;;;25158:18;;;25151:83;24143:3:20::2;:15;::::0;::::2;::::0;25090:18:21;;24143:31:20::2;24943:297:21::0;1649:47:20;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;21598:1164::-;21844:12;21823:10;5974:31;5988:4;5994:10;5974:13;:31::i;:::-;5969:100;;6028:30;;-1:-1:-1;;;6028:30:20;;;;;25117:25:21;;;6047:10:20;25158:18:21;;;25151:83;25090:18;;6028:30:20;24943:297:21;5969:100:20;21888:23;;::::1;::::0;::::1;::::0;21928:32:::1;21938:10:::0;21888:23;29832:33;;;;;;;42943:19:21;;;;42978:12;;;42971:28;;;;29832:33:20;;;;;;;;;43015:12:21;;;;29832:33:20;;29822:44;;;;;;29694:179;21928:32:::1;21921:39;;21970:46;21999:10;22011:4;21970:28;:46::i;:::-;22026:35;22049:4;22055:5;22026:22;:35::i;:::-;22071;22082:10;22094:4;22100:5;22071:10;:35::i;:::-;;22125:59;22152:10;22164:4;22170:5;22177:6;22125:26;:59::i;:::-;22116:68;;22199:15;22209:4;22199:9;:15::i;:::-;22194:562;;22230:167;::::0;;;;::::1;::::0;::::1;27467:25:21::0;;;27508:18;;;27501:34;;;22331:4:20::1;27612:18:21::0;;;27605:43;-1:-1:-1;;;;;27684:15:21;;;27664:18;;;27657:43;27749:18;27737:31;;27716:19;;;27709:60;22230:3:20::1;:20;::::0;::::1;::::0;27439:19:21;;22230:167:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;22411:64;22429:10;22441:4;22447:5;22454;22461;22468:6;22411:17;:64::i;:::-;22194:562;;;22506:167;::::0;;;;::::1;::::0;::::1;27467:25:21::0;;;27508:18;;;27501:34;;;22607:4:20::1;27612:18:21::0;;;27605:43;-1:-1:-1;;;;;27684:15:21;;;27664:18;;;27657:43;27749:18;27737:31;;27716:19;;;27709:60;22506:3:20::1;:20;::::0;::::1;::::0;27439:19:21;;22506:167:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;22687:58;22699:10;22711:4;22717:5;22724;22731;22738:6;22687:11;:58::i;:::-;21858:904;21598:1164:::0;;;;;;;;;;:::o;4805:1255:16:-;5044:7;:14;5030:3;:10;:28;5009:115;;;;-1:-1:-1;;;5009:115:16;;27982:2:21;5009:115:16;;;27964:21:21;28021:2;28001:18;;;27994:30;28060:34;28040:18;;;28033:62;28131:10;28111:18;;;28104:38;28159:19;;5009:115:16;27780:404:21;5009:115:16;-1:-1:-1;;;;;5142:16:16;;5134:66;;;;-1:-1:-1;;;5134:66:16;;28391:2:21;5134:66:16;;;28373:21:21;28430:2;28410:18;;;28403:30;28469:34;28449:18;;;28442:62;28540:7;28520:18;;;28513:35;28565:19;;5134:66:16;28189:401:21;5134:66:16;-1:-1:-1;;;;;5231:18:16;;5239:10;5231:18;;:56;;-1:-1:-1;;;;;;3751:27:16;;3724:4;3751:27;;;:18;:27;;;;;;;;5276:10;3751:37;;;;;;;;;;5253:34;5210:153;;;;-1:-1:-1;;;5210:153:16;;28797:2:21;5210:153:16;;;28779:21:21;28836:2;28816:18;;;28809:30;28875:34;28855:18;;;28848:62;28946:20;28926:18;;;28919:48;28984:19;;5210:153:16;28595:414:21;5210:153:16;5379:9;5374:445;5398:3;:10;5394:1;:14;5374:445;;;5429:10;5442:3;5446:1;5442:6;;;;;;;;:::i;:::-;;;;;;;5429:19;;5462:14;5479:7;5487:1;5479:10;;;;;;;;:::i;:::-;;;;;;;5462:27;;5505:16;5523:12;5537:13;5554:11;5562:2;5554:7;:11::i;:::-;5504:61;;;;;;5580:36;5598:2;5602:5;5609:6;5580:17;:36::i;:::-;;5656:6;5666:1;5656:11;:31;;;;;5683:4;-1:-1:-1;;;;;5671:16:16;:8;-1:-1:-1;;;;;5671:16:16;;5656:31;5631:132;;;;-1:-1:-1;;;5631:132:16;;29405:2:21;5631:132:16;;;29387:21:21;29444:2;29424:18;;;29417:30;29483:34;29463:18;;;29456:62;29554:12;29534:18;;;29527:40;29584:19;;5631:132:16;29203:406:21;5631:132:16;6471:16;;;;:7;:16;;;;;-1:-1:-1;;;;;6502:23:16;;-1:-1:-1;;;6559:3:16;6541:21;;;;6502:61;6579:22;6598:3;6579:22;;;;6502:100;6471:131;;5415:404;;;;;5410:3;;;;:::i;:::-;;;5374:445;;;;5866:2;-1:-1:-1;;;;;5834:49:16;5860:4;-1:-1:-1;;;;;5834:49:16;5848:10;-1:-1:-1;;;;;5834:49:16;;5870:3;5875:7;5834:49;;;;;;;:::i;:::-;;;;;;;;5894:159;5943:10;5967:4;5985:2;6001:3;6018:7;6039:4;5894:35;:159::i;:::-;4805:1255;;;;;:::o;18384:1380:20:-;29832:33;;;;;;;42943:19:21;;;42978:12;;;42971:28;;;29832:33:20;;;;;;;;;43015:12:21;;;;29832:33:20;;;29822:44;;;;;18587:35;18610:4;18616:5;18587:22;:35::i;:::-;18633:13;;;18685:44;18714:4;18685:7;:44::i;:::-;18632:97;;-1:-1:-1;18632:97:20;-1:-1:-1;18632:97:20;-1:-1:-1;;;;;;18743:19:20;;;;:55;;-1:-1:-1;18766:15:20;;-1:-1:-1;;;18766:15:20;;;;;639:25:21;;;18793:4:20;;-1:-1:-1;;;;;18766:3:20;:9;;;;612:18:21;;18766:15:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;18766:32:20;;;18743:55;18739:111;;;18821:18;;;;;;;;;;;;;;18739:111;18919:18;;18959:28;18975:10;18959:7;:28::i;:::-;18916:71;;-1:-1:-1;18916:71:20;-1:-1:-1;19001:10:20;;-1:-1:-1;18997:305:20;;19045:31;19059:4;19065:10;19045:13;:31::i;:::-;19040:108;;19103:30;;-1:-1:-1;;;19103:30:20;;;;;25117:25:21;;;19122:10:20;25158:18:21;;;25151:83;25090:18;;19103:30:20;24943:297:21;19040:108:20;18997:305;;;19183:37;19197:10;19209;19183:13;:37::i;:::-;19178:114;;19247:30;;-1:-1:-1;;;19247:30:20;;;;;25117:25:21;;;19266:10:20;25158:18:21;;;25151:83;25090:18;;19247:30:20;24943:297:21;19178:114:20;19312:43;19330:4;19336:5;19343:11;19312:17;:43::i;:::-;19375:46;19392:6;19400:9;19411;19375:16;:46::i;:::-;19366:55;-1:-1:-1;570:7:18;19524:32:20;;:37;;;;:81;;;19597:8;19577:28;;19588:5;19577:8;:16;:28;;;;19524:81;19507:166;;;19637:25;;-1:-1:-1;;;19637:25:20;;;;;639::21;;;612:18;;19637:25:20;493:177:21;19507:166:20;19682:17;;;;19709:48;19719:4;19725:5;19682:17;19739:9;19750:6;19709:9;:48::i;13769:458::-;13941:6;13868:4;5974:31;5988:4;5994:10;5974:13;:31::i;:::-;5969:100;;6028:30;;-1:-1:-1;;;6028:30:20;;;;;25117:25:21;;;6047:10:20;25158:18:21;;;25151:83;25090:18;;6028:30:20;24943:297:21;5969:100:20;13899:4;298:1:18::1;24817:12:20;24835:22;13899:4:::0;24835:7:::1;:22::i;:::-;-1:-1:-1::0;24814:43:20;-1:-1:-1;;24871:21:20::1;:16:::0;;::::1;:21;::::0;24867:84:::1;;24915:25;::::0;-1:-1:-1;;;24915:25:20;;::::1;::::0;::::1;639::21::0;;;612:18;;24915:25:20::1;493:177:21::0;24867:84:20::1;14009:13:::2;::::0;;14058:44:::2;14087:4:::0;14058:7:::2;:44::i;:::-;14008:94;;;;;;14112:71;14122:4;14128:5;14158:8;14135:20;:31;;;14168:6;14176;14112:9;:71::i;:::-;-1:-1:-1::0;;14193:27:20::2;::::0;;::::2;::::0;13769:458;-1:-1:-1;;;;;;;13769:458:20:o;6320:387::-;6433:4;;;;6500:22;6516:4;6500:7;:22::i;:::-;6453:69;;;;;;6561:4;-1:-1:-1;;;;;6552:13:20;:5;-1:-1:-1;;;;;6552:13:20;;:46;;;-1:-1:-1;;;;;;3751:27:16;;;3724:4;3751:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;6569:29:20;6551:149;;;;-1:-1:-1;608:7:18;6616:18:20;;:23;;:83;;-1:-1:-1;6684:15:20;6659:21;1791:7;6659:6;:21;:::i;:::-;:40;;;;6616:83;6532:168;6320:387;-1:-1:-1;;;;;;6320:387:20:o;2546:542:16:-;2697:16;2769:3;:10;2750:8;:15;:29;2729:117;;;;-1:-1:-1;;;2729:117:16;;31119:2:21;2729:117:16;;;31101:21:21;31158:2;31138:18;;;31131:30;31197:34;31177:18;;;31170:62;31268:11;31248:18;;;31241:39;31297:19;;2729:117:16;30917:405:21;2729:117:16;2857:30;2904:8;:15;2890:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2890:30:16;;2857:63;;2936:9;2931:120;2955:8;:15;2951:1;:19;2931:120;;;3010:30;3020:8;3029:1;3020:11;;;;;;;;:::i;:::-;;;;;;;3033:3;3037:1;3033:6;;;;;;;;:::i;:::-;;;;;;;3010:9;:30::i;:::-;2991:13;3005:1;2991:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2972:3;;;:::i;:::-;;;2931:120;;;-1:-1:-1;3068:13:16;2546:542;-1:-1:-1;;;2546:542:16:o;633:171:13:-;1094:13:0;:11;:13::i;:::-;760:37:13::1;::::0;;;;-1:-1:-1;;;;;31519:55:21;;;760:37:13::1;::::0;::::1;31501:74:21::0;31591:18;;;31584:34;;;760:23:13;::::1;::::0;::::1;::::0;31474:18:21;;760:37:13::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;633:171:::0;;;:::o;3539:178:20:-;3657:13;3693:17;3707:2;3693:13;:17::i;14585:1171::-;29832:33;;;;;;;42943:19:21;;;42978:12;;;42971:28;;;29832:33:20;;;;;;;;;43015:12:21;;;;29832:33:20;;;29822:44;;;;;14707:6;;14839:24;14866:37;14880:10;14892;14866:13;:37::i;:::-;14839:64;;14990:19;14989:20;:56;;;;;15014:31;15028:4;15034:10;15014:13;:31::i;:::-;15013:32;14989:56;14985:124;;;15068:30;;-1:-1:-1;;;15068:30:20;;;;;25117:25:21;;;15087:10:20;25158:18:21;;;25151:83;25090:18;;15068:30:20;24943:297:21;14985:124:20;15120:13;;;15169:44;15198:4;15169:7;:44::i;:::-;15119:94;;;;;;15339:19;15338:20;:54;;;;-1:-1:-1;653:7:18;15362:25:20;;:30;15338:54;15334:117;;;15415:25;;-1:-1:-1;;;15415:25:20;;;;;639::21;;;612:18;;15415:25:20;493:177:21;15334:117:20;15523:16;15543:28;15559:10;15543:7;:28::i;:::-;15518:53;;;;15590:46;15607:6;15615:9;15626;15590:16;:46::i;:::-;15581:55;;15647:36;15656:4;15662:5;15669;15676:6;15647:8;:36::i;:::-;15698:28;;15221:18:21;15209:31;;15191:50;;15713:4:20;;15698:28;;15179:2:21;15164:18;15698:28:20;;;;;;;15743:6;15736:13;;;;;;;;14585:1171;;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;12155:477:20:-;29832:33;;;1848:66;29832:33;;;;42943:19:21;;;;42978:12;;;42971:28;;;29832:33:20;;;;;;;;;43015:12:21;;;;29832:33:20;;;29822:44;;;;;5974:31;5988:4;5994:10;5974:13;:31::i;:::-;5969:100;;6028:30;;-1:-1:-1;;;6028:30:20;;;;;25117:25:21;;;6047:10:20;25158:18:21;;;25151:83;25090:18;;6028:30:20;24943:297:21;5969:100:20;12365:4:::1;-1:-1:-1::0;;;;;12343:27:20;::::1;::::0;12339:97:::1;;12393:32;::::0;::::1;::::0;;-1:-1:-1;;;;;5296:55:21;;12393:32:20::1;::::0;::::1;5278:74:21::0;5251:18;;12393:32:20::1;5104:254:21::0;12339:97:20::1;29832:33:::0;;;1848:66:::1;29832:33:::0;;;;42943:19:21;;;;42978:12;;;42971:28;;;29832:33:20;;;;;;;;;43015:12:21;;;;29832:33:20;;;29822:44;;;;;12445:51:::1;::::0;12453:30:::1;12485:10;12445:7;:51::i;:::-;12506:119;::::0;;;;12554:4:::1;12506:119;::::0;::::1;32142:34:21::0;-1:-1:-1;;;;;32212:15:21;;;32192:18;;;32185:43;32244:18;;;32237:34;;;12506:9:20::1;:26;::::0;::::1;::::0;32054:18:21;;12506:119:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;12155:477:::0;;;;:::o;7205:889::-;7381:15;7423:5;;7407:23;;;;;;;:::i;:::-;;;;;;;;;7462:26;;;;;;639:25:21;;;7407:23:20;-1:-1:-1;7399:32:20;;7462:9;-1:-1:-1;;;;;7462:17:20;;;;612:18:21;;7462:26:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7441:47;-1:-1:-1;;;;;;7515:24:20;;7529:10;7515:24;;;;:91;;-1:-1:-1;7556:50:20;;;;;-1:-1:-1;;;;;32811:15:21;;;7556:50:20;;;32793:34:21;7595:10:20;32843:18:21;;;32836:43;7556:9:20;:26;;;;32705:18:21;;7556:50:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7555:51;7515:91;7498:260;;;29832:33;;;1848:66;29832:33;;;;42943:19:21;;;;42978:12;;;42971:28;;;29832:33:20;;;;;;;;;43015:12:21;;;29832:33:20;;;;29822:44;;;;;-1:-1:-1;;;7638:109:20;;;;;;25117:25:21;;;;7723:10:20;25158:18:21;;;25151:83;25090:18;;7638:109:20;24943:297:21;7498:260:20;7829:58;;;;;-1:-1:-1;;;;;32160:15:21;;;7829:58:20;;;32142:34:21;7872:4:20;32192:18:21;;;32185:43;32244:18;;;32237:34;;;7829:9:20;:22;;;;32054:18:21;;7829:58:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7971:41:20;;;;;;;;25117:25:21;;;8006:4:20;25158:18:21;;;25151:83;7971:9:20;-1:-1:-1;;;;;7971:17:20;;-1:-1:-1;7971:17:20;;-1:-1:-1;25090:18:21;;7971:41:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8023:64;8035:5;;8023:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8042:12:20;;-1:-1:-1;8056:20:20;;-1:-1:-1;8078:8:20;;-1:-1:-1;8023:11:20;:64::i;:::-;7371:723;;7205:889;;;;;:::o;3156:362:16:-;-1:-1:-1;;;;;3299:22:16;;:10;:22;3278:110;;;;-1:-1:-1;;;3278:110:16;;33092:2:21;3278:110:16;;;33074:21:21;33131:2;33111:18;;;33104:30;33170:34;33150:18;;;33143:62;33241:11;33221:18;;;33214:39;33270:19;;3278:110:16;32890:405:21;3278:110:16;3418:10;3399:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;3399:40:16;;;;;;;;;;;;:51;;-1:-1:-1;;3399:51:16;;;;;;;;;;3465:46;;1843:41:21;;;3399:40:16;;3418:10;3465:46;;1816:18:21;3465:46:16;;;;;;;3156:362;;:::o;8714:475:20:-;520:10:15;8943:23:20;508::15;;;:11;:23;;;;;;;;487:110;;;;-1:-1:-1;;;487:110:15;;33502:2:21;487:110:15;;;33484:21:21;33541:2;33521:18;;;33514:30;33580:34;33560:18;;;33553:62;33651:10;33631:18;;;33624:38;33679:19;;487:110:15;33300:404:21;487:110:15;8978:15:20::1;9020:5;;9004:23;;;;;;;:::i;:::-;;::::0;;;;::::1;::::0;;9056:52;;;::::1;::::0;::::1;33911:25:21::0;;;9092:4:20::1;33952:18:21::0;;;33945:83;34044:18;;;34037:34;;;9004:23:20;-1:-1:-1;9056:9:20::1;-1:-1:-1::0;;;;;9056:18:20::1;::::0;::::1;::::0;33884::21;;9056:52:20::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9038:70;;9118:64;9130:5;;9118:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;9137:12:20;;-1:-1:-1;9151:20:20;;-1:-1:-1;9173:8:20;;-1:-1:-1;9118:11:20::1;:64::i;:::-;8968:221;8714:475:::0;;;;;;;;:::o;27046:232::-;27163:4;;27204:22;27220:4;27204:7;:22::i;:::-;-1:-1:-1;27243:16:20;;:28;;;;;;;;;-1:-1:-1;;;27046:232:20;;;;:::o;5201:564::-;1094:13:0;:11;:13::i;:::-;5325:15:20::1;::::0;-1:-1:-1;;;;;5325:15:20::1;5317:38:::0;5313:197:::1;;5407:15;::::0;5371:60:::1;::::0;-1:-1:-1;;;5371:60:20;;-1:-1:-1;;;;;5407:15:20;;::::1;5371:60;::::0;::::1;34439:74:21::0;5407:15:20::1;34529:18:21::0;;;34522:50;5371:9:20::1;:27:::0;;::::1;::::0;::::1;::::0;34412:18:21;;5371:60:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5475:15:20::1;::::0;5445:54:::1;::::0;-1:-1:-1;;;5445:54:20;;-1:-1:-1;;;;;5475:15:20;;::::1;5445:54;::::0;::::1;34439:74:21::0;5475:15:20::1;34529:18:21::0;;;34522:50;5445:3:20::1;:21:::0;;::::1;::::0;-1:-1:-1;5445:21:20::1;::::0;-1:-1:-1;34412:18:21;;5445:54:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5313:197;5520:15;:33:::0;;;::::1;-1:-1:-1::0;;;;;5520:33:20;::::1;::::0;;::::1;::::0;;;5568:38;5564:195:::1;;5658:15;::::0;5622:59:::1;::::0;-1:-1:-1;;;5622:59:20;;-1:-1:-1;;;;;5658:15:20;;::::1;5622:59;::::0;::::1;34439:74:21::0;5658:15:20;34529:18:21;;;34522:50;5622:9:20::1;:27:::0;;::::1;::::0;::::1;::::0;34412:18:21;;5622:59:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5725:15:20::1;::::0;5695:53:::1;::::0;-1:-1:-1;;;5695:53:20;;-1:-1:-1;;;;;5725:15:20;;::::1;5695:53;::::0;::::1;34439:74:21::0;5725:15:20;34529:18:21;;;34522:50;5695:3:20::1;:21:::0;;::::1;::::0;-1:-1:-1;5695:21:20::1;::::0;-1:-1:-1;34412:18:21;;5695:53:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;5564:195;5201:564:::0;:::o;9587:1029::-;520:10:15;9711:15:20;508:23:15;;;:11;:23;;;;;;;;487:110;;;;-1:-1:-1;;;487:110:15;;33502:2:21;487:110:15;;;33484:21:21;33541:2;33521:18;;;33514:30;33580:34;33560:18;;;33553:62;33651:10;33631:18;;;33624:38;33679:19;;487:110:15;33300:404:21;487:110:15;29832:33:20;;;1848:66:::1;29832:33:::0;;;;42943:19:21;;;;42978:12;;;42971:28;;;29832:33:20;;;;;;;;;43015:12:21;;;;29832:33:20;;;29822:44;;;;;9742:12:::1;::::0;9831:34:::1;::::0;;;;::::1;::::0;::::1;26387:25:21::0;;;26428:18;;;26421:34;;;9742:52:20;;-1:-1:-1;9805:23:20::1;::::0;-1:-1:-1;;;;;9831:9:20::1;:15;::::0;::::1;::::0;26360:18:21;;9831:34:20::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9945:26;::::0;;;;::::1;::::0;::::1;639:25:21::0;;;9805:60:20;;-1:-1:-1;9945:9:20::1;-1:-1:-1::0;;;;;9945:17:20::1;::::0;::::1;::::0;612:18:21;;9945:26:20::1;;;;;;;;;;;;;;;;;;-1:-1:-1::0;9945:26:20::1;::::0;;::::1;;::::0;;::::1;-1:-1:-1::0;;9945:26:20::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;;;9941:316;;10231:15:::0;-1:-1:-1;10224:22:20::1;::::0;-1:-1:-1;10224:22:20::1;9941:316;-1:-1:-1::0;;;;;10040:31:20;::::1;10066:4;10040:31;;::::0;:83:::1;;-1:-1:-1::0;10091:15:20::1;::::0;-1:-1:-1;;;10091:15:20;;::::1;::::0;::::1;639:25:21::0;;;10118:4:20::1;::::0;-1:-1:-1;;;;;10091:3:20::1;:9;::::0;::::1;::::0;612:18:21;;10091:15:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;10091:32:20::1;;;10040:83;10019:174;;;-1:-1:-1::0;10163:15:20;-1:-1:-1;10156:22:20::1;::::0;-1:-1:-1;10156:22:20::1;10019:174;9972:231;10300:13;10316:38;1791:7;10323:15:::0;10316:38:::1;:::i;:::-;10469:13;4083:16:16::0;;;:7;:16;;;;;;10300:54:20;;-1:-1:-1;4201:3:16;4196:8;;;10540:36:20::1;4083:16:16::0;;4196:8;10300:54:20;10540:8:::1;:36::i;:::-;-1:-1:-1::0;10594:15:20;;9587:1029;-1:-1:-1;;;;;;9587:1029:20:o;20215:824::-;20416:12;20395:10;5974:31;5988:4;5994:10;5974:13;:31::i;:::-;5969:100;;6028:30;;-1:-1:-1;;;6028:30:20;;;;;25117:25:21;;;6047:10:20;25158:18:21;;;25151:83;25090:18;;6028:30:20;24943:297:21;5969:100:20;20440:17:::1;20476:5;;20460:23;;;;;;;:::i;:::-;;;;;;;;20440:43;;20500:32;20510:10;20522:9;29832:33:::0;;;;;;;42943:19:21;;;;42978:12;;;42971:28;;;;29832:33:20;;;;;;;;;43015:12:21;;;;29832:33:20;;29822:44;;;;;;29694:179;20500:32:::1;20493:39;;20542:46;20571:10;20583:4;20542:28;:46::i;:::-;20598:35;20621:4;20627:5;20598:22;:35::i;:::-;20643:17;20663:35;20674:10;20686:4;20692:5;;20663:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;20663:10:20::1;::::0;-1:-1:-1;;;20663:35:20:i:1;:::-;20643:55;;20717:59;20744:10;20756:4;20762:5;20769:6;20717:26;:59::i;:::-;20708:68;;20792:15;20802:4;20792:9;:15::i;:::-;20787:246;;20823:57;::::0;;;;::::1;::::0;::::1;35223:25:21::0;;;35264:18;;;35257:34;;;20874:4:20::1;35307:18:21::0;;;35300:83;20823:3:20::1;-1:-1:-1::0;;;;;20823:19:20::1;::::0;::::1;::::0;35196:18:21;;20823:57:20::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;20894:39;20900:4;20906;20912:5;20919;20926:6;20894:5;:39::i;:::-;20787:246;;;20964:58;20976:10;20988:4;20994:5;;20964:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;21001:5:20;;-1:-1:-1;21008:5:20;;-1:-1:-1;21015:6:20;;-1:-1:-1;20964:11:20::1;:58::i;:::-;20430:609;;20215:824:::0;;;;;;;;;:::o;23040:761::-;23211:4;5974:31;5988:4;5994:10;5974:13;:31::i;:::-;5969:100;;6028:30;;-1:-1:-1;;;6028:30:20;;;;;25117:25:21;;;6047:10:20;25158:18:21;;;25151:83;25090:18;;6028:30:20;24943:297:21;5969:100:20;23255:4;23273:54;24817:12:::1;24835:22;23255:4:::0;24835:7:::1;:22::i;:::-;-1:-1:-1::0;24814:43:20;-1:-1:-1;;24871:21:20::1;:16:::0;;::::1;:21;::::0;24867:84:::1;;24915:25;::::0;-1:-1:-1;;;24915:25:20;;::::1;::::0;::::1;639::21::0;;;612:18;;24915:25:20::1;493:177:21::0;24867:84:20::1;23352:49:::2;::::0;;;;::::2;::::0;::::2;35812:25:21::0;;;23380:4:20::2;35914:18:21::0;;;35907:43;-1:-1:-1;;;;;35986:15:21;;;35966:18;;;35959:43;36050:18;36038:31;;36018:18;;;36011:59;23352:3:20::2;:13;::::0;::::2;::::0;35784:19:21;;23352:49:20::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;;;;;;;23415:19:20;::::2;::::0;-1:-1:-1;23411:384:20::2;;23453:12;23471:22;23487:4:::0;23471:7:::2;:22::i;:::-;-1:-1:-1::0;23450:43:20;-1:-1:-1;;;;608:7:18::2;23511:18:20::0;::::2;:32:::0;23507:105:::2;;23570:27;::::0;::::2;::::0;;-1:-1:-1;;;;;5296:55:21;;23570:27:20::2;::::0;::::2;5278:74:21::0;5251:18;;23570:27:20::2;5104:254:21::0;23507:105:20::2;23625:25;23633:4;23647:1;23625:7;:25::i;:::-;23436:225;23411:384;;;23681:16;23700:22;23716:4:::0;23700:7:::2;:22::i;:::-;23681:41;;23736:48;23746:8;23756:5;23771:4;23763:13;;23778:1;23736:48;;;;;;;;;;;::::0;:9:::2;:48::i;:::-;23667:128;24804:164:::1;6079:1;;23040:761:::0;;;;;:::o;13114:465::-;29832:33;;;;;;;42943:19:21;;;42978:12;;;42971:28;;;29832:33:20;;;;;;;;;43015:12:21;;;;29832:33:20;;;29822:44;;;;;5974:31;5988:4;5994:10;5974:13;:31::i;:::-;5969:100;;6028:30;;-1:-1:-1;;;6028:30:20;;;;;25117:25:21;;;6047:10:20;25158:18:21;;;25151:83;25090:18;;6028:30:20;24943:297:21;5969:100:20;13298:22;;;13294:80:::1;;13343:20;;;;;;;;;;;;;;13294:80;-1:-1:-1::0;;;;;13387:26:20;::::1;::::0;;:57:::1;;-1:-1:-1::0;;;;;;13417:27:20;::::1;13439:4;13417:27;13387:57;13383:127;;;13467:32;::::0;::::1;::::0;;-1:-1:-1;;;;;5296:55:21;;13467:32:20::1;::::0;::::1;5278:74:21::0;5251:18;;13467:32:20::1;5104:254:21::0;13383:127:20::1;29832:33:::0;;;;;;;42943:19:21;;;42978:12;;;42971:28;;;29832:33:20;;;;;;;;;43015:12:21;;;;29832:33:20;;;29822:44;;;;;13519:53:::1;::::0;13527:32:::1;29694:179:::0;271:174:15;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;354:23:15;::::1;;::::0;;;:11:::1;:23;::::0;;;;;;;;:32;;-1:-1:-1;;354:32:15::1;::::0;::::1;;::::0;;::::1;::::0;;;401:37;;1843:41:21;;;401:37:15::1;::::0;1816:18:21;401:37:15::1;;;;;;;;271:174:::0;;:::o;16124:614:20:-;16257:17;16293:5;;16277:23;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;16310:12:20;16325:30;1848:66;16277:23;29832:33;;;;;;;42943:19:21;;;;42978:12;;;42971:28;;;;29832:33:20;;;;;;;;;43015:12:21;;;;29832:33:20;;29822:44;;;;;;29694:179;16325:30;16310:45;;16366:20;16388:12;16402:13;16419:43;16448:4;16419:15;:43::i;:::-;16365:97;;;;;;16493:12;-1:-1:-1;;;;;16477:28:20;:12;-1:-1:-1;;;;;16477:28:20;;16473:106;;16521:47;16547:4;16554:5;16561:6;16521:17;:47::i;:::-;;16473:106;16589:15;;:142;;;;;-1:-1:-1;;;;;16589:15:20;;;;:26;;:142;;16629:5;;;;16648:12;;16674:5;;16693:6;;16713:8;;16589:142;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16247:491;;;;;16124:614;;;;:::o;10991:790::-;11123:17;11142:14;11160:17;11175:1;11160:4;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11160:14:20;;:17;-1:-1:-1;;11160:14:20;:17;-1:-1:-1;11160:17:20:i;:::-;11122:55;;;;11187:18;11208:21;11222:6;11208:4;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11208:13:20;;:21;-1:-1:-1;;11208:13:20;:21;-1:-1:-1;11208:21:20:i;:::-;29832:33;;;;;;;42943:19:21;;;42978:12;;;42971:28;;;29832:33:20;;;;;;;;;43015:12:21;;;;29832:33:20;;;29822:44;;;;;11187:42;;-1:-1:-1;11239:12:20;;11297:11;;;;:5;:11;;;;;11239:47;;-1:-1:-1;11297:18:20;11311:4;;11297:11;:18;:::i;:::-;-1:-1:-1;11330:22:20;;;11326:80;;11375:20;;;;;;;;;;;;;;11326:80;11432:15;;-1:-1:-1;;;11432:15:20;;;;;639:25:21;;;11416:13:20;;11432:3;-1:-1:-1;;;;;11432:9:20;;;;612:18:21;;11432:15:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11416:31;-1:-1:-1;;;;;;11462:19:20;;11471:10;11462:19;;;;:63;;-1:-1:-1;11486:39:20;;;;;-1:-1:-1;;;;;32811:15:21;;;11486:39:20;;;32793:34:21;11514:10:20;32843:18:21;;;32836:43;11486:3:20;:20;;;;32705:18:21;;11486:39:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11485:40;11462:63;11458:131;;;11548:30;;-1:-1:-1;;;11548:30:20;;;;;25117:25:21;;;11567:10:20;25158:18:21;;;25151:83;25090:18;;11548:30:20;24943:297:21;11458:131:20;-1:-1:-1;;;;;11603:22:20;;;11599:84;;11641:31;;;;;;;;25117:25:21;;;-1:-1:-1;;;;;25178:55:21;;;25158:18;;;25151:83;11641:3:20;:15;;;;25090:18:21;;11641:31:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11599:84;11693:33;;;;;;;;25117:25:21;;;11720:4:20;25158:18:21;;;25151:83;11693:3:20;-1:-1:-1;;;;;11693:12:20;;;;25090:18:21;;11693:33:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11737:37;11743:4;11749;;11737:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11755:12:20;;-1:-1:-1;11737:37:20;-1:-1:-1;11737:37:20;;-1:-1:-1;11737:5:20;:37::i;17264:683::-;17419:17;17455:5;;17439:23;;;;;;;:::i;:::-;;;;;;;;17419:43;;17472:12;17487:32;17497:10;17509:9;29832:33;;;;;;;42943:19:21;;;;42978:12;;;42971:28;;;;29832:33:20;;;;;;;;;43015:12:21;;;;29832:33:20;;29822:44;;;;;;29694:179;17487:32;17472:47;;17530:20;17552:12;17566:13;17583:43;17612:4;17583:15;:43::i;:::-;17529:97;;;;;;17657:12;-1:-1:-1;;;;;17641:28:20;:12;-1:-1:-1;;;;;17641:28:20;;17637:106;;17685:47;17711:4;17718:5;17725:6;17685:17;:47::i;:::-;;17637:106;17753:15;;:187;;;;;-1:-1:-1;;;;;17753:15:20;;;;:32;;:187;;17799:10;;17823:5;;;;17842:12;;17868:8;;17753:15;;17905:5;;17924:6;;17753:187;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17409:538;;;;;17264:683;;;;;:::o;4279:454:16:-;-1:-1:-1;;;;;4466:16:16;;4458:66;;;;-1:-1:-1;;;4458:66:16;;28391:2:21;4458:66:16;;;28373:21:21;28430:2;28410:18;;;28403:30;28469:34;28449:18;;;28442:62;28540:7;28520:18;;;28513:35;28565:19;;4458:66:16;28189:401:21;4458:66:16;-1:-1:-1;;;;;4555:18:16;;4563:10;4555:18;;:56;;-1:-1:-1;;;;;;3751:27:16;;3724:4;3751:27;;;:18;:27;;;;;;;;4600:10;3751:37;;;;;;;;;;4577:34;4534:144;;;;-1:-1:-1;;;4534:144:16;;40338:2:21;4534:144:16;;;40320:21:21;40377:2;40357:18;;;40350:30;40416:34;40396:18;;;40389:62;40487:11;40467:18;;;40460:39;40516:19;;4534:144:16;40136:405:21;4534:144:16;4689:37;4699:4;4705:2;4709;4713:6;4721:4;4689:9;:37::i;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;40748:2:21;2161:73:0::1;::::0;::::1;40730:21:21::0;40787:2;40767:18;;;40760:30;40826:34;40806:18;;;40799:62;40897:8;40877:18;;;40870:36;40923:19;;2161:73:0::1;40546:402:21::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;27284:180:20:-:0;27338:4;;27373:22;27389:4;27373:7;:22::i;:::-;-1:-1:-1;;;;;27373:36:20;;;:84;;;;-1:-1:-1;27425:15:20;;-1:-1:-1;;;27425:15:20;;;;;639:25:21;;;27452:4:20;;-1:-1:-1;;;;;27425:3:20;:9;;;;612:18:21;;27425:15:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;27425:32:20;;27354:103;27284:180;-1:-1:-1;;27284:180:20:o;29300:388::-;29435:7;29444:6;29475:15;29466:6;:24;;;29462:188;;;29510:54;570:7:18;29510:29:20;;:54;29506:111;;29600:1;29584:18;;29506:111;29638:1;29630:9;;29462:188;-1:-1:-1;29668:5:20;;29675;;-1:-1:-1;;29300:388:20:o;1512:349:16:-;1654:4;-1:-1:-1;;;;;;1693:41:16;;1708:26;1693:41;;:109;;-1:-1:-1;;;;;;;1750:52:16;;1765:37;1750:52;1693:109;:161;;;-1:-1:-1;952:25:9;-1:-1:-1;;;;;;937:40:9;;;1818:36:16;829:155:9;34176:796:20;34363:23;;;;;;34343:17;34411:30;1848:66;34363:23;29832:33;;;;;;;42943:19:21;;;;42978:12;;;42971:28;;;;29832:33:20;;;;;;;;;43015:12:21;;;;29832:33:20;;29822:44;;;;;;29694:179;34411:30;34396:45;;34510:17;34530:31;34540:5;34530:31;;;;;;;;;;;;;;;;;:9;:31::i;:::-;34571:11;;;;:5;:11;;;;;34510:51;;-1:-1:-1;34571:18:20;34510:51;34571:11;:18;:::i;:::-;-1:-1:-1;34623:41:20;;;;;;;;639:25:21;;;34600:13:20;;1791:7;;34623:9;-1:-1:-1;;;;;34623:21:20;;;;612:18:21;;34623:41:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34616:76;;;;:::i;:::-;34600:92;-1:-1:-1;34703:168:20;34722:4;34740;34758:12;34784:57;:44;;;:57;34600:92;34703:5;:168::i;:::-;-1:-1:-1;;;;;34886:22:20;;;34882:84;;34924:31;;;;;;;;25117:25:21;;;-1:-1:-1;;;;;25178:55:21;;;25158:18;;;25151:83;34924:3:20;:15;;;;25090:18:21;;34924:31:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34333:639;;;;34176:796;;;;:::o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:8;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;42627:2:21;1414:68:0;;;42609:21:21;;;42646:18;;;42639:30;42705:34;42685:18;;;42678:62;42757:18;;1414:68:0;42425:356:21;25519:1270:20;25652:20;;;25752:25;25768:7;25752;:25::i;:::-;25638:139;;-1:-1:-1;25638:139:20;-1:-1:-1;25638:139:20;-1:-1:-1;26004:15:20;25988:31;;;;;26046:372;;;;-1:-1:-1;;;;;;26209:26:20;;;;:208;;-1:-1:-1;26385:18:20;;-1:-1:-1;;;26385:18:20;;;;;639:25:21;;;26415:1:20;;-1:-1:-1;;;;;26385:3:20;:9;;;;612:18:21;;26385::20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26385:32:20;;26209:208;26029:754;;;26446:18;26470:28;26486:10;26470:7;:28::i;:::-;-1:-1:-1;26443:55:20;-1:-1:-1;;458:2:18;26516:37:20;;:42;26512:116;;26585:28;;-1:-1:-1;;;26585:28:20;;;;;639:25:21;;;612:18;;26585:28:20;493:177:21;26512:116:20;26429:209;26029:754;;;570:7:18;26662:36:20;;:41;26658:115;;26730:28;;-1:-1:-1;;;26730:28:20;;;;;639:25:21;;;612:18;;26730:28:20;493:177:21;26658:115:20;25628:1161;;;;25519:1270;;:::o;36287:269::-;828:10:18;36375:27:20;;;:50;;;36371:179;;36514:25;;-1:-1:-1;;;36514:25:20;;;;;639::21;;;612:18;;36514:25:20;493:177:21;36371:179:20;36287:269;;:::o;31350:258::-;31473:12;31497:17;31517:35;31527:5;31534;:17;31540:10;31534:17;;;;;;;;;;;31517:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:35::i;:::-;31562:11;;;;:5;:11;;;;;31497:55;;-1:-1:-1;31562:18:20;31497:55;31562:11;:18;:::i;:::-;-1:-1:-1;31597:4:20;31350:258;-1:-1:-1;;;;31350:258:20:o;32819:429::-;32979:6;;33022:22;33038:4;33022:7;:22::i;:::-;32997:47;;;;33057:18;33077:16;33097:28;33113:10;33105:19;;33097:7;:28::i;:::-;33054:71;;;;;33135:43;33153:4;33159:5;33166:11;33135:17;:43::i;:::-;33195:46;33212:6;33220:9;33231;33195:16;:46::i;:::-;33188:53;32819:429;-1:-1:-1;;;;;;;;32819:429:20:o;31034:310::-;31233:17;31270;;;:5;:17;;;;;31253:35;;;;31263:5;;31253:35;;;:::i;:::-;31233:55;;31298:39;31304:4;31310;31316:5;31323;31330:6;31298:5;:39::i;32092:681::-;32286:16;;;32341:44;32370:4;32341:7;:44::i;:::-;32285:100;;;;;;32395:17;32415:35;32425:5;32432;:17;32438:10;32432:17;;;;;;;;;;;32415:35;;;;;:::i;:::-;32464:11;;;;:5;:11;;;;;:18;;32395:55;;-1:-1:-1;32464:11:20;:18;;;:::i;:::-;;;32486:1;32464:23;32460:72;;32503:11;;;;:5;:11;;;;;:18;32517:4;32503:11;:18;:::i;:::-;;32460:72;32541:62;32551:4;32557:8;32578:5;32567:8;:16;32585:9;32596:6;32541:9;:62::i;:::-;-1:-1:-1;;;;;32617:19:20;;32613:154;;32652:25;32660:4;32674:1;32652:7;:25::i;:::-;32613:154;;;32708:48;32718:8;32728:5;32743:4;32735:13;;32750:1;32708:48;;;;;;;;;;;;:9;:48::i;28524:770::-;28654:4;-1:-1:-1;;608:7:18;28763:18:20;;:32;28759:85;;28811:22;1791:7;28811:22;;:::i;:::-;;;28759:85;28867:15;28858:6;:24;;;28854:434;;;570:7:18;28962:29:20;;:34;28958:125;;29016:52;;-1:-1:-1;;;29016:52:20;;29405:2:21;29016:52:20;;;29387:21:21;29444:2;29424:18;;;29417:30;29483:34;29463:18;;;29456:62;29554:12;29534:18;;;29527:40;29584:19;;29016:52:20;29203:406:21;28958:125:20;28854:434;;;335:1:18;29176:23:20;;:28;29172:106;;29231:32;;-1:-1:-1;;;29231:32:20;;;;;639:25:21;;;612:18;;29231:32:20;493:177:21;10043:970:16;-1:-1:-1;;;;;10275:13:16;;1465:19:7;:23;10271:736:16;;10326:197;;;;;-1:-1:-1;;;;;10326:43:16;;;;;:197;;10391:8;;10421:4;;10447:3;;10472:7;;10501:4;;10326:197;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10326:197:16;;;;;;;;-1:-1:-1;;10326:197:16;;;;;;;;;;;;:::i;:::-;;;10306:691;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;10873:6;10866:14;;-1:-1:-1;;;10866:14:16;;;;;;;;:::i;10306:691::-;;;10920:62;;-1:-1:-1;;;10920:62:16;;45269:2:21;10920:62:16;;;45251:21:21;45308:2;45288:18;;;45281:30;45347:34;45327:18;;;45320:62;45418:22;45398:18;;;45391:50;45458:19;;10920:62:16;45067:416:21;10306:691:16;-1:-1:-1;;;;;;10605:84:16;;10637:52;10605:84;10580:219;;10730:50;;-1:-1:-1;;;10730:50:16;;45690:2:21;10730:50:16;;;45672:21:21;45729:2;45709:18;;;45702:30;45768:34;45748:18;;;45741:62;45839:10;45819:18;;;45812:38;45867:19;;10730:50:16;45488:404:21;33254:420:20;743:10:18;33421:31:20;;:48;;;;259:1:18;33508:27:20;;:32;;33421:48;;33555:54;;;33589:20;33555:54;33551:117;;;33632:25;;-1:-1:-1;;;33632:25:20;;;;;639::21;;;612:18;;33632:25:20;493:177:21;33680:490:20;33810:6;33961:9;33952:18;;:6;:18;;;33948:67;;;33995:9;33986:18;;33948:67;34086:9;34077:18;;:6;:18;;;34073:67;;;34120:9;34111:18;;34073:67;-1:-1:-1;34157:6:20;;33680:490;-1:-1:-1;;33680:490:20:o;35296:330::-;35456:36;35465:4;35471:5;35478;35485:6;35456:8;:36::i;:::-;35507:21;;11763:10:21;11751:23;;11733:42;;35516:4:20;;35507:21;;11721:2:21;11706:18;35507:21:20;;;;;;;35551:9;35542:18;;:6;:18;;;35538:82;;;35581:28;;15221:18:21;15209:31;;15191:50;;35596:4:20;;35581:28;;15179:2:21;15164:18;35581:28:20;;;;;;;;35296:330;;;;;:::o;1306:139:16:-;1364:7;1384:13;1405:11;1413:2;1405:7;:11::i;:::-;-1:-1:-1;1383:33:16;;1306:139;-1:-1:-1;;;;1306:139:16:o;35632:231:20:-;35765:30;35783:4;35789:5;35765:17;:30::i;:::-;6471:16:16;;;;:7;:16;;;;;-1:-1:-1;;;;;6502:23:16;;-1:-1:-1;;;6559:3:16;6541:21;;;;6502:61;6579:22;6598:3;6579:22;;;;6502:100;6471:131;;35805:51:20;6327:282:16;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;;;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;34978:312:20:-;35046:35;35061:4;259:1:18;35046:14:20;:35::i;:::-;35042:98;;;35104:25;;-1:-1:-1;;;35104:25:20;;;;;639::21;;;612:18;;35104:25:20;493:177:21;35042:98:20;35186:20;35200:4;35186:5;:20::i;:::-;35216:25;;;;;;;;25117::21;;;-1:-1:-1;;;;;25178:55:21;;;25158:18;;;25151:83;35216:3:20;:12;;;;25090:18:21;;35216:25:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;35257:26:20;;-1:-1:-1;;;;;5296:55:21;;5278:74;;35271:4:20;;-1:-1:-1;35257:26:20;;-1:-1:-1;5266:2:21;5251:18;35257:26:20;5104:254:21;30750:278:20;30914:40;30920:4;30926:12;30940:5;30947:6;30914:5;:40::i;:::-;30981:4;30969:52;30987:4;30993:12;31007:5;31014:6;30969:52;;;;;;;;;:::i;8467:651:16:-;8625:16;8643:12;8657:13;8674:11;8682:2;8674:7;:11::i;:::-;8624:61;;;;;;8696:36;8714:2;8718:5;8725:6;8696:17;:36::i;:::-;;8764:6;8774:1;8764:11;:31;;;;;8791:4;-1:-1:-1;;;;;8779:16:16;:8;-1:-1:-1;;;;;8779:16:16;;8764:31;8743:120;;;;-1:-1:-1;;;8743:120:16;;29405:2:21;8743:120:16;;;29387:21:21;29444:2;29424:18;;;29417:30;29483:34;29463:18;;;29456:62;29554:12;29534:18;;;29527:40;29584:19;;8743:120:16;29203:406:21;8743:120:16;8890:2;-1:-1:-1;;;;;8878:14:16;:8;-1:-1:-1;;;;;8878:14:16;;8874:51;;8908:7;;;;;8874:51;6471:16;;;;:7;:16;;;;;-1:-1:-1;;;;;6502:23:16;;-1:-1:-1;;;6559:3:16;6541:21;;;;6502:61;6579:22;6598:3;6579:22;;;;6502:100;6471:131;;8982:48;;;26387:25:21;;;26443:2;26428:18;;26421:34;;;-1:-1:-1;;;;;8982:48:16;;;;;;;;8997:10;;8982:48;;26360:18:21;8982:48:16;;;;;;;9041:70;9072:10;9084:4;9090:2;9094;9098:6;9106:4;9041:30;:70::i;31614:472:20:-;31802:15;;31699:13;;;;;;-1:-1:-1;;;;;31802:15:20;31790:91;;31855:15;;;;;;;;;;;;;;31790:91;31896:31;31910:4;31916:10;31896:13;:31::i;:::-;31891:100;;31950:30;;-1:-1:-1;;;31950:30:20;;;;;25117:25:21;;;31969:10:20;25158:18:21;;;25151:83;25090:18;;31950:30:20;24943:297:21;31891:100:20;32026:22;32042:4;32026:7;:22::i;:::-;32001:47;;-1:-1:-1;32001:47:20;-1:-1:-1;32001:47:20;-1:-1:-1;32059:20:20;32073:4;32059:5;:20::i;:::-;31614:472;;;;;:::o;1700:433:14:-;1798:17;1817:14;1861:4;:11;1855:3;:17;1847:60;;;;-1:-1:-1;;;1847:60:14;;46624:2:21;1847:60:14;;;46606:21:21;46663:2;46643:18;;;46636:30;46702:32;46682:18;;;46675:60;46752:18;;1847:60:14;46422:354:21;1847:60:14;1917:11;1945:4;1950:3;1945:9;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;1970:7:14;;1966:129;;2005:26;2012:4;2018:7;:3;2024:1;2018:7;:::i;:::-;2027:3;2005:6;:26::i;:::-;1993:38;;1966:129;;;2082:1;;-1:-1:-1;1966:129:14;2113:9;2119:3;2113;:9;:::i;:::-;:13;;2125:1;2113:13;:::i;:::-;2104:22;;1837:296;1700:433;;;;;:::o;848:449::-;948:7;972:17;991;1012:23;1022:4;1028:6;1012:9;:23::i;:::-;971:64;;-1:-1:-1;971:64:14;-1:-1:-1;971:64:14;1045:152;;1120:1;1106:4;:11;:15;;;;:::i;:::-;1096:6;:25;1088:67;;;;-1:-1:-1;;;1088:67:14;;47246:2:21;1088:67:14;;;47228:21:21;47285:2;47265:18;;;47258:30;47324:31;47304:18;;;47297:59;47373:18;;1088:67:14;47044:353:21;1088:67:14;-1:-1:-1;1184:1:14;;-1:-1:-1;1169:17:14;;-1:-1:-1;1169:17:14;1045:152;1252:25;1261:4;1267:9;1252:8;:25::i;:::-;1235:54;;;;;;42943:19:21;;;;42978:12;;42971:28;;;43015:12;;1235:54:14;;;;;;;;;;;;1225:65;;;;;;1206:84;;;;848:449;;;;:::o;29879:385:20:-;29985:16;30043:1;30027:5;30021:19;:23;30017:76;;;30067:15;;;;;;;;;;;;;;30017:76;30128:3;30112:5;30106:19;:25;30102:82;;;30167:5;30154:19;;;;;;;;;;;:::i;30102:82::-;30229:5;30223:19;30245:5;30252:4;30200:57;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;30193:64;;29879:385;;;;:::o;35869:412::-;36052:37;;;;;;;:155;;-1:-1:-1;36169:37:20;36105:47;;;:102;;36052:155;36035:240;;;36239:25;;-1:-1:-1;;;36239:25:20;;;;;639::21;;;612:18;;36239:25:20;493:177:21;8051:410:16;8111:16;4083;;;:7;:16;;;;;;4201:3;4196:8;;;4167:3;4162:8;;;8232:44;4083:16;4196:8;4162;8232:19;:44::i;:::-;8357:3;6471:16;;;:7;:16;;;;;-1:-1:-1;;;6559:3:16;6541:21;;;;6579:22;6598:3;6579:22;;;;6502:100;6471:131;;8220:56;-1:-1:-1;8331:46:16;;-1:-1:-1;6327:282:16;8331:46;8392:62;;;26387:25:21;;;8452:1:16;26443:2:21;26428:18;;26421:34;8437:3:16;;-1:-1:-1;;;;;8392:62:16;;;8407:10;;8392:62;;26360:18:21;8392:62:16;;;;;;;8100:361;;;8051:410;:::o;30270:474:20:-;30409:30;30427:4;30433:5;30409:17;:30::i;:::-;30450:16;4083::16;;;:7;:16;;;;;;-1:-1:-1;;;;;30516:22:20;;;30512:177;;30608:20;30622:4;30608:5;:20::i;:::-;30647:31;;30675:1;5278:74:21;;30661:4:20;;30647:31;;5266:2:21;5251:18;30647:31:20;;;;;;;30512:177;30698:39;30710:4;30716:5;30723;30730:6;30698:11;:39::i;9124:913:16:-;-1:-1:-1;;;;;9331:13:16;;1465:19:7;:23;9327:704:16;;9382:190;;;;;-1:-1:-1;;;;;9382:38:16;;;;;:190;;9442:8;;9472:4;;9498:2;;9522:6;;9550:4;;9382:190;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9382:190:16;;;;;;;;-1:-1:-1;;9382:190:16;;;;;;;;;;;;:::i;:::-;;;9362:659;;;;:::i;:::-;-1:-1:-1;;;;;;9654:59:16;;9666:47;9654:59;9629:194;;9754:50;;-1:-1:-1;;;9754:50:16;;45690:2:21;9754:50:16;;;45672:21:21;45729:2;45709:18;;;45702:30;45768:34;45748:18;;;45741:62;45839:10;45819:18;;;45812:38;45867:19;;9754:50:16;45488:404:21;343:274:14;507:11;;460;;491:12;500:3;491:6;:12;:::i;:::-;:27;;483:36;;;;;;-1:-1:-1;569:26:14;;583:2;569:26;559:42;;343:274::o;6903:1142:16:-;7067:4;7041:15;;;7138:44;7067:4;7138:7;:44::i;:::-;7082:100;;-1:-1:-1;7082:100:16;-1:-1:-1;7082:100:16;-1:-1:-1;7225:30:16;7224:55;;7294:18;;;;;;;;7290:67;;;7337:9;7328:18;;7290:67;7384:15;7371:9;:28;;;7367:96;;7423:29;;;;7367:96;-1:-1:-1;;;;;7481:22:16;;;7473:66;;;;-1:-1:-1;;;7473:66:16;;49103:2:21;7473:66:16;;;49085:21:21;49142:2;49122:18;;;49115:30;49181:33;49161:18;;;49154:61;49232:18;;7473:66:16;48901:355:21;7473:66:16;-1:-1:-1;;;;;7557:19:16;;7549:65;;;;-1:-1:-1;;;7549:65:16;;49463:2:21;7549:65:16;;;49445:21:21;49502:2;49482:18;;;49475:30;49541:34;49521:18;;;49514:62;49612:3;49592:18;;;49585:31;49633:19;;7549:65:16;49261:397:21;7549:65:16;7662:4;-1:-1:-1;;;;;7645:22:16;;;7624:121;;;;-1:-1:-1;;;7624:121:16;;49865:2:21;7624:121:16;;;49847:21:21;49904:2;49884:18;;;49877:30;49943:34;49923:18;;;49916:62;50014:22;49994:18;;;49987:50;50054:19;;7624:121:16;49663:416:21;7624:121:16;6471:16;;;;:7;:16;;;;;-1:-1:-1;;;;;6502:23:16;;-1:-1:-1;;;6559:3:16;6541:21;;;;6502:61;6579:22;6598:3;6579:22;;;;6502:100;6471:131;;7810:59;;;26387:25:21;;;7867:1:16;26443:2:21;26428:18;;26421:34;-1:-1:-1;;;;;7810:59:16;;;7845:3;;7825:10;;7810:59;;26360:18:21;7810:59:16;;;;;;;7879:159;7923:10;7955:1;7971:5;7990:7;8011:1;7879:159;;;;;;;;;;;;:30;:159::i;14:154:21:-;-1:-1:-1;;;;;93:5:21;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:315;241:6;249;302:2;290:9;281:7;277:23;273:32;270:52;;;318:1;315;308:12;270:52;357:9;344:23;376:31;401:5;376:31;:::i;:::-;426:5;478:2;463:18;;;;450:32;;-1:-1:-1;;;173:315:21:o;675:180::-;734:6;787:2;775:9;766:7;762:23;758:32;755:52;;;803:1;800;793:12;755:52;-1:-1:-1;826:23:21;;675:180;-1:-1:-1;675:180:21:o;1271:177::-;-1:-1:-1;;;;;;1349:5:21;1345:78;1338:5;1335:89;1325:117;;1438:1;1435;1428:12;1453:245;1511:6;1564:2;1552:9;1543:7;1539:23;1535:32;1532:52;;;1580:1;1577;1570:12;1532:52;1619:9;1606:23;1638:30;1662:5;1638:30;:::i;1895:250::-;1980:1;1990:113;2004:6;2001:1;1998:13;1990:113;;;2080:11;;;2074:18;2061:11;;;2054:39;2026:2;2019:10;1990:113;;;-1:-1:-1;;2137:1:21;2119:16;;2112:27;1895:250::o;2150:330::-;2192:3;2230:5;2224:12;2257:6;2252:3;2245:19;2273:76;2342:6;2335:4;2330:3;2326:14;2319:4;2312:5;2308:16;2273:76;:::i;:::-;2394:2;2382:15;-1:-1:-1;;2378:88:21;2369:98;;;;2469:4;2365:109;;2150:330;-1:-1:-1;;2150:330:21:o;2485:220::-;2634:2;2623:9;2616:21;2597:4;2654:45;2695:2;2684:9;2680:18;2672:6;2654:45;:::i;2710:171::-;2777:20;;2837:18;2826:30;;2816:41;;2806:69;;2871:1;2868;2861:12;2806:69;2710:171;;;:::o;2886:252::-;2953:6;2961;3014:2;3002:9;2993:7;2989:23;2985:32;2982:52;;;3030:1;3027;3020:12;2982:52;3066:9;3053:23;3043:33;;3095:37;3128:2;3117:9;3113:18;3095:37;:::i;:::-;3085:47;;2886:252;;;;;:::o;3143:347::-;3194:8;3204:6;3258:3;3251:4;3243:6;3239:17;3235:27;3225:55;;3276:1;3273;3266:12;3225:55;-1:-1:-1;3299:20:21;;3342:18;3331:30;;3328:50;;;3374:1;3371;3364:12;3328:50;3411:4;3403:6;3399:17;3387:29;;3463:3;3456:4;3447:6;3439;3435:19;3431:30;3428:39;3425:59;;;3480:1;3477;3470:12;3425:59;3143:347;;;;;:::o;3495:754::-;3592:6;3600;3608;3616;3624;3677:3;3665:9;3656:7;3652:23;3648:33;3645:53;;;3694:1;3691;3684:12;3645:53;3733:9;3720:23;3752:31;3777:5;3752:31;:::i;:::-;3802:5;-1:-1:-1;3859:2:21;3844:18;;3831:32;3872:33;3831:32;3872:33;:::i;:::-;3924:7;-1:-1:-1;3978:2:21;3963:18;;3950:32;;-1:-1:-1;4033:2:21;4018:18;;4005:32;4060:18;4049:30;;4046:50;;;4092:1;4089;4082:12;4046:50;4131:58;4181:7;4172:6;4161:9;4157:22;4131:58;:::i;:::-;3495:754;;;;-1:-1:-1;3495:754:21;;-1:-1:-1;4208:8:21;;4105:84;3495:754;-1:-1:-1;;;3495:754:21:o;4507:272::-;4591:6;4644:2;4632:9;4623:7;4619:23;4615:32;4612:52;;;4660:1;4657;4650:12;4612:52;4699:9;4686:23;4718:31;4743:5;4718:31;:::i;4784:315::-;4852:6;4860;4913:2;4901:9;4892:7;4888:23;4884:32;4881:52;;;4929:1;4926;4919:12;4881:52;4965:9;4952:23;4942:33;;5025:2;5014:9;5010:18;4997:32;5038:31;5063:5;5038:31;:::i;:::-;5088:5;5078:15;;;4784:315;;;;;:::o;5771:184::-;-1:-1:-1;;;5820:1:21;5813:88;5920:4;5917:1;5910:15;5944:4;5941:1;5934:15;5960:308;-1:-1:-1;;6061:2:21;6055:4;6051:13;6047:86;6039:6;6035:99;6200:6;6188:10;6185:22;6164:18;6152:10;6149:34;6146:62;6143:88;;;6211:18;;:::i;:::-;6247:2;6240:22;-1:-1:-1;;5960:308:21:o;6273:246::-;6322:4;6355:18;6347:6;6344:30;6341:56;;;6377:18;;:::i;:::-;-1:-1:-1;6434:2:21;6422:15;-1:-1:-1;;6418:88:21;6508:4;6414:99;;6273:246::o;6524:510::-;6567:5;6620:3;6613:4;6605:6;6601:17;6597:27;6587:55;;6638:1;6635;6628:12;6587:55;6674:6;6661:20;6700:32;6729:2;6700:32;:::i;:::-;6761:2;6755:9;6773:31;6801:2;6793:6;6773:31;:::i;:::-;6828:2;6820:6;6813:18;6874:3;6867:4;6862:2;6854:6;6850:15;6846:26;6843:35;6840:55;;;6891:1;6888;6881:12;6840:55;6955:2;6948:4;6940:6;6936:17;6929:4;6921:6;6917:17;6904:54;7002:1;6978:15;;;6995:4;6974:26;6967:37;;;;-1:-1:-1;6982:6:21;6524:510;-1:-1:-1;;;6524:510:21:o;7039:163::-;7106:20;;7166:10;7155:22;;7145:33;;7135:61;;7192:1;7189;7182:12;7207:886;7327:6;7335;7343;7351;7359;7367;7375;7428:3;7416:9;7407:7;7403:23;7399:33;7396:53;;;7445:1;7442;7435:12;7396:53;7481:9;7468:23;7458:33;;7542:2;7531:9;7527:18;7514:32;7569:18;7561:6;7558:30;7555:50;;;7601:1;7598;7591:12;7555:50;7624;7666:7;7657:6;7646:9;7642:22;7624:50;:::i;:::-;7614:60;;;7724:2;7713:9;7709:18;7696:32;7737:31;7762:5;7737:31;:::i;:::-;7787:5;-1:-1:-1;7844:2:21;7829:18;;7816:32;7857:33;7816:32;7857:33;:::i;:::-;7909:7;-1:-1:-1;7935:38:21;7968:3;7953:19;;7935:38;:::i;:::-;7925:48;;7992:38;8025:3;8014:9;8010:19;7992:38;:::i;:::-;7982:48;;8049:38;8082:3;8071:9;8067:19;8049:38;:::i;:::-;8039:48;;7207:886;;;;;;;;;;:::o;8533:183::-;8593:4;8626:18;8618:6;8615:30;8612:56;;;8648:18;;:::i;:::-;-1:-1:-1;8693:1:21;8689:14;8705:4;8685:25;;8533:183::o;8721:724::-;8775:5;8828:3;8821:4;8813:6;8809:17;8805:27;8795:55;;8846:1;8843;8836:12;8795:55;8882:6;8869:20;8908:4;8931:43;8971:2;8931:43;:::i;:::-;9003:2;8997:9;9015:31;9043:2;9035:6;9015:31;:::i;:::-;9081:18;;;9173:1;9169:10;;;;9157:23;;9153:32;;;9115:15;;;;-1:-1:-1;9197:15:21;;;9194:35;;;9225:1;9222;9215:12;9194:35;9261:2;9253:6;9249:15;9273:142;9289:6;9284:3;9281:15;9273:142;;;9355:17;;9343:30;;9393:12;;;;9306;;9273:142;;9450:1072;9604:6;9612;9620;9628;9636;9689:3;9677:9;9668:7;9664:23;9660:33;9657:53;;;9706:1;9703;9696:12;9657:53;9745:9;9732:23;9764:31;9789:5;9764:31;:::i;:::-;9814:5;-1:-1:-1;9871:2:21;9856:18;;9843:32;9884:33;9843:32;9884:33;:::i;:::-;9936:7;-1:-1:-1;9994:2:21;9979:18;;9966:32;10017:18;10047:14;;;10044:34;;;10074:1;10071;10064:12;10044:34;10097:61;10150:7;10141:6;10130:9;10126:22;10097:61;:::i;:::-;10087:71;;10211:2;10200:9;10196:18;10183:32;10167:48;;10240:2;10230:8;10227:16;10224:36;;;10256:1;10253;10246:12;10224:36;10279:63;10334:7;10323:8;10312:9;10308:24;10279:63;:::i;:::-;10269:73;;10395:3;10384:9;10380:19;10367:33;10351:49;;10425:2;10415:8;10412:16;10409:36;;;10441:1;10438;10431:12;10409:36;;10464:52;10508:7;10497:8;10486:9;10482:24;10464:52;:::i;:::-;10454:62;;;9450:1072;;;;;;;;:::o;10527:393::-;10611:6;10619;10627;10635;10688:3;10676:9;10667:7;10663:23;10659:33;10656:53;;;10705:1;10702;10695:12;10656:53;10741:9;10728:23;10718:33;;10798:2;10787:9;10783:18;10770:32;10760:42;;10821:37;10854:2;10843:9;10839:18;10821:37;:::i;:::-;10811:47;;10877:37;10910:2;10899:9;10895:18;10877:37;:::i;:::-;10867:47;;10527:393;;;;;;;:::o;11168:159::-;11235:20;;11295:6;11284:18;;11274:29;;11264:57;;11317:1;11314;11307:12;11332:252;11399:6;11407;11460:2;11448:9;11439:7;11435:23;11431:32;11428:52;;;11476:1;11473;11466:12;11428:52;11512:9;11499:23;11489:33;;11541:37;11574:2;11563:9;11559:18;11541:37;:::i;11786:1277::-;11904:6;11912;11965:2;11953:9;11944:7;11940:23;11936:32;11933:52;;;11981:1;11978;11971:12;11933:52;12021:9;12008:23;12050:18;12091:2;12083:6;12080:14;12077:34;;;12107:1;12104;12097:12;12077:34;12145:6;12134:9;12130:22;12120:32;;12190:7;12183:4;12179:2;12175:13;12171:27;12161:55;;12212:1;12209;12202:12;12161:55;12248:2;12235:16;12270:4;12293:43;12333:2;12293:43;:::i;:::-;12365:2;12359:9;12377:31;12405:2;12397:6;12377:31;:::i;:::-;12443:18;;;12531:1;12527:10;;;;12519:19;;12515:28;;;12477:15;;;;-1:-1:-1;12555:19:21;;;12552:39;;;12587:1;12584;12577:12;12552:39;12611:11;;;;12631:217;12647:6;12642:3;12639:15;12631:217;;;12727:3;12714:17;12744:31;12769:5;12744:31;:::i;:::-;12788:18;;12664:12;;;;12826;;;;12631:217;;;12867:6;-1:-1:-1;;12911:18:21;;12898:32;;-1:-1:-1;;12942:16:21;;;12939:36;;;12971:1;12968;12961:12;12939:36;;12994:63;13049:7;13038:8;13027:9;13023:24;12994:63;:::i;13068:435::-;13121:3;13159:5;13153:12;13186:6;13181:3;13174:19;13212:4;13241:2;13236:3;13232:12;13225:19;;13278:2;13271:5;13267:14;13299:1;13309:169;13323:6;13320:1;13317:13;13309:169;;;13384:13;;13372:26;;13418:12;;;;13453:15;;;;13345:1;13338:9;13309:169;;;-1:-1:-1;13494:3:21;;13068:435;-1:-1:-1;;;;;13068:435:21:o;13508:261::-;13687:2;13676:9;13669:21;13650:4;13707:56;13759:2;13748:9;13744:18;13736:6;13707:56;:::i;14030:456::-;14107:6;14115;14123;14176:2;14164:9;14155:7;14151:23;14147:32;14144:52;;;14192:1;14189;14182:12;14144:52;14231:9;14218:23;14250:31;14275:5;14250:31;:::i;:::-;14300:5;-1:-1:-1;14357:2:21;14342:18;;14329:32;14370:33;14329:32;14370:33;:::i;:::-;14030:456;;14422:7;;-1:-1:-1;;;14476:2:21;14461:18;;;;14448:32;;14030:456::o;14722:320::-;14798:6;14806;14814;14867:2;14855:9;14846:7;14842:23;14838:32;14835:52;;;14883:1;14880;14873:12;14835:52;14919:9;14906:23;14896:33;;14976:2;14965:9;14961:18;14948:32;14938:42;;14999:37;15032:2;15021:9;15017:18;14999:37;:::i;:::-;14989:47;;14722:320;;;;;:::o;15252:456::-;15329:6;15337;15345;15398:2;15386:9;15377:7;15373:23;15369:32;15366:52;;;15414:1;15411;15404:12;15366:52;15450:9;15437:23;15427:33;;15510:2;15499:9;15495:18;15482:32;15523:31;15548:5;15523:31;:::i;:::-;15573:5;-1:-1:-1;15630:2:21;15615:18;;15602:32;15643:33;15602:32;15643:33;:::i;:::-;15695:7;15685:17;;;15252:456;;;;;:::o;15713:759::-;15810:6;15818;15826;15834;15842;15895:3;15883:9;15874:7;15870:23;15866:33;15863:53;;;15912:1;15909;15902:12;15863:53;15952:9;15939:23;15985:18;15977:6;15974:30;15971:50;;;16017:1;16014;16007:12;15971:50;16056:58;16106:7;16097:6;16086:9;16082:22;16056:58;:::i;:::-;16133:8;;-1:-1:-1;16030:84:21;-1:-1:-1;;16218:2:21;16203:18;;16190:32;16231:31;16190:32;16231:31;:::i;:::-;16281:5;-1:-1:-1;16305:37:21;16338:2;16323:18;;16305:37;:::i;:::-;16295:47;;16394:2;16383:9;16379:18;16366:32;16407:33;16432:7;16407:33;:::i;:::-;16459:7;16449:17;;;15713:759;;;;;;;;:::o;16477:118::-;16563:5;16556:13;16549:21;16542:5;16539:32;16529:60;;16585:1;16582;16575:12;16600:382;16665:6;16673;16726:2;16714:9;16705:7;16701:23;16697:32;16694:52;;;16742:1;16739;16732:12;16694:52;16781:9;16768:23;16800:31;16825:5;16800:31;:::i;:::-;16850:5;-1:-1:-1;16907:2:21;16892:18;;16879:32;16920:30;16879:32;16920:30;:::i;16987:828::-;17093:6;17101;17109;17117;17125;17133;17186:3;17174:9;17165:7;17161:23;17157:33;17154:53;;;17203:1;17200;17193:12;17154:53;17243:9;17230:23;17276:18;17268:6;17265:30;17262:50;;;17308:1;17305;17298:12;17262:50;17347:58;17397:7;17388:6;17377:9;17373:22;17347:58;:::i;:::-;17424:8;;-1:-1:-1;17321:84:21;-1:-1:-1;;17509:2:21;17494:18;;17481:32;17522:31;17481:32;17522:31;:::i;:::-;17572:5;-1:-1:-1;17624:2:21;17609:18;;17596:32;;-1:-1:-1;17680:2:21;17665:18;;17652:32;17693:33;17652:32;17693:33;:::i;:::-;17745:7;-1:-1:-1;17771:38:21;17804:3;17789:19;;17771:38;:::i;:::-;17761:48;;16987:828;;;;;;;;:::o;17820:252::-;17887:6;17895;17948:2;17936:9;17927:7;17923:23;17919:32;17916:52;;;17964:1;17961;17954:12;17916:52;18000:9;17987:23;17977:33;;18029:37;18062:2;18051:9;18047:18;18029:37;:::i;18357:248::-;18425:6;18433;18486:2;18474:9;18465:7;18461:23;18457:32;18454:52;;;18502:1;18499;18492:12;18454:52;-1:-1:-1;;18525:23:21;;;18595:2;18580:18;;;18567:32;;-1:-1:-1;18357:248:21:o;18610:759::-;18715:6;18723;18731;18739;18747;18755;18808:3;18796:9;18787:7;18783:23;18779:33;18776:53;;;18825:1;18822;18815:12;18776:53;18861:9;18848:23;18838:33;;18922:2;18911:9;18907:18;18894:32;18949:18;18941:6;18938:30;18935:50;;;18981:1;18978;18971:12;18935:50;19020:58;19070:7;19061:6;19050:9;19046:22;19020:58;:::i;:::-;19097:8;;-1:-1:-1;18994:84:21;-1:-1:-1;;19182:2:21;19167:18;;19154:32;19195:31;19154:32;19195:31;:::i;:::-;19245:5;-1:-1:-1;19269:37:21;19302:2;19287:18;;19269:37;:::i;:::-;19259:47;;19325:38;19358:3;19347:9;19343:19;19325:38;:::i;19374:529::-;19459:6;19467;19475;19483;19536:3;19524:9;19515:7;19511:23;19507:33;19504:53;;;19553:1;19550;19543:12;19504:53;19589:9;19576:23;19566:33;;19649:2;19638:9;19634:18;19621:32;19662:31;19687:5;19662:31;:::i;:::-;19712:5;-1:-1:-1;19769:2:21;19754:18;;19741:32;19782:33;19741:32;19782:33;:::i;19908:383::-;19985:6;19993;20001;20054:2;20042:9;20033:7;20029:23;20025:32;20022:52;;;20070:1;20067;20060:12;20022:52;20106:9;20093:23;20083:33;;20163:2;20152:9;20148:18;20135:32;20125:42;;20217:2;20206:9;20202:18;20189:32;20230:31;20255:5;20230:31;:::i;20548:686::-;20637:6;20645;20653;20661;20714:2;20702:9;20693:7;20689:23;20685:32;20682:52;;;20730:1;20727;20720:12;20682:52;20770:9;20757:23;20803:18;20795:6;20792:30;20789:50;;;20835:1;20832;20825:12;20789:50;20874:58;20924:7;20915:6;20904:9;20900:22;20874:58;:::i;:::-;20951:8;;-1:-1:-1;20848:84:21;-1:-1:-1;;21036:2:21;21021:18;;21008:32;21049:31;21008:32;21049:31;:::i;:::-;21099:5;-1:-1:-1;21156:2:21;21141:18;;21128:32;21169:33;21128:32;21169:33;:::i;:::-;20548:686;;;;-1:-1:-1;20548:686:21;;-1:-1:-1;;20548:686:21:o;21239:388::-;21307:6;21315;21368:2;21356:9;21347:7;21343:23;21339:32;21336:52;;;21384:1;21381;21374:12;21336:52;21423:9;21410:23;21442:31;21467:5;21442:31;:::i;:::-;21492:5;-1:-1:-1;21549:2:21;21534:18;;21521:32;21562:33;21521:32;21562:33;:::i;22322:755::-;22420:6;22428;22436;22444;22452;22505:3;22493:9;22484:7;22480:23;22476:33;22473:53;;;22522:1;22519;22512:12;22473:53;22558:9;22545:23;22535:33;;22619:2;22608:9;22604:18;22591:32;22646:18;22638:6;22635:30;22632:50;;;22678:1;22675;22668:12;22632:50;22717:58;22767:7;22758:6;22747:9;22743:22;22717:58;:::i;:::-;22794:8;;-1:-1:-1;22691:84:21;-1:-1:-1;;22879:2:21;22864:18;;22851:32;22892:31;22851:32;22892:31;:::i;23082:735::-;23186:6;23194;23202;23210;23218;23271:3;23259:9;23250:7;23246:23;23242:33;23239:53;;;23288:1;23285;23278:12;23239:53;23327:9;23314:23;23346:31;23371:5;23346:31;:::i;:::-;23396:5;-1:-1:-1;23453:2:21;23438:18;;23425:32;23466:33;23425:32;23466:33;:::i;:::-;23518:7;-1:-1:-1;23572:2:21;23557:18;;23544:32;;-1:-1:-1;23623:2:21;23608:18;;23595:32;;-1:-1:-1;23678:3:21;23663:19;;23650:33;23706:18;23695:30;;23692:50;;;23738:1;23735;23728:12;23692:50;23761;23803:7;23794:6;23783:9;23779:22;23761:50;:::i;24234:704::-;24314:6;24367:2;24355:9;24346:7;24342:23;24338:32;24335:52;;;24383:1;24380;24373:12;24335:52;24416:9;24410:16;24449:18;24441:6;24438:30;24435:50;;;24481:1;24478;24471:12;24435:50;24504:22;;24557:4;24549:13;;24545:27;-1:-1:-1;24535:55:21;;24586:1;24583;24576:12;24535:55;24615:2;24609:9;24637:32;24666:2;24637:32;:::i;:::-;24698:2;24692:9;24710:31;24738:2;24730:6;24710:31;:::i;:::-;24765:2;24757:6;24750:18;24805:7;24800:2;24795;24791;24787:11;24783:20;24780:33;24777:53;;;24826:1;24823;24816:12;24777:53;24839:68;24904:2;24899;24891:6;24887:15;24882:2;24878;24874:11;24839:68;:::i;25521:687::-;25632:6;25640;25648;25656;25709:3;25697:9;25688:7;25684:23;25680:33;25677:53;;;25726:1;25723;25716:12;25677:53;25766:9;25753:23;25799:18;25791:6;25788:30;25785:50;;;25831:1;25828;25821:12;25785:50;25854;25896:7;25887:6;25876:9;25872:22;25854:50;:::i;:::-;25844:60;;;25954:2;25943:9;25939:18;25926:32;25967:31;25992:5;25967:31;:::i;:::-;26017:5;-1:-1:-1;26041:37:21;26074:2;26059:18;;26041:37;:::i;:::-;26031:47;;26130:2;26119:9;26115:18;26102:32;26143:33;26168:7;26143:33;:::i;26768:437::-;26847:1;26843:12;;;;26890;;;26911:61;;26965:4;26957:6;26953:17;26943:27;;26911:61;27018:2;27010:6;27007:14;26987:18;26984:38;26981:218;;-1:-1:-1;;;27052:1:21;27045:88;27156:4;27153:1;27146:15;27184:4;27181:1;27174:15;26981:218;;26768:437;;;:::o;29014:184::-;-1:-1:-1;;;29063:1:21;29056:88;29163:4;29160:1;29153:15;29187:4;29184:1;29177:15;29614:184;-1:-1:-1;;;29663:1:21;29656:88;29763:4;29760:1;29753:15;29787:4;29784:1;29777:15;29803:195;29842:3;-1:-1:-1;;29866:5:21;29863:77;29860:103;;29943:18;;:::i;:::-;-1:-1:-1;29990:1:21;29979:13;;29803:195::o;30003:465::-;30260:2;30249:9;30242:21;30223:4;30286:56;30338:2;30327:9;30323:18;30315:6;30286:56;:::i;:::-;30390:9;30382:6;30378:22;30373:2;30362:9;30358:18;30351:50;30418:44;30455:6;30447;30418:44;:::i;:::-;30410:52;30003:465;-1:-1:-1;;;;;30003:465:21:o;30473:251::-;30543:6;30596:2;30584:9;30575:7;30571:23;30567:32;30564:52;;;30612:1;30609;30602:12;30564:52;30644:9;30638:16;30663:31;30688:5;30663:31;:::i;30729:183::-;30797:18;30848:10;;;30836;;;30832:27;;30871:12;;;30868:38;;;30886:18;;:::i;:::-;30868:38;30729:183;;;;:::o;31629:245::-;31696:6;31749:2;31737:9;31728:7;31724:23;31720:32;31717:52;;;31765:1;31762;31755:12;31717:52;31797:9;31791:16;31816:28;31838:5;31816:28;:::i;32282:271::-;32465:6;32457;32452:3;32439:33;32421:3;32491:16;;32516:13;;;32491:16;32282:271;-1:-1:-1;32282:271:21:o;34082:184::-;34152:6;34205:2;34193:9;34184:7;34180:23;34176:32;34173:52;;;34221:1;34218;34211:12;34173:52;-1:-1:-1;34244:16:21;;34082:184;-1:-1:-1;34082:184:21:o;34836:180::-;34903:18;34941:10;;;34953;;;34937:27;;34976:11;;;34973:37;;;34990:18;;:::i;36081:326::-;36170:6;36165:3;36158:19;36222:6;36215:5;36208:4;36203:3;36199:14;36186:43;;36274:1;36267:4;36258:6;36253:3;36249:16;36245:27;36238:38;36140:3;36396:4;-1:-1:-1;;36321:2:21;36313:6;36309:15;36305:88;36300:3;36296:98;36292:109;36285:116;;36081:326;;;;:::o;36412:651::-;36679:3;36668:9;36661:22;36642:4;36700:63;36758:3;36747:9;36743:19;36735:6;36727;36700:63;:::i;:::-;36692:71;;-1:-1:-1;;;;;36872:2:21;36864:6;36860:15;36855:2;36844:9;36840:18;36833:43;36924:10;36916:6;36912:23;36907:2;36896:9;36892:18;36885:51;36984:18;36976:6;36972:31;36967:2;36956:9;36952:18;36945:59;37053:2;37045:6;37041:15;37035:3;37024:9;37020:19;37013:44;;36412:651;;;;;;;;;:::o;37193:544::-;37294:2;37289:3;37286:11;37283:448;;;37330:1;37355:5;37351:2;37344:17;37400:4;37396:2;37386:19;37470:2;37458:10;37454:19;37451:1;37447:27;37441:4;37437:38;37506:4;37494:10;37491:20;37488:47;;;-1:-1:-1;37529:4:21;37488:47;37584:2;37579:3;37575:12;37572:1;37568:20;37562:4;37558:31;37548:41;;37639:82;37657:2;37650:5;37647:13;37639:82;;;37702:17;;;37683:1;37672:13;37639:82;;37283:448;37193:544;;;:::o;37973:1321::-;38095:18;38090:3;38087:27;38084:53;;;38117:18;;:::i;:::-;38146:93;38235:3;38195:38;38227:4;38221:11;38195:38;:::i;:::-;38189:4;38146:93;:::i;:::-;38265:1;38290:2;38285:3;38282:11;38307:1;38302:734;;;;39080:1;39097:3;39094:93;;;-1:-1:-1;39153:19:21;;;39140:33;39094:93;-1:-1:-1;;37870:1:21;37866:11;;;37862:84;37858:89;37848:100;37954:1;37950:11;;;37845:117;39200:78;;38275:1013;;38302:734;37140:1;37133:14;;;37177:4;37164:18;;-1:-1:-1;;38338:76:21;;;38497:9;38519:229;38533:7;38530:1;38527:14;38519:229;;;38622:19;;;38609:33;38594:49;;38729:4;38714:20;;;;38682:1;38670:14;;;;38549:12;38519:229;;;38523:3;38776;38767:7;38764:16;38761:219;;;-1:-1:-1;;38890:3:21;38884;38881:1;38877:11;38873:21;38869:94;38865:99;38852:9;38847:3;38843:19;38830:33;38826:139;38818:6;38811:155;38761:219;;;39023:1;39017:3;39014:1;39010:11;39006:19;39000:4;38993:33;38275:1013;;37973:1321;;;:::o;39299:832::-;39629:6;39618:9;39611:25;39672:3;39667:2;39656:9;39652:18;39645:31;39592:4;39693:63;39751:3;39740:9;39736:19;39728:6;39720;39693:63;:::i;:::-;-1:-1:-1;;;;;39853:15:21;;;39848:2;39833:18;;39826:43;39905:15;;;;39900:2;39885:18;;39878:43;39940:18;39995:15;;;39989:3;39974:19;;39967:44;40060:10;40048:23;;;;40042:3;40027:19;;40020:52;40109:15;;;40103:3;40088:19;;;40081:44;39685:71;39299:832;-1:-1:-1;;;;39299:832:21:o;40953:1467::-;41077:3;41071:10;41104:18;41096:6;41093:30;41090:56;;;41126:18;;:::i;:::-;41155:96;41244:6;41204:38;41236:4;41230:11;41204:38;:::i;:::-;41198:4;41155:96;:::i;:::-;41306:4;;41370:2;41359:14;;41387:1;41382:781;;;;42207:1;42224:6;42221:89;;;-1:-1:-1;42276:19:21;;;42270:26;42221:89;-1:-1:-1;;37870:1:21;37866:11;;;37862:84;37858:89;37848:100;37954:1;37950:11;;;37845:117;42323:81;;41352:1062;;41382:781;37140:1;37133:14;;;37177:4;37164:18;;-1:-1:-1;;41418:79:21;;;41594:236;41608:7;41605:1;41602:14;41594:236;;;41697:19;;;41691:26;41676:42;;41789:27;;;;41757:1;41745:14;;;;41624:19;;41594:236;;;41598:3;41858:6;41849:7;41846:19;41843:261;;;41919:19;;;41913:26;-1:-1:-1;;42002:1:21;41998:14;;;42014:3;41994:24;41990:97;41986:102;41971:118;41956:134;;41843:261;-1:-1:-1;;;;;42150:1:21;42134:14;;;42130:22;42117:36;;-1:-1:-1;40953:1467:21:o;43038:850::-;43360:4;-1:-1:-1;;;;;43470:2:21;43462:6;43458:15;43447:9;43440:34;43522:2;43514:6;43510:15;43505:2;43494:9;43490:18;43483:43;;43562:3;43557:2;43546:9;43542:18;43535:31;43589:57;43641:3;43630:9;43626:19;43618:6;43589:57;:::i;:::-;43694:9;43686:6;43682:22;43677:2;43666:9;43662:18;43655:50;43728:44;43765:6;43757;43728:44;:::i;:::-;43714:58;;43821:9;43813:6;43809:22;43803:3;43792:9;43788:19;43781:51;43849:33;43875:6;43867;43849:33;:::i;43893:249::-;43962:6;44015:2;44003:9;43994:7;43990:23;43986:32;43983:52;;;44031:1;44028;44021:12;43983:52;44063:9;44057:16;44082:30;44106:5;44082:30;:::i;44147:179::-;44182:3;44224:1;44206:16;44203:23;44200:120;;;44270:1;44267;44264;44249:23;-1:-1:-1;44307:1:21;44301:8;44296:3;44292:18;44200:120;44147:179;:::o;44331:731::-;44370:3;44412:4;44394:16;44391:26;44388:39;;;44331:731;:::o;44388:39::-;44454:2;44448:9;44476:66;44597:2;44579:16;44575:25;44572:1;44566:4;44551:50;44630:4;44624:11;44654:16;44689:18;44760:2;44753:4;44745:6;44741:17;44738:25;44733:2;44725:6;44722:14;44719:45;44716:58;;;44767:5;;;;;44331:731;:::o;44716:58::-;44804:6;44798:4;44794:17;44783:28;;44840:3;44834:10;44867:2;44859:6;44856:14;44853:27;;;44873:5;;;;;;44331:731;:::o;44853:27::-;44957:2;44938:16;44932:4;44928:27;44924:36;44917:4;44908:6;44903:3;44899:16;44895:27;44892:69;44889:82;;;44964:5;;;;;;44331:731;:::o;44889:82::-;44980:57;45031:4;45022:6;45014;45010:19;45006:30;45000:4;44980:57;:::i;:::-;-1:-1:-1;45053:3:21;;44331:731;-1:-1:-1;;;;;44331:731:21:o;45897:520::-;46124:3;46113:9;46106:22;46087:4;46145:46;46186:3;46175:9;46171:19;46163:6;46145:46;:::i;:::-;-1:-1:-1;;;;;46227:55:21;;;;46222:2;46207:18;;46200:83;-1:-1:-1;46331:10:21;46319:23;;;;46314:2;46299:18;;46292:51;46391:18;46379:31;46374:2;46359:18;;;46352:59;46137:54;45897:520;-1:-1:-1;45897:520:21:o;46781:125::-;46846:9;;;46867:10;;;46864:36;;;46880:18;;:::i;46911:128::-;46978:9;;;46999:11;;;46996:37;;;47013:18;;:::i;47402:644::-;47655:66;47646:6;47641:3;47637:16;47633:89;47628:3;47621:102;47603:3;47752:6;47746:13;47768:74;47835:6;47831:1;47826:3;47822:11;47815:4;47807:6;47803:17;47768:74;:::i;:::-;47902:13;;47861:16;;;;47924:75;47902:13;47986:1;47978:10;;47971:4;47959:17;;47924:75;:::i;:::-;48019:17;48038:1;48015:25;;47402:644;-1:-1:-1;;;;;47402:644:21:o;48312:584::-;48534:4;-1:-1:-1;;;;;48644:2:21;48636:6;48632:15;48621:9;48614:34;48696:2;48688:6;48684:15;48679:2;48668:9;48664:18;48657:43;;48736:6;48731:2;48720:9;48716:18;48709:34;48779:6;48774:2;48763:9;48759:18;48752:34;48823:3;48817;48806:9;48802:19;48795:32;48844:46;48885:3;48874:9;48870:19;48862:6;48844:46;:::i;:::-;48836:54;48312:584;-1:-1:-1;;;;;;;48312:584:21:o"},"gasEstimates":{"creation":{"codeDepositCost":"4865200","executionCost":"infinite","totalCost":"infinite"},"external":{"_tokens(uint256)":"2516","allFusesBurned(bytes32,uint32)":"2928","balanceOf(address,uint256)":"infinite","balanceOfBatch(address[],uint256[])":"infinite","canModifyName(bytes32,address)":"5293","controllers(address)":"2637","ens()":"infinite","extendExpiry(bytes32,bytes32,uint64)":"infinite","getData(uint256)":"2795","isApprovedForAll(address,address)":"infinite","isWrapped(bytes32)":"infinite","metadataService()":"2404","name()":"infinite","names(bytes32)":"infinite","onERC721Received(address,address,uint256,bytes)":"infinite","owner()":"2443","ownerOf(uint256)":"2855","recoverFunds(address,address,uint256)":"infinite","registerAndWrapETH2LD(string,address,uint256,address,uint16)":"infinite","registrar()":"infinite","renew(uint256,uint256)":"infinite","renounceOwnership()":"infinite","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"infinite","safeTransferFrom(address,address,uint256,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","setChildFuses(bytes32,bytes32,uint32,uint64)":"infinite","setController(address,bool)":"infinite","setFuses(bytes32,uint16)":"infinite","setMetadataService(address)":"26827","setRecord(bytes32,address,address,uint64)":"infinite","setResolver(bytes32,address)":"infinite","setSubnodeOwner(bytes32,string,address,uint32,uint64)":"infinite","setSubnodeRecord(bytes32,string,address,address,uint64,uint32,uint64)":"infinite","setTTL(bytes32,uint64)":"infinite","setUpgradeContract(address)":"infinite","supportsInterface(bytes4)":"infinite","transferOwnership(address)":"infinite","unwrap(bytes32,bytes32,address)":"infinite","unwrapETH2LD(bytes32,address,address)":"infinite","upgrade(bytes32,string,address,address)":"infinite","upgradeContract()":"2427","upgradeETH2LD(string,address,address)":"infinite","uri(uint256)":"infinite","wrap(bytes,address,address)":"infinite","wrapETH2LD(string,address,uint16,address)":"infinite"},"internal":{"_addLabel(string memory,bytes memory)":"infinite","_canFusesBeBurned(bytes32,uint32)":"infinite","_checkCanCallSetSubnodeOwner(bytes32,bytes32)":"infinite","_checkFusesAreSettable(bytes32,uint32)":"infinite","_checkParentFuses(bytes32,uint32,uint32)":"infinite","_checkParentFusesAndExpiry(bytes32,bytes32,uint32,uint64)":"infinite","_clearOwnerAndFuses(address,uint32,uint64)":"109","_makeNode(bytes32,bytes32)":"infinite","_mint(bytes32,address,uint32,uint64)":"infinite","_normaliseExpiry(uint64,uint64,uint64)":"119","_preTransferCheck(uint256,uint32,uint64)":"infinite","_prepareUpgrade(bytes32)":"infinite","_saveLabel(bytes32,bytes32,string memory)":"infinite","_setData(bytes32,address,uint32,uint64)":"infinite","_setFuses(bytes32,address,uint32,uint64,uint64)":"infinite","_storeNameAndWrap(bytes32,bytes32,string memory,address,uint32,uint64)":"infinite","_unwrap(bytes32,address)":"infinite","_updateName(bytes32,bytes32,string memory,address,uint32,uint64)":"infinite","_wrap(bytes32,bytes memory,address,uint32,uint64)":"infinite","_wrapETH2LD(string memory,address,uint16,address)":"infinite"}},"methodIdentifiers":{"_tokens(uint256)":"ed70554d","allFusesBurned(bytes32,uint32)":"adf4960a","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","canModifyName(bytes32,address)":"41415eab","controllers(address)":"da8c229e","ens()":"3f15457f","extendExpiry(bytes32,bytes32,uint64)":"6e5d6ad2","getData(uint256)":"0178fe3f","isApprovedForAll(address,address)":"e985e9c5","isWrapped(bytes32)":"fd0cd0d9","metadataService()":"53095467","name()":"06fdde03","names(bytes32)":"20c38e2b","onERC721Received(address,address,uint256,bytes)":"150b7a02","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","recoverFunds(address,address,uint256)":"5d3590d5","registerAndWrapETH2LD(string,address,uint256,address,uint16)":"a4014982","registrar()":"2b20e397","renew(uint256,uint256)":"c475abff","renounceOwnership()":"715018a6","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setChildFuses(bytes32,bytes32,uint32,uint64)":"33c69ea9","setController(address,bool)":"e0dba60f","setFuses(bytes32,uint16)":"402906fc","setMetadataService(address)":"1534e177","setRecord(bytes32,address,address,uint64)":"cf408823","setResolver(bytes32,address)":"1896f70a","setSubnodeOwner(bytes32,string,address,uint32,uint64)":"c658e086","setSubnodeRecord(bytes32,string,address,address,uint64,uint32,uint64)":"24c1af44","setTTL(bytes32,uint64)":"14ab9038","setUpgradeContract(address)":"b6bcad26","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b","unwrap(bytes32,bytes32,address)":"d8c9921a","unwrapETH2LD(bytes32,address,address)":"8b4dfa75","upgrade(bytes32,string,address,address)":"ee7eba78","upgradeContract()":"1f4e1504","upgradeETH2LD(string,address,address)":"e72bf00f","uri(uint256)":"0e89341c","wrap(bytes,address,address)":"eb8ae530","wrapETH2LD(string,address,uint16,address)":"8cf8b41e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ENS\",\"name\":\"_ens\",\"type\":\"address\"},{\"internalType\":\"contract IBaseRegistrar\",\"name\":\"_registrar\",\"type\":\"address\"},{\"internalType\":\"contract IMetadataService\",\"name\":\"_metadataService\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CannotUpgrade\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncompatibleParent\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"IncorrectTargetOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectTokenType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"labelHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"expectedLabelhash\",\"type\":\"bytes32\"}],\"name\":\"LabelMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"name\":\"LabelTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LabelTooShort\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NameIsNotWrapped\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"OperationProhibited\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"Unauthorised\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"ControllerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"expiry\",\"type\":\"uint64\"}],\"name\":\"ExpiryExtended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"fuses\",\"type\":\"uint32\"}],\"name\":\"FusesSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"NameUnwrapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"name\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"fuses\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"expiry\",\"type\":\"uint64\"}],\"name\":\"NameWrapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"fuseMask\",\"type\":\"uint32\"}],\"name\":\"allFusesBurned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"canModifyName\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ens\",\"outputs\":[{\"internalType\":\"contract ENS\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"labelhash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"expiry\",\"type\":\"uint64\"}],\"name\":\"extendExpiry\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"fuses\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"expiry\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"isWrapped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metadataService\",\"outputs\":[{\"internalType\":\"contract IMetadataService\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"names\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wrappedOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"ownerControlledFuses\",\"type\":\"uint16\"}],\"name\":\"registerAndWrapETH2LD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"registrarExpiry\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registrar\",\"outputs\":[{\"internalType\":\"contract IBaseRegistrar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"renew\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"labelhash\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"fuses\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"expiry\",\"type\":\"uint64\"}],\"name\":\"setChildFuses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"ownerControlledFuses\",\"type\":\"uint16\"}],\"name\":\"setFuses\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMetadataService\",\"name\":\"_metadataService\",\"type\":\"address\"}],\"name\":\"setMetadataService\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"}],\"name\":\"setRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"setResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"fuses\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"expiry\",\"type\":\"uint64\"}],\"name\":\"setSubnodeOwner\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"fuses\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"expiry\",\"type\":\"uint64\"}],\"name\":\"setSubnodeRecord\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"}],\"name\":\"setTTL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract INameWrapperUpgrade\",\"name\":\"_upgradeAddress\",\"type\":\"address\"}],\"name\":\"setUpgradeContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"labelhash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"labelhash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"unwrapETH2LD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wrappedOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upgradeContract\",\"outputs\":[{\"internalType\":\"contract INameWrapperUpgrade\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wrappedOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"upgradeETH2LD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"name\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"wrappedOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"wrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wrappedOwner\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"ownerControlledFuses\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"wrapETH2LD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allFusesBurned(bytes32,uint32)\":{\"params\":{\"fuseMask\":\"The fuses you want to check\",\"node\":\"Namehash of the name\"},\"returns\":{\"_0\":\"Boolean of whether or not all the selected fuses are burned\"}},\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"canModifyName(bytes32,address)\":{\"params\":{\"addr\":\"which address to check permissions for\",\"node\":\"namehash of the name to check\"},\"returns\":{\"_0\":\"whether or not is owner or approved\"}},\"extendExpiry(bytes32,bytes32,uint64)\":{\"params\":{\"expiry\":\"When the name will expire in seconds since the Unix epoch\",\"labelhash\":\"Labelhash of the name, e.g. vitalik.xyz would be keccak256('vitalik')\",\"parentNode\":\"Parent namehash of the name e.g. vitalik.xyz would be namehash('xyz')\"},\"returns\":{\"_0\":\"New expiry\"}},\"getData(uint256)\":{\"params\":{\"id\":\"Namehash of the name\"},\"returns\":{\"expiry\":\"Expiry of the name\",\"fuses\":\"Fuses of the name\",\"owner\":\"Owner of the name\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"params\":{\"id\":\"Label as a string of the .eth domain to wrap\"},\"returns\":{\"owner\":\"The owner of the name\"}},\"recoverFunds(address,address,uint256)\":{\"details\":\"The contract is Ownable and only the owner can call the recover function.\",\"params\":{\"_amount\":\"The amount of tokens to recover.\",\"_to\":\"The address to send the tokens to.\",\"_token\":\"The address of the ERC20 token to recover\"}},\"registerAndWrapETH2LD(string,address,uint256,address,uint16)\":{\"details\":\"Registers a new .eth second-level domain and wraps it.      Only callable by authorised controllers.\",\"params\":{\"duration\":\"The duration, in seconds, to register the name for.\",\"label\":\"The label to register (Eg, 'foo' for 'foo.eth').\",\"ownerControlledFuses\":\"Initial owner-controlled fuses to set\",\"resolver\":\"The resolver address to set on the ENS registry (optional).\",\"wrappedOwner\":\"The owner of the wrapped name.\"},\"returns\":{\"registrarExpiry\":\"The expiry date of the new name on the .eth registrar, in seconds since the Unix epoch.\"}},\"renew(uint256,uint256)\":{\"details\":\"Only callable by authorised controllers.\",\"params\":{\"duration\":\"The number of seconds to renew the name for.\",\"tokenId\":\"The hash of the label to register (eg, `keccak256('foo')`, for 'foo.eth').\"},\"returns\":{\"expires\":\"The expiry date of the name on the .eth registrar, in seconds since the Unix epoch.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"setChildFuses(bytes32,bytes32,uint32,uint64)\":{\"params\":{\"expiry\":\"When the name will expire in seconds since the Unix epoch\",\"fuses\":\"Fuses to burn\",\"labelhash\":\"Labelhash of the name, e.g. vitalik.xyz would be keccak256('vitalik')\",\"parentNode\":\"Parent namehash of the name e.g. vitalik.xyz would be namehash('xyz')\"}},\"setFuses(bytes32,uint16)\":{\"params\":{\"node\":\"Namehash of the name\",\"ownerControlledFuses\":\"Owner-controlled fuses to burn\"},\"returns\":{\"_0\":\"New fuses\"}},\"setMetadataService(address)\":{\"params\":{\"_metadataService\":\"The new metadata service\"}},\"setRecord(bytes32,address,address,uint64)\":{\"params\":{\"node\":\"Namehash of the name to set a record for\",\"owner\":\"New owner in the registry\",\"resolver\":\"Resolver contract\",\"ttl\":\"Time to live in the registry\"}},\"setResolver(bytes32,address)\":{\"params\":{\"node\":\"namehash of the name\",\"resolver\":\"the resolver contract\"}},\"setSubnodeOwner(bytes32,string,address,uint32,uint64)\":{\"params\":{\"expiry\":\"When the name will expire in seconds since the Unix epoch\",\"fuses\":\"Initial fuses for the wrapped subdomain\",\"label\":\"Label of the subdomain as a string\",\"owner\":\"New owner in the wrapper\",\"parentNode\":\"Parent namehash of the subdomain\"},\"returns\":{\"node\":\"Namehash of the subdomain\"}},\"setSubnodeRecord(bytes32,string,address,address,uint64,uint32,uint64)\":{\"params\":{\"expiry\":\"When the name will expire in seconds since the Unix epoch\",\"fuses\":\"initial fuses for the wrapped subdomain\",\"label\":\"label of the subdomain as a string\",\"owner\":\"new owner in the wrapper\",\"parentNode\":\"parent namehash of the subdomain\",\"resolver\":\"resolver contract in the registry\",\"ttl\":\"ttl in the registry\"},\"returns\":{\"node\":\"Namehash of the subdomain\"}},\"setTTL(bytes32,uint64)\":{\"params\":{\"node\":\"Namehash of the name\",\"ttl\":\"TTL in the registry\"}},\"setUpgradeContract(address)\":{\"details\":\"The default value of upgradeContract is the 0 address. Use the 0 address at any time to make the contract not upgradable.\",\"params\":{\"_upgradeAddress\":\"address of an upgraded contract\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unwrap(bytes32,bytes32,address)\":{\"details\":\"Can be called by the owner in the wrapper or an authorised caller in the wrapper\",\"params\":{\"controller\":\"Sets the owner in the registry to this address\",\"labelhash\":\"Labelhash of the name, e.g. vitalik.xyz would be keccak256('vitalik')\",\"parentNode\":\"Parent namehash of the name e.g. vitalik.xyz would be namehash('xyz')\"}},\"unwrapETH2LD(bytes32,address,address)\":{\"details\":\"Can be called by the owner in the wrapper or an authorised caller in the wrapper\",\"params\":{\"controller\":\"Sets the owner in the registry to this address\",\"labelhash\":\"Labelhash of the .eth domain\",\"registrant\":\"Sets the owner in the .eth registrar to this address\"}},\"upgrade(bytes32,string,address,address)\":{\"details\":\"Can be called by the owner or an authorised caller Requires upgraded Namewrapper to permit old Namewrapper to call `setSubnodeRecord` for all names\",\"params\":{\"label\":\"Label as a string of the name to upgrade\",\"parentNode\":\"Namehash of the parent name\",\"resolver\":\"Resolver contract for this name\",\"wrappedOwner\":\"Owner of the name in this contract\"}},\"upgradeETH2LD(string,address,address)\":{\"details\":\"Can be called by the owner of the name in this contract\",\"params\":{\"label\":\"Label as a string of the .eth name to upgrade\",\"wrappedOwner\":\"The owner of the wrapped name\"}},\"uri(uint256)\":{\"params\":{\"tokenId\":\"The id of the token\"},\"returns\":{\"_0\":\"string uri of the metadata service\"}},\"wrap(bytes,address,address)\":{\"details\":\"Can be called by the owner in the registry or an authorised caller in the registry\",\"params\":{\"name\":\"The name to wrap, in DNS format\",\"resolver\":\"Resolver contract\",\"wrappedOwner\":\"Owner of the name in this contract\"}},\"wrapETH2LD(string,address,uint16,address)\":{\"details\":\"Can be called by the owner of the name on the .eth registrar or an authorised caller on the registrar\",\"params\":{\"label\":\"Label as a string of the .eth domain to wrap\",\"ownerControlledFuses\":\"Initial owner-controlled fuses to set\",\"resolver\":\"Resolver contract address\",\"wrappedOwner\":\"Owner of the name in this contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allFusesBurned(bytes32,uint32)\":{\"notice\":\"Checks all Fuses in the mask are burned for the node\"},\"canModifyName(bytes32,address)\":{\"notice\":\"Checks if owner or approved by owner\"},\"extendExpiry(bytes32,bytes32,uint64)\":{\"notice\":\"Extends expiry for a name\"},\"getData(uint256)\":{\"notice\":\"Gets the data for a name\"},\"ownerOf(uint256)\":{\"notice\":\"Gets the owner of a name\"},\"recoverFunds(address,address,uint256)\":{\"notice\":\"Recover ERC20 tokens sent to the contract by mistake.\"},\"renew(uint256,uint256)\":{\"notice\":\"Renews a .eth second-level domain.\"},\"setChildFuses(bytes32,bytes32,uint32,uint64)\":{\"notice\":\"Sets fuses of a name that you own the parent of. Can also be called by the owner of a .eth name\"},\"setFuses(bytes32,uint16)\":{\"notice\":\"Sets fuses of a name\"},\"setMetadataService(address)\":{\"notice\":\"Set the metadata service. Only the owner can do this\"},\"setRecord(bytes32,address,address,uint64)\":{\"notice\":\"Sets records for the name in the ENS Registry\"},\"setResolver(bytes32,address)\":{\"notice\":\"Sets resolver contract in the registry\"},\"setSubnodeOwner(bytes32,string,address,uint32,uint64)\":{\"notice\":\"Sets the subdomain owner in the registry and then wraps the subdomain\"},\"setSubnodeRecord(bytes32,string,address,address,uint64,uint32,uint64)\":{\"notice\":\"Sets the subdomain owner in the registry with records and then wraps the subdomain\"},\"setTTL(bytes32,uint64)\":{\"notice\":\"Sets TTL in the registry\"},\"setUpgradeContract(address)\":{\"notice\":\"Set the address of the upgradeContract of the contract. only admin can do this\"},\"unwrap(bytes32,bytes32,address)\":{\"notice\":\"Unwraps a non .eth domain, of any kind. Could be a DNSSEC name vitalik.xyz or a subdomain\"},\"unwrapETH2LD(bytes32,address,address)\":{\"notice\":\"Unwraps a .eth domain. e.g. vitalik.eth\"},\"upgrade(bytes32,string,address,address)\":{\"notice\":\"Upgrades a non .eth domain of any kind. Could be a DNSSEC name vitalik.xyz or a subdomain\"},\"upgradeETH2LD(string,address,address)\":{\"notice\":\"Upgrades a .eth wrapped domain by calling the wrapETH2LD function of the upgradeContract     and burning the token of this contract\"},\"uri(uint256)\":{\"notice\":\"Get the metadata uri\"},\"wrap(bytes,address,address)\":{\"notice\":\"Wraps a non .eth domain, of any kind. Could be a DNSSEC name vitalik.xyz or a subdomain\"},\"wrapETH2LD(string,address,uint16,address)\":{\"notice\":\"Wraps a .eth domain, creating a new token and sending the original ERC721 token to this contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/wrapper/NameWrapper.sol\":\"NameWrapper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/ethregistrar/IBaseRegistrar.sol\":{\"content\":\"import \\\"../registry/ENS.sol\\\";\\nimport \\\"./IBaseRegistrar.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\ninterface IBaseRegistrar is IERC721 {\\n    event ControllerAdded(address indexed controller);\\n    event ControllerRemoved(address indexed controller);\\n    event NameMigrated(\\n        uint256 indexed id,\\n        address indexed owner,\\n        uint256 expires\\n    );\\n    event NameRegistered(\\n        uint256 indexed id,\\n        address indexed owner,\\n        uint256 expires\\n    );\\n    event NameRenewed(uint256 indexed id, uint256 expires);\\n\\n    // Authorises a controller, who can register and renew domains.\\n    function addController(address controller) external;\\n\\n    // Revoke controller permission for an address.\\n    function removeController(address controller) external;\\n\\n    // Set the resolver for the TLD this registrar manages.\\n    function setResolver(address resolver) external;\\n\\n    // Returns the expiration timestamp of the specified label hash.\\n    function nameExpires(uint256 id) external view returns (uint256);\\n\\n    // Returns true iff the specified name is available for registration.\\n    function available(uint256 id) external view returns (bool);\\n\\n    /**\\n     * @dev Register a name.\\n     */\\n    function register(\\n        uint256 id,\\n        address owner,\\n        uint256 duration\\n    ) external returns (uint256);\\n\\n    function renew(uint256 id, uint256 duration) external returns (uint256);\\n\\n    /**\\n     * @dev Reclaim ownership of a name in ENS, if you own it in the registrar.\\n     */\\n    function reclaim(uint256 id, address owner) external;\\n}\\n\",\"keccak256\":\"0x9ac51351ff72d73083aed62b7cdad4c07e9d1eb68401d7fd8457bdd828f2c6fe\"},\"contracts/registry/ENS.sol\":{\"content\":\"pragma solidity >=0.8.4;\\n\\ninterface ENS {\\n    // Logged when the owner of a node assigns a new owner to a subnode.\\n    event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\\n\\n    // Logged when the owner of a node transfers ownership to a new account.\\n    event Transfer(bytes32 indexed node, address owner);\\n\\n    // Logged when the resolver for a node changes.\\n    event NewResolver(bytes32 indexed node, address resolver);\\n\\n    // Logged when the TTL of a node changes\\n    event NewTTL(bytes32 indexed node, uint64 ttl);\\n\\n    // Logged when an operator is added or removed.\\n    event ApprovalForAll(\\n        address indexed owner,\\n        address indexed operator,\\n        bool approved\\n    );\\n\\n    function setRecord(\\n        bytes32 node,\\n        address owner,\\n        address resolver,\\n        uint64 ttl\\n    ) external;\\n\\n    function setSubnodeRecord(\\n        bytes32 node,\\n        bytes32 label,\\n        address owner,\\n        address resolver,\\n        uint64 ttl\\n    ) external;\\n\\n    function setSubnodeOwner(\\n        bytes32 node,\\n        bytes32 label,\\n        address owner\\n    ) external returns (bytes32);\\n\\n    function setResolver(bytes32 node, address resolver) external;\\n\\n    function setOwner(bytes32 node, address owner) external;\\n\\n    function setTTL(bytes32 node, uint64 ttl) external;\\n\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    function owner(bytes32 node) external view returns (address);\\n\\n    function resolver(bytes32 node) external view returns (address);\\n\\n    function ttl(bytes32 node) external view returns (uint64);\\n\\n    function recordExists(bytes32 node) external view returns (bool);\\n\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool);\\n}\\n\",\"keccak256\":\"0xf79be82c1a2eb0a77fba4e0972221912e803309081ca460fd2cf61653e55758a\"},\"contracts/utils/ERC20Recoverable.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity >=0.8.17 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n    @notice Contract is used to recover ERC20 tokens sent to the contract by mistake.\\n */\\n\\ncontract ERC20Recoverable is Ownable {\\n    /**\\n    @notice Recover ERC20 tokens sent to the contract by mistake.\\n    @dev The contract is Ownable and only the owner can call the recover function.\\n    @param _to The address to send the tokens to.\\n@param _token The address of the ERC20 token to recover\\n    @param _amount The amount of tokens to recover.\\n */\\n    function recoverFunds(\\n        address _token,\\n        address _to,\\n        uint256 _amount\\n    ) external onlyOwner {\\n        IERC20(_token).transfer(_to, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0x793a38091e1f81499a29ddba82c2b2f3cdd07071b81a832886e8e02a45ff352a\",\"license\":\"MIT\"},\"contracts/wrapper/BytesUtils.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ~0.8.17;\\n\\nlibrary BytesUtils {\\n    /*\\n     * @dev Returns the keccak-256 hash of a byte range.\\n     * @param self The byte string to hash.\\n     * @param offset The position to start hashing at.\\n     * @param len The number of bytes to hash.\\n     * @return The hash of the byte range.\\n     */\\n    function keccak(\\n        bytes memory self,\\n        uint256 offset,\\n        uint256 len\\n    ) internal pure returns (bytes32 ret) {\\n        require(offset + len <= self.length);\\n        assembly {\\n            ret := keccak256(add(add(self, 32), offset), len)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the ENS namehash of a DNS-encoded name.\\n     * @param self The DNS-encoded name to hash.\\n     * @param offset The offset at which to start hashing.\\n     * @return The namehash of the name.\\n     */\\n    function namehash(bytes memory self, uint256 offset)\\n        internal\\n        pure\\n        returns (bytes32)\\n    {\\n        (bytes32 labelhash, uint256 newOffset) = readLabel(self, offset);\\n        if (labelhash == bytes32(0)) {\\n            require(offset == self.length - 1, \\\"namehash: Junk at end of name\\\");\\n            return bytes32(0);\\n        }\\n        return\\n            keccak256(abi.encodePacked(namehash(self, newOffset), labelhash));\\n    }\\n\\n    /**\\n     * @dev Returns the keccak-256 hash of a DNS-encoded label, and the offset to the start of the next label.\\n     * @param self The byte string to read a label from.\\n     * @param idx The index to read a label at.\\n     * @return labelhash The hash of the label at the specified index, or 0 if it is the last label.\\n     * @return newIdx The index of the start of the next label.\\n     */\\n    function readLabel(bytes memory self, uint256 idx)\\n        internal\\n        pure\\n        returns (bytes32 labelhash, uint256 newIdx)\\n    {\\n        require(idx < self.length, \\\"readLabel: Index out of bounds\\\");\\n        uint256 len = uint256(uint8(self[idx]));\\n        if (len > 0) {\\n            labelhash = keccak(self, idx + 1, len);\\n        } else {\\n            labelhash = bytes32(0);\\n        }\\n        newIdx = idx + len + 1;\\n    }\\n}\\n\",\"keccak256\":\"0xc0d13fcaccd6c3af927106b2ea48eec83c5d0a18d608bde013a53742ac058526\",\"license\":\"MIT\"},\"contracts/wrapper/Controllable.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ~0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Controllable is Ownable {\\n    mapping(address => bool) public controllers;\\n\\n    event ControllerChanged(address indexed controller, bool active);\\n\\n    function setController(address controller, bool active) public onlyOwner {\\n        controllers[controller] = active;\\n        emit ControllerChanged(controller, active);\\n    }\\n\\n    modifier onlyController() {\\n        require(\\n            controllers[msg.sender],\\n            \\\"Controllable: Caller is not a controller\\\"\\n        );\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x9a9191656a82eda6763cda29ce893ddbfddb6c43559ff3b90c00a184e14e1fa1\",\"license\":\"MIT\"},\"contracts/wrapper/ERC1155Fuse.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ~0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/utils/introspection/ERC165.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\n\\n/* This contract is a variation on ERC1155 with the additions of _setData, getData and _preTransferCheck and ownerOf. _setData and getData allows the use of the other 96 bits next to the address of the owner for extra data. We use this to store 'fuses' that control permissions that can be burnt. 32 bits are used for the fuses themselves and 64 bits are used for the expiry of the name. When a name has expired, its fuses will be be set back to 0 */\\n\\nabstract contract ERC1155Fuse is ERC165, IERC1155, IERC1155MetadataURI {\\n    using Address for address;\\n    mapping(uint256 => uint256) public _tokens;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**************************************************************************\\n     * ERC721 methods\\n     *************************************************************************/\\n\\n    function ownerOf(uint256 id) public view virtual returns (address) {\\n        (address owner, , ) = getData(id);\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId)\\n        public\\n        view\\n        virtual\\n        override(ERC165, IERC165)\\n        returns (bool)\\n    {\\n        return\\n            interfaceId == type(IERC1155).interfaceId ||\\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (uint256)\\n    {\\n        require(\\n            account != address(0),\\n            \\\"ERC1155: balance query for the zero address\\\"\\n        );\\n        address owner = ownerOf(id);\\n        if (owner == account) {\\n            return 1;\\n        }\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOfBatch}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (uint256[] memory)\\n    {\\n        require(\\n            accounts.length == ids.length,\\n            \\\"ERC1155: accounts and ids length mismatch\\\"\\n        );\\n\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\n\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\\n        }\\n\\n        return batchBalances;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved)\\n        public\\n        virtual\\n        override\\n    {\\n        require(\\n            msg.sender != operator,\\n            \\\"ERC1155: setting approval status for self\\\"\\n        );\\n\\n        _operatorApprovals[msg.sender][operator] = approved;\\n        emit ApprovalForAll(msg.sender, operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (bool)\\n    {\\n        return _operatorApprovals[account][operator];\\n    }\\n\\n    /**\\n     * @dev Returns the Name's owner address and fuses\\n     */\\n    function getData(uint256 tokenId)\\n        public\\n        view\\n        virtual\\n        returns (\\n            address owner,\\n            uint32 fuses,\\n            uint64 expiry\\n        )\\n    {\\n        uint256 t = _tokens[tokenId];\\n        owner = address(uint160(t));\\n        expiry = uint64(t >> 192);\\n        fuses = uint32(t >> 160);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) public virtual override {\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n        require(\\n            from == msg.sender || isApprovedForAll(from, msg.sender),\\n            \\\"ERC1155: caller is not owner nor approved\\\"\\n        );\\n\\n        _transfer(from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            ids.length == amounts.length,\\n            \\\"ERC1155: ids and amounts length mismatch\\\"\\n        );\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n        require(\\n            from == msg.sender || isApprovedForAll(from, msg.sender),\\n            \\\"ERC1155: transfer caller is not owner nor approved\\\"\\n        );\\n\\n        for (uint256 i = 0; i < ids.length; ++i) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            (address oldOwner, uint32 fuses, uint64 expiry) = getData(id);\\n\\n            _preTransferCheck(id, fuses, expiry);\\n\\n            require(\\n                amount == 1 && oldOwner == from,\\n                \\\"ERC1155: insufficient balance for transfer\\\"\\n            );\\n            _setData(id, to, fuses, expiry);\\n        }\\n\\n        emit TransferBatch(msg.sender, from, to, ids, amounts);\\n\\n        _doSafeBatchTransferAcceptanceCheck(\\n            msg.sender,\\n            from,\\n            to,\\n            ids,\\n            amounts,\\n            data\\n        );\\n    }\\n\\n    /**************************************************************************\\n     * Internal/private methods\\n     *************************************************************************/\\n\\n    /**\\n     * @dev Sets the Name's owner address and fuses\\n     */\\n    function _setData(\\n        uint256 tokenId,\\n        address owner,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) internal virtual {\\n        _tokens[tokenId] =\\n            uint256(uint160(owner)) |\\n            (uint256(fuses) << 160) |\\n            (uint256(expiry) << 192);\\n    }\\n\\n    function _preTransferCheck(\\n        uint256 id,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) internal virtual returns (bool);\\n\\n    function _clearOwnerAndFuses(\\n        address owner,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) internal virtual returns (address, uint32);\\n\\n    function _mint(\\n        bytes32 node,\\n        address owner,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) internal virtual {\\n        uint256 tokenId = uint256(node);\\n        (address oldOwner, uint32 oldFuses, uint64 oldExpiry) = getData(\\n            uint256(node)\\n        );\\n\\n        uint32 parentControlledFuses = (uint32(type(uint16).max) << 16) &\\n            oldFuses;\\n\\n        if (oldExpiry > expiry) {\\n            expiry = oldExpiry;\\n        }\\n\\n        if (oldExpiry >= block.timestamp) {\\n            fuses = fuses | parentControlledFuses;\\n        }\\n\\n        require(oldOwner == address(0), \\\"ERC1155: mint of existing token\\\");\\n        require(owner != address(0), \\\"ERC1155: mint to the zero address\\\");\\n        require(\\n            owner != address(this),\\n            \\\"ERC1155: newOwner cannot be the NameWrapper contract\\\"\\n        );\\n\\n        _setData(tokenId, owner, fuses, expiry);\\n        emit TransferSingle(msg.sender, address(0x0), owner, tokenId, 1);\\n        _doSafeTransferAcceptanceCheck(\\n            msg.sender,\\n            address(0),\\n            owner,\\n            tokenId,\\n            1,\\n            \\\"\\\"\\n        );\\n    }\\n\\n    function _burn(uint256 tokenId) internal virtual {\\n        (address oldOwner, uint32 fuses, uint64 expiry) = ERC1155Fuse.getData(\\n            tokenId\\n        );\\n        (, fuses) = _clearOwnerAndFuses(oldOwner, fuses, expiry);\\n        // Fuses and expiry are kept on burn\\n        _setData(tokenId, address(0x0), fuses, expiry);\\n        emit TransferSingle(msg.sender, oldOwner, address(0x0), tokenId, 1);\\n    }\\n\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal {\\n        (address oldOwner, uint32 fuses, uint64 expiry) = getData(id);\\n\\n        _preTransferCheck(id, fuses, expiry);\\n\\n        require(\\n            amount == 1 && oldOwner == from,\\n            \\\"ERC1155: insufficient balance for transfer\\\"\\n        );\\n\\n        if (oldOwner == to) {\\n            return;\\n        }\\n\\n        _setData(id, to, fuses, expiry);\\n\\n        emit TransferSingle(msg.sender, from, to, id, amount);\\n\\n        _doSafeTransferAcceptanceCheck(msg.sender, from, to, id, amount, data);\\n    }\\n\\n    function _doSafeTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try\\n                IERC1155Receiver(to).onERC1155Received(\\n                    operator,\\n                    from,\\n                    id,\\n                    amount,\\n                    data\\n                )\\n            returns (bytes4 response) {\\n                if (\\n                    response != IERC1155Receiver(to).onERC1155Received.selector\\n                ) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _doSafeBatchTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try\\n                IERC1155Receiver(to).onERC1155BatchReceived(\\n                    operator,\\n                    from,\\n                    ids,\\n                    amounts,\\n                    data\\n                )\\n            returns (bytes4 response) {\\n                if (\\n                    response !=\\n                    IERC1155Receiver(to).onERC1155BatchReceived.selector\\n                ) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x51b40cc5f2af5b3ea265af206aa5d8d80da5a5470d4751e05c9670cd1dc5441a\",\"license\":\"MIT\"},\"contracts/wrapper/IMetadataService.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ~0.8.17;\\n\\ninterface IMetadataService {\\n    function uri(uint256) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xb3f1cf6df01ed7b15e5f2318f6823afbdb586ca38c2124c67955c645647ae9a2\",\"license\":\"MIT\"},\"contracts/wrapper/INameWrapper.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ~0.8.17;\\n\\nimport \\\"../registry/ENS.sol\\\";\\nimport \\\"../ethregistrar/IBaseRegistrar.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\\\";\\nimport \\\"./IMetadataService.sol\\\";\\n\\nuint32 constant CANNOT_UNWRAP = 1;\\nuint32 constant CANNOT_BURN_FUSES = 2;\\nuint32 constant CANNOT_TRANSFER = 4;\\nuint32 constant CANNOT_SET_RESOLVER = 8;\\nuint32 constant CANNOT_SET_TTL = 16;\\nuint32 constant CANNOT_CREATE_SUBDOMAIN = 32;\\n//uint16 reserved for parent controlled fuses from bit 17 to bit 32\\nuint32 constant PARENT_CANNOT_CONTROL = 1 << 16;\\nuint32 constant IS_DOT_ETH = 1 << 17;\\nuint32 constant CAN_EXTEND_EXPIRY = 1 << 18;\\nuint32 constant CAN_DO_EVERYTHING = 0;\\nuint32 constant PARENT_CONTROLLED_FUSES = 0xFFFF0000;\\n// all fuses apart from IS_DOT_ETH\\nuint32 constant USER_SETTABLE_FUSES = 0xFFFDFFFF;\\n\\ninterface INameWrapper is IERC1155 {\\n    event NameWrapped(\\n        bytes32 indexed node,\\n        bytes name,\\n        address owner,\\n        uint32 fuses,\\n        uint64 expiry\\n    );\\n\\n    event NameUnwrapped(bytes32 indexed node, address owner);\\n\\n    event FusesSet(bytes32 indexed node, uint32 fuses);\\n    event ExpiryExtended(bytes32 indexed node, uint64 expiry);\\n\\n    function ens() external view returns (ENS);\\n\\n    function registrar() external view returns (IBaseRegistrar);\\n\\n    function metadataService() external view returns (IMetadataService);\\n\\n    function names(bytes32) external view returns (bytes memory);\\n\\n    function wrap(\\n        bytes calldata name,\\n        address wrappedOwner,\\n        address resolver\\n    ) external;\\n\\n    function wrapETH2LD(\\n        string calldata label,\\n        address wrappedOwner,\\n        uint16 ownerControlledFuses,\\n        address resolver\\n    ) external;\\n\\n    function registerAndWrapETH2LD(\\n        string calldata label,\\n        address wrappedOwner,\\n        uint256 duration,\\n        address resolver,\\n        uint16 ownerControlledFuses\\n    ) external returns (uint256 registrarExpiry);\\n\\n    function renew(uint256 labelHash, uint256 duration)\\n        external\\n        returns (uint256 expires);\\n\\n    function unwrap(\\n        bytes32 node,\\n        bytes32 label,\\n        address owner\\n    ) external;\\n\\n    function unwrapETH2LD(\\n        bytes32 label,\\n        address newRegistrant,\\n        address newController\\n    ) external;\\n\\n    function setFuses(bytes32 node, uint16 ownerControlledFuses)\\n        external\\n        returns (uint32 newFuses);\\n\\n    function setChildFuses(\\n        bytes32 parentNode,\\n        bytes32 labelhash,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) external;\\n\\n    function setSubnodeRecord(\\n        bytes32 node,\\n        string calldata label,\\n        address owner,\\n        address resolver,\\n        uint64 ttl,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) external returns (bytes32);\\n\\n    function setRecord(\\n        bytes32 node,\\n        address owner,\\n        address resolver,\\n        uint64 ttl\\n    ) external;\\n\\n    function setSubnodeOwner(\\n        bytes32 node,\\n        string calldata label,\\n        address newOwner,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) external returns (bytes32);\\n\\n    function extendExpiry(\\n        bytes32 node,\\n        bytes32 labelhash,\\n        uint64 expiry\\n    ) external returns (uint64);\\n\\n    function canModifyName(bytes32 node, address addr) external returns (bool);\\n\\n    function setResolver(bytes32 node, address resolver) external;\\n\\n    function setTTL(bytes32 node, uint64 ttl) external;\\n\\n    function ownerOf(uint256 id) external returns (address owner);\\n\\n    function getData(uint256 id)\\n        external\\n        returns (\\n            address,\\n            uint32,\\n            uint64\\n        );\\n\\n    function allFusesBurned(bytes32 node, uint32 fuseMask)\\n        external\\n        view\\n        returns (bool);\\n}\\n\",\"keccak256\":\"0xa10bff4b7787a78a38f0562310204007ac99bfe8b2aeb212897197c4118a578a\",\"license\":\"MIT\"},\"contracts/wrapper/INameWrapperUpgrade.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ~0.8.17;\\n\\ninterface INameWrapperUpgrade {\\n    function setSubnodeRecord(\\n        bytes32 parentNode,\\n        string calldata label,\\n        address owner,\\n        address resolver,\\n        uint64 ttl,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) external;\\n\\n    function wrapETH2LD(\\n        string calldata label,\\n        address wrappedOwner,\\n        uint32 fuses,\\n        uint64 expiry,\\n        address resolver\\n    ) external;\\n}\\n\",\"keccak256\":\"0x40b2719f8a3c5f037dd7c827fd5e694d0e5485bbbca4e66aa9334e097f3d2854\",\"license\":\"MIT\"},\"contracts/wrapper/NameWrapper.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ~0.8.17;\\n\\nimport {ERC1155Fuse, IERC165} from \\\"./ERC1155Fuse.sol\\\";\\nimport {Controllable} from \\\"./Controllable.sol\\\";\\nimport {INameWrapper, CANNOT_UNWRAP, CANNOT_BURN_FUSES, CANNOT_TRANSFER, CANNOT_SET_RESOLVER, CANNOT_SET_TTL, CANNOT_CREATE_SUBDOMAIN, PARENT_CANNOT_CONTROL, CAN_DO_EVERYTHING, IS_DOT_ETH, CAN_EXTEND_EXPIRY, PARENT_CONTROLLED_FUSES, USER_SETTABLE_FUSES} from \\\"./INameWrapper.sol\\\";\\nimport {INameWrapperUpgrade} from \\\"./INameWrapperUpgrade.sol\\\";\\nimport {IMetadataService} from \\\"./IMetadataService.sol\\\";\\nimport {ENS} from \\\"../registry/ENS.sol\\\";\\nimport {IBaseRegistrar} from \\\"../ethregistrar/IBaseRegistrar.sol\\\";\\nimport {IERC721Receiver} from \\\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\\\";\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport {BytesUtils} from \\\"./BytesUtils.sol\\\";\\nimport {ERC20Recoverable} from \\\"../utils/ERC20Recoverable.sol\\\";\\n\\nerror Unauthorised(bytes32 node, address addr);\\nerror IncompatibleParent();\\nerror IncorrectTokenType();\\nerror LabelMismatch(bytes32 labelHash, bytes32 expectedLabelhash);\\nerror LabelTooShort();\\nerror LabelTooLong(string label);\\nerror IncorrectTargetOwner(address owner);\\nerror CannotUpgrade();\\nerror OperationProhibited(bytes32 node);\\nerror NameIsNotWrapped();\\nerror NameIsStillExpired();\\n\\ncontract NameWrapper is\\n    Ownable,\\n    ERC1155Fuse,\\n    INameWrapper,\\n    Controllable,\\n    IERC721Receiver,\\n    ERC20Recoverable\\n{\\n    using BytesUtils for bytes;\\n\\n    ENS public immutable override ens;\\n    IBaseRegistrar public immutable override registrar;\\n    IMetadataService public override metadataService;\\n    mapping(bytes32 => bytes) public override names;\\n    string public constant name = \\\"NameWrapper\\\";\\n\\n    uint64 private constant GRACE_PERIOD = 90 days;\\n    bytes32 private constant ETH_NODE =\\n        0x93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae;\\n    bytes32 private constant ETH_LABELHASH =\\n        0x4f5b812789fc606be1b3b16908db13fc7a9adf7ca72641f84d75b47069d3d7f0;\\n    bytes32 private constant ROOT_NODE =\\n        0x0000000000000000000000000000000000000000000000000000000000000000;\\n\\n    INameWrapperUpgrade public upgradeContract;\\n    uint64 private constant MAX_EXPIRY = type(uint64).max;\\n\\n    constructor(\\n        ENS _ens,\\n        IBaseRegistrar _registrar,\\n        IMetadataService _metadataService\\n    ) {\\n        ens = _ens;\\n        registrar = _registrar;\\n        metadataService = _metadataService;\\n\\n        /* Burn PARENT_CANNOT_CONTROL and CANNOT_UNWRAP fuses for ROOT_NODE and ETH_NODE */\\n\\n        _setData(\\n            uint256(ETH_NODE),\\n            address(0),\\n            uint32(PARENT_CANNOT_CONTROL | CANNOT_UNWRAP),\\n            MAX_EXPIRY\\n        );\\n        _setData(\\n            uint256(ROOT_NODE),\\n            address(0),\\n            uint32(PARENT_CANNOT_CONTROL | CANNOT_UNWRAP),\\n            MAX_EXPIRY\\n        );\\n        names[ROOT_NODE] = \\\"\\\\x00\\\";\\n        names[ETH_NODE] = \\\"\\\\x03eth\\\\x00\\\";\\n    }\\n\\n    function supportsInterface(bytes4 interfaceId)\\n        public\\n        view\\n        virtual\\n        override(ERC1155Fuse, IERC165)\\n        returns (bool)\\n    {\\n        return\\n            interfaceId == type(INameWrapper).interfaceId ||\\n            interfaceId == type(IERC721Receiver).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /* ERC1155 Fuse */\\n\\n    /**\\n     * @notice Gets the owner of a name\\n     * @param id Label as a string of the .eth domain to wrap\\n     * @return owner The owner of the name\\n     */\\n\\n    function ownerOf(uint256 id)\\n        public\\n        view\\n        override(ERC1155Fuse, INameWrapper)\\n        returns (address owner)\\n    {\\n        return super.ownerOf(id);\\n    }\\n\\n    /**\\n     * @notice Gets the data for a name\\n     * @param id Namehash of the name\\n     * @return owner Owner of the name\\n     * @return fuses Fuses of the name\\n     * @return expiry Expiry of the name\\n     */\\n\\n    function getData(uint256 id)\\n        public\\n        view\\n        override(ERC1155Fuse, INameWrapper)\\n        returns (\\n            address owner,\\n            uint32 fuses,\\n            uint64 expiry\\n        )\\n    {\\n        (owner, fuses, expiry) = super.getData(id);\\n\\n        (owner, fuses) = _clearOwnerAndFuses(owner, fuses, expiry);\\n    }\\n\\n    /* Metadata service */\\n\\n    /**\\n     * @notice Set the metadata service. Only the owner can do this\\n     * @param _metadataService The new metadata service\\n     */\\n\\n    function setMetadataService(IMetadataService _metadataService)\\n        public\\n        onlyOwner\\n    {\\n        metadataService = _metadataService;\\n    }\\n\\n    /**\\n     * @notice Get the metadata uri\\n     * @param tokenId The id of the token\\n     * @return string uri of the metadata service\\n     */\\n\\n    function uri(uint256 tokenId) public view override returns (string memory) {\\n        return metadataService.uri(tokenId);\\n    }\\n\\n    /**\\n     * @notice Set the address of the upgradeContract of the contract. only admin can do this\\n     * @dev The default value of upgradeContract is the 0 address. Use the 0 address at any time\\n     * to make the contract not upgradable.\\n     * @param _upgradeAddress address of an upgraded contract\\n     */\\n\\n    function setUpgradeContract(INameWrapperUpgrade _upgradeAddress)\\n        public\\n        onlyOwner\\n    {\\n        if (address(upgradeContract) != address(0)) {\\n            registrar.setApprovalForAll(address(upgradeContract), false);\\n            ens.setApprovalForAll(address(upgradeContract), false);\\n        }\\n\\n        upgradeContract = _upgradeAddress;\\n\\n        if (address(upgradeContract) != address(0)) {\\n            registrar.setApprovalForAll(address(upgradeContract), true);\\n            ens.setApprovalForAll(address(upgradeContract), true);\\n        }\\n    }\\n\\n    /**\\n     * @notice Checks if msg.sender is the owner or approved by the owner of a name\\n     * @param node namehash of the name to check\\n     */\\n\\n    modifier onlyTokenOwner(bytes32 node) {\\n        if (!canModifyName(node, msg.sender)) {\\n            revert Unauthorised(node, msg.sender);\\n        }\\n\\n        _;\\n    }\\n\\n    /**\\n     * @notice Checks if owner or approved by owner\\n     * @param node namehash of the name to check\\n     * @param addr which address to check permissions for\\n     * @return whether or not is owner or approved\\n     */\\n\\n    function canModifyName(bytes32 node, address addr)\\n        public\\n        view\\n        override\\n        returns (bool)\\n    {\\n        (address owner, uint32 fuses, uint64 expiry) = getData(uint256(node));\\n        return\\n            (owner == addr || isApprovedForAll(owner, addr)) &&\\n            (fuses & IS_DOT_ETH == 0 ||\\n                expiry - GRACE_PERIOD >= block.timestamp);\\n    }\\n\\n    /**\\n     * @notice Wraps a .eth domain, creating a new token and sending the original ERC721 token to this contract\\n     * @dev Can be called by the owner of the name on the .eth registrar or an authorised caller on the registrar\\n     * @param label Label as a string of the .eth domain to wrap\\n     * @param wrappedOwner Owner of the name in this contract\\n     * @param ownerControlledFuses Initial owner-controlled fuses to set\\n     * @param resolver Resolver contract address\\n     */\\n\\n    function wrapETH2LD(\\n        string calldata label,\\n        address wrappedOwner,\\n        uint16 ownerControlledFuses,\\n        address resolver\\n    ) public override {\\n        uint256 tokenId = uint256(keccak256(bytes(label)));\\n        address registrant = registrar.ownerOf(tokenId);\\n        if (\\n            registrant != msg.sender &&\\n            !registrar.isApprovedForAll(registrant, msg.sender)\\n        ) {\\n            revert Unauthorised(\\n                _makeNode(ETH_NODE, bytes32(tokenId)),\\n                msg.sender\\n            );\\n        }\\n\\n        // transfer the token from the user to this contract\\n        registrar.transferFrom(registrant, address(this), tokenId);\\n\\n        // transfer the ens record back to the new owner (this contract)\\n        registrar.reclaim(tokenId, address(this));\\n\\n        _wrapETH2LD(label, wrappedOwner, ownerControlledFuses, resolver);\\n    }\\n\\n    /**\\n     * @dev Registers a new .eth second-level domain and wraps it.\\n     *      Only callable by authorised controllers.\\n     * @param label The label to register (Eg, 'foo' for 'foo.eth').\\n     * @param wrappedOwner The owner of the wrapped name.\\n     * @param duration The duration, in seconds, to register the name for.\\n     * @param resolver The resolver address to set on the ENS registry (optional).\\n     * @param ownerControlledFuses Initial owner-controlled fuses to set\\n     * @return registrarExpiry The expiry date of the new name on the .eth registrar, in seconds since the Unix epoch.\\n     */\\n\\n    function registerAndWrapETH2LD(\\n        string calldata label,\\n        address wrappedOwner,\\n        uint256 duration,\\n        address resolver,\\n        uint16 ownerControlledFuses\\n    ) external override onlyController returns (uint256 registrarExpiry) {\\n        uint256 tokenId = uint256(keccak256(bytes(label)));\\n        registrarExpiry = registrar.register(tokenId, address(this), duration);\\n        _wrapETH2LD(label, wrappedOwner, ownerControlledFuses, resolver);\\n    }\\n\\n    /**\\n     * @notice Renews a .eth second-level domain.\\n     * @dev Only callable by authorised controllers.\\n     * @param tokenId The hash of the label to register (eg, `keccak256('foo')`, for 'foo.eth').\\n     * @param duration The number of seconds to renew the name for.\\n     * @return expires The expiry date of the name on the .eth registrar, in seconds since the Unix epoch.\\n     */\\n\\n    function renew(uint256 tokenId, uint256 duration)\\n        external\\n        override\\n        onlyController\\n        returns (uint256 expires)\\n    {\\n        bytes32 node = _makeNode(ETH_NODE, bytes32(tokenId));\\n\\n        uint256 registrarExpiry = registrar.renew(tokenId, duration);\\n\\n        // Do not set anything in wrapper if name is not wrapped\\n        try registrar.ownerOf(tokenId) returns (address registrarOwner) {\\n            if (\\n                registrarOwner != address(this) ||\\n                ens.owner(node) != address(this)\\n            ) {\\n                return registrarExpiry;\\n            }\\n        } catch {\\n            return registrarExpiry;\\n        }\\n\\n        // set expiry in Wrapper\\n        uint64 expiry = uint64(registrarExpiry) + GRACE_PERIOD;\\n\\n        //use super to allow names expired on the wrapper, but not expired on the registrar to renew()\\n        (address owner, uint32 fuses, ) = super.getData(uint256(node));\\n        _setData(node, owner, fuses, expiry);\\n\\n        return registrarExpiry;\\n    }\\n\\n    /**\\n     * @notice Wraps a non .eth domain, of any kind. Could be a DNSSEC name vitalik.xyz or a subdomain\\n     * @dev Can be called by the owner in the registry or an authorised caller in the registry\\n     * @param name The name to wrap, in DNS format\\n     * @param wrappedOwner Owner of the name in this contract\\n     * @param resolver Resolver contract\\n     */\\n\\n    function wrap(\\n        bytes calldata name,\\n        address wrappedOwner,\\n        address resolver\\n    ) public override {\\n        (bytes32 labelhash, uint256 offset) = name.readLabel(0);\\n        bytes32 parentNode = name.namehash(offset);\\n        bytes32 node = _makeNode(parentNode, labelhash);\\n\\n        names[node] = name;\\n\\n        if (parentNode == ETH_NODE) {\\n            revert IncompatibleParent();\\n        }\\n\\n        address owner = ens.owner(node);\\n\\n        if (owner != msg.sender && !ens.isApprovedForAll(owner, msg.sender)) {\\n            revert Unauthorised(node, msg.sender);\\n        }\\n\\n        if (resolver != address(0)) {\\n            ens.setResolver(node, resolver);\\n        }\\n\\n        ens.setOwner(node, address(this));\\n\\n        _wrap(node, name, wrappedOwner, 0, 0);\\n    }\\n\\n    /**\\n     * @notice Unwraps a .eth domain. e.g. vitalik.eth\\n     * @dev Can be called by the owner in the wrapper or an authorised caller in the wrapper\\n     * @param labelhash Labelhash of the .eth domain\\n     * @param registrant Sets the owner in the .eth registrar to this address\\n     * @param controller Sets the owner in the registry to this address\\n     */\\n\\n    function unwrapETH2LD(\\n        bytes32 labelhash,\\n        address registrant,\\n        address controller\\n    ) public override onlyTokenOwner(_makeNode(ETH_NODE, labelhash)) {\\n        if (registrant == address(this)) {\\n            revert IncorrectTargetOwner(registrant);\\n        }\\n        _unwrap(_makeNode(ETH_NODE, labelhash), controller);\\n        registrar.safeTransferFrom(\\n            address(this),\\n            registrant,\\n            uint256(labelhash)\\n        );\\n    }\\n\\n    /**\\n     * @notice Unwraps a non .eth domain, of any kind. Could be a DNSSEC name vitalik.xyz or a subdomain\\n     * @dev Can be called by the owner in the wrapper or an authorised caller in the wrapper\\n     * @param parentNode Parent namehash of the name e.g. vitalik.xyz would be namehash('xyz')\\n     * @param labelhash Labelhash of the name, e.g. vitalik.xyz would be keccak256('vitalik')\\n     * @param controller Sets the owner in the registry to this address\\n     */\\n\\n    function unwrap(\\n        bytes32 parentNode,\\n        bytes32 labelhash,\\n        address controller\\n    ) public override onlyTokenOwner(_makeNode(parentNode, labelhash)) {\\n        if (parentNode == ETH_NODE) {\\n            revert IncompatibleParent();\\n        }\\n        if (controller == address(0x0) || controller == address(this)) {\\n            revert IncorrectTargetOwner(controller);\\n        }\\n        _unwrap(_makeNode(parentNode, labelhash), controller);\\n    }\\n\\n    /**\\n     * @notice Sets fuses of a name\\n     * @param node Namehash of the name\\n     * @param ownerControlledFuses Owner-controlled fuses to burn\\n     * @return New fuses\\n     */\\n\\n    function setFuses(bytes32 node, uint16 ownerControlledFuses)\\n        public\\n        onlyTokenOwner(node)\\n        operationAllowed(node, CANNOT_BURN_FUSES)\\n        returns (uint32)\\n    {\\n        // owner protected by onlyTokenOwner\\n        (address owner, uint32 oldFuses, uint64 expiry) = getData(\\n            uint256(node)\\n        );\\n        _setFuses(node, owner, ownerControlledFuses | oldFuses, expiry, expiry);\\n        return ownerControlledFuses;\\n    }\\n\\n    /**\\n     * @notice Extends expiry for a name\\n     * @param parentNode Parent namehash of the name e.g. vitalik.xyz would be namehash('xyz')\\n     * @param labelhash Labelhash of the name, e.g. vitalik.xyz would be keccak256('vitalik')\\n     * @param expiry When the name will expire in seconds since the Unix epoch\\n     * @return New expiry\\n     */\\n\\n    function extendExpiry(\\n        bytes32 parentNode,\\n        bytes32 labelhash,\\n        uint64 expiry\\n    ) public returns (uint64) {\\n        bytes32 node = _makeNode(parentNode, labelhash);\\n\\n        // this flag is used later, when checking fuses\\n        bool canModifyParentName = canModifyName(parentNode, msg.sender);\\n        // only allow the owner of the name or owner of the parent name\\n        if (!canModifyParentName && !canModifyName(node, msg.sender)) {\\n            revert Unauthorised(node, msg.sender);\\n        }\\n\\n        (address owner, uint32 fuses, uint64 oldExpiry) = getData(\\n            uint256(node)\\n        );\\n\\n        // Either CAN_EXTEND_EXPIRY must be set, or the caller must have permission to modify the parent name\\n        if (!canModifyParentName && fuses & CAN_EXTEND_EXPIRY == 0) {\\n            revert OperationProhibited(node);\\n        }\\n\\n        // max expiry is set to the expiry of the parent\\n        (, , uint64 maxExpiry) = getData(uint256(parentNode));\\n        expiry = _normaliseExpiry(expiry, oldExpiry, maxExpiry);\\n\\n        _setData(node, owner, fuses, expiry);\\n        emit ExpiryExtended(node, expiry);\\n        return expiry;\\n    }\\n\\n    /**\\n     * @notice Upgrades a .eth wrapped domain by calling the wrapETH2LD function of the upgradeContract\\n     *     and burning the token of this contract\\n     * @dev Can be called by the owner of the name in this contract\\n     * @param label Label as a string of the .eth name to upgrade\\n     * @param wrappedOwner The owner of the wrapped name\\n     */\\n\\n    function upgradeETH2LD(\\n        string calldata label,\\n        address wrappedOwner,\\n        address resolver\\n    ) public {\\n        bytes32 labelhash = keccak256(bytes(label));\\n        bytes32 node = _makeNode(ETH_NODE, labelhash);\\n        (address currentOwner, uint32 fuses, uint64 expiry) = _prepareUpgrade(\\n            node\\n        );\\n\\n        if (wrappedOwner != currentOwner) {\\n            _preTransferCheck(uint256(node), fuses, expiry);\\n        }\\n\\n        upgradeContract.wrapETH2LD(\\n            label,\\n            wrappedOwner,\\n            fuses,\\n            expiry,\\n            resolver\\n        );\\n    }\\n\\n    /**\\n     * @notice Upgrades a non .eth domain of any kind. Could be a DNSSEC name vitalik.xyz or a subdomain\\n     * @dev Can be called by the owner or an authorised caller\\n     * Requires upgraded Namewrapper to permit old Namewrapper to call `setSubnodeRecord` for all names\\n     * @param parentNode Namehash of the parent name\\n     * @param label Label as a string of the name to upgrade\\n     * @param wrappedOwner Owner of the name in this contract\\n     * @param resolver Resolver contract for this name\\n     */\\n\\n    function upgrade(\\n        bytes32 parentNode,\\n        string calldata label,\\n        address wrappedOwner,\\n        address resolver\\n    ) public {\\n        bytes32 labelhash = keccak256(bytes(label));\\n        bytes32 node = _makeNode(parentNode, labelhash);\\n        (address currentOwner, uint32 fuses, uint64 expiry) = _prepareUpgrade(\\n            node\\n        );\\n\\n        if (wrappedOwner != currentOwner) {\\n            _preTransferCheck(uint256(node), fuses, expiry);\\n        }\\n\\n        upgradeContract.setSubnodeRecord(\\n            parentNode,\\n            label,\\n            wrappedOwner,\\n            resolver,\\n            0,\\n            fuses,\\n            expiry\\n        );\\n    }\\n\\n    /** \\n    /* @notice Sets fuses of a name that you own the parent of. Can also be called by the owner of a .eth name\\n     * @param parentNode Parent namehash of the name e.g. vitalik.xyz would be namehash('xyz')\\n     * @param labelhash Labelhash of the name, e.g. vitalik.xyz would be keccak256('vitalik')\\n     * @param fuses Fuses to burn\\n     * @param expiry When the name will expire in seconds since the Unix epoch\\n     */\\n\\n    function setChildFuses(\\n        bytes32 parentNode,\\n        bytes32 labelhash,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) public {\\n        bytes32 node = _makeNode(parentNode, labelhash);\\n        _checkFusesAreSettable(node, fuses);\\n        (address owner, uint32 oldFuses, uint64 oldExpiry) = getData(\\n            uint256(node)\\n        );\\n        if (owner == address(0) || ens.owner(node) != address(this)) {\\n            revert NameIsNotWrapped();\\n        }\\n        // max expiry is set to the expiry of the parent\\n        (, uint32 parentFuses, uint64 maxExpiry) = getData(uint256(parentNode));\\n        if (parentNode == ROOT_NODE) {\\n            if (!canModifyName(node, msg.sender)) {\\n                revert Unauthorised(node, msg.sender);\\n            }\\n        } else {\\n            if (!canModifyName(parentNode, msg.sender)) {\\n                revert Unauthorised(node, msg.sender);\\n            }\\n        }\\n\\n        _checkParentFuses(node, fuses, parentFuses);\\n\\n        expiry = _normaliseExpiry(expiry, oldExpiry, maxExpiry);\\n\\n        // if PARENT_CANNOT_CONTROL has been burned and fuses have changed\\n        if (\\n            oldFuses & PARENT_CANNOT_CONTROL != 0 &&\\n            oldFuses | fuses != oldFuses\\n        ) {\\n            revert OperationProhibited(node);\\n        }\\n        fuses |= oldFuses;\\n        _setFuses(node, owner, fuses, oldExpiry, expiry);\\n    }\\n\\n    /**\\n     * @notice Sets the subdomain owner in the registry and then wraps the subdomain\\n     * @param parentNode Parent namehash of the subdomain\\n     * @param label Label of the subdomain as a string\\n     * @param owner New owner in the wrapper\\n     * @param fuses Initial fuses for the wrapped subdomain\\n     * @param expiry When the name will expire in seconds since the Unix epoch\\n     * @return node Namehash of the subdomain\\n     */\\n\\n    function setSubnodeOwner(\\n        bytes32 parentNode,\\n        string calldata label,\\n        address owner,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) public onlyTokenOwner(parentNode) returns (bytes32 node) {\\n        bytes32 labelhash = keccak256(bytes(label));\\n        node = _makeNode(parentNode, labelhash);\\n        _checkCanCallSetSubnodeOwner(parentNode, node);\\n        _checkFusesAreSettable(node, fuses);\\n        bytes memory name = _saveLabel(parentNode, node, label);\\n        expiry = _checkParentFusesAndExpiry(parentNode, node, fuses, expiry);\\n\\n        if (!isWrapped(node)) {\\n            ens.setSubnodeOwner(parentNode, labelhash, address(this));\\n            _wrap(node, name, owner, fuses, expiry);\\n        } else {\\n            _updateName(parentNode, node, label, owner, fuses, expiry);\\n        }\\n    }\\n\\n    /**\\n     * @notice Sets the subdomain owner in the registry with records and then wraps the subdomain\\n     * @param parentNode parent namehash of the subdomain\\n     * @param label label of the subdomain as a string\\n     * @param owner new owner in the wrapper\\n     * @param resolver resolver contract in the registry\\n     * @param ttl ttl in the registry\\n     * @param fuses initial fuses for the wrapped subdomain\\n     * @param expiry When the name will expire in seconds since the Unix epoch\\n     * @return node Namehash of the subdomain\\n     */\\n\\n    function setSubnodeRecord(\\n        bytes32 parentNode,\\n        string memory label,\\n        address owner,\\n        address resolver,\\n        uint64 ttl,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) public onlyTokenOwner(parentNode) returns (bytes32 node) {\\n        bytes32 labelhash = keccak256(bytes(label));\\n        node = _makeNode(parentNode, labelhash);\\n        _checkCanCallSetSubnodeOwner(parentNode, node);\\n        _checkFusesAreSettable(node, fuses);\\n        _saveLabel(parentNode, node, label);\\n        expiry = _checkParentFusesAndExpiry(parentNode, node, fuses, expiry);\\n        if (!isWrapped(node)) {\\n            ens.setSubnodeRecord(\\n                parentNode,\\n                labelhash,\\n                address(this),\\n                resolver,\\n                ttl\\n            );\\n            _storeNameAndWrap(parentNode, node, label, owner, fuses, expiry);\\n        } else {\\n            ens.setSubnodeRecord(\\n                parentNode,\\n                labelhash,\\n                address(this),\\n                resolver,\\n                ttl\\n            );\\n            _updateName(parentNode, node, label, owner, fuses, expiry);\\n        }\\n    }\\n\\n    /**\\n     * @notice Sets records for the name in the ENS Registry\\n     * @param node Namehash of the name to set a record for\\n     * @param owner New owner in the registry\\n     * @param resolver Resolver contract\\n     * @param ttl Time to live in the registry\\n     */\\n\\n    function setRecord(\\n        bytes32 node,\\n        address owner,\\n        address resolver,\\n        uint64 ttl\\n    )\\n        public\\n        override\\n        onlyTokenOwner(node)\\n        operationAllowed(\\n            node,\\n            CANNOT_TRANSFER | CANNOT_SET_RESOLVER | CANNOT_SET_TTL\\n        )\\n    {\\n        ens.setRecord(node, address(this), resolver, ttl);\\n        if (owner == address(0)) {\\n            (, uint32 fuses, ) = getData(uint256(node));\\n            if (fuses & IS_DOT_ETH == IS_DOT_ETH) {\\n                revert IncorrectTargetOwner(owner);\\n            }\\n            _unwrap(node, address(0));\\n        } else {\\n            address oldOwner = ownerOf(uint256(node));\\n            _transfer(oldOwner, owner, uint256(node), 1, \\\"\\\");\\n        }\\n    }\\n\\n    /**\\n     * @notice Sets resolver contract in the registry\\n     * @param node namehash of the name\\n     * @param resolver the resolver contract\\n     */\\n\\n    function setResolver(bytes32 node, address resolver)\\n        public\\n        override\\n        onlyTokenOwner(node)\\n        operationAllowed(node, CANNOT_SET_RESOLVER)\\n    {\\n        ens.setResolver(node, resolver);\\n    }\\n\\n    /**\\n     * @notice Sets TTL in the registry\\n     * @param node Namehash of the name\\n     * @param ttl TTL in the registry\\n     */\\n\\n    function setTTL(bytes32 node, uint64 ttl)\\n        public\\n        override\\n        onlyTokenOwner(node)\\n        operationAllowed(node, CANNOT_SET_TTL)\\n    {\\n        ens.setTTL(node, ttl);\\n    }\\n\\n    /**\\n     * @dev Allows an operation only if none of the specified fuses are burned.\\n     * @param node The namehash of the name to check fuses on.\\n     * @param fuseMask A bitmask of fuses that must not be burned.\\n     */\\n\\n    modifier operationAllowed(bytes32 node, uint32 fuseMask) {\\n        (, uint32 fuses, ) = getData(uint256(node));\\n        if (fuses & fuseMask != 0) {\\n            revert OperationProhibited(node);\\n        }\\n        _;\\n    }\\n\\n    /**\\n     * @notice Check whether a name can call setSubnodeOwner/setSubnodeRecord\\n     * @dev Checks both CANNOT_CREATE_SUBDOMAIN and PARENT_CANNOT_CONTROL and whether not they have been burnt\\n     *      and checks whether the owner of the subdomain is 0x0 for creating or already exists for\\n     *      replacing a subdomain. If either conditions are true, then it is possible to call\\n     *      setSubnodeOwner\\n     * @param parentNode Namehash of the parent name to check\\n     * @param subnode Namehash of the subname to check\\n     */\\n\\n    function _checkCanCallSetSubnodeOwner(bytes32 parentNode, bytes32 subnode)\\n        internal\\n        view\\n    {\\n        (\\n            address subnodeOwner,\\n            uint32 subnodeFuses,\\n            uint64 subnodeExpiry\\n        ) = getData(uint256(subnode));\\n\\n        // check if the registry owner is 0 and expired\\n        // check if the wrapper owner is 0 and expired\\n        // If either, then check parent fuses for CANNOT_CREATE_SUBDOMAIN\\n        bool expired = subnodeExpiry < block.timestamp;\\n        if (\\n            expired &&\\n            // protects a name that has been unwrapped with PCC and doesn't allow the parent to take control by recreating it if unexpired\\n            (subnodeOwner == address(0) ||\\n                // protects a name that has been burnt and doesn't allow the parent to take control by recreating it if unexpired\\n                ens.owner(subnode) == address(0))\\n        ) {\\n            (, uint32 parentFuses, ) = getData(uint256(parentNode));\\n            if (parentFuses & CANNOT_CREATE_SUBDOMAIN != 0) {\\n                revert OperationProhibited(subnode);\\n            }\\n        } else {\\n            if (subnodeFuses & PARENT_CANNOT_CONTROL != 0) {\\n                revert OperationProhibited(subnode);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Checks all Fuses in the mask are burned for the node\\n     * @param node Namehash of the name\\n     * @param fuseMask The fuses you want to check\\n     * @return Boolean of whether or not all the selected fuses are burned\\n     */\\n\\n    function allFusesBurned(bytes32 node, uint32 fuseMask)\\n        public\\n        view\\n        override\\n        returns (bool)\\n    {\\n        (, uint32 fuses, ) = getData(uint256(node));\\n        return fuses & fuseMask == fuseMask;\\n    }\\n\\n    function isWrapped(bytes32 node) public view returns (bool) {\\n        return\\n            ownerOf(uint256(node)) != address(0) &&\\n            ens.owner(node) == address(this);\\n    }\\n\\n    function onERC721Received(\\n        address to,\\n        address,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) public override returns (bytes4) {\\n        //check if it's the eth registrar ERC721\\n        if (msg.sender != address(registrar)) {\\n            revert IncorrectTokenType();\\n        }\\n\\n        (\\n            string memory label,\\n            address owner,\\n            uint16 ownerControlledFuses,\\n            address resolver\\n        ) = abi.decode(data, (string, address, uint16, address));\\n\\n        bytes32 labelhash = bytes32(tokenId);\\n        bytes32 labelhashFromData = keccak256(bytes(label));\\n\\n        if (labelhashFromData != labelhash) {\\n            revert LabelMismatch(labelhashFromData, labelhash);\\n        }\\n\\n        // transfer the ens record back to the new owner (this contract)\\n        registrar.reclaim(uint256(labelhash), address(this));\\n\\n        _wrapETH2LD(label, owner, ownerControlledFuses, resolver);\\n\\n        return IERC721Receiver(to).onERC721Received.selector;\\n    }\\n\\n    /***** Internal functions */\\n\\n    function _preTransferCheck(\\n        uint256 id,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) internal view override returns (bool) {\\n        // For this check, treat .eth 2LDs as expiring at the start of the grace period.\\n        if (fuses & IS_DOT_ETH == IS_DOT_ETH) {\\n            expiry -= GRACE_PERIOD;\\n        }\\n\\n        if (expiry < block.timestamp) {\\n            // Transferable if the name was not emancipated\\n            if (fuses & PARENT_CANNOT_CONTROL != 0) {\\n                revert(\\\"ERC1155: insufficient balance for transfer\\\");\\n            }\\n        } else {\\n            // Transferable if CANNOT_TRANSFER is unburned\\n            if (fuses & CANNOT_TRANSFER != 0) {\\n                revert OperationProhibited(bytes32(id));\\n            }\\n        }\\n    }\\n\\n    function _clearOwnerAndFuses(\\n        address owner,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) internal view override returns (address, uint32) {\\n        if (expiry < block.timestamp) {\\n            if (fuses & PARENT_CANNOT_CONTROL == PARENT_CANNOT_CONTROL) {\\n                owner = address(0);\\n            }\\n            fuses = 0;\\n        }\\n\\n        return (owner, fuses);\\n    }\\n\\n    function _makeNode(bytes32 node, bytes32 labelhash)\\n        private\\n        pure\\n        returns (bytes32)\\n    {\\n        return keccak256(abi.encodePacked(node, labelhash));\\n    }\\n\\n    function _addLabel(string memory label, bytes memory name)\\n        internal\\n        pure\\n        returns (bytes memory ret)\\n    {\\n        if (bytes(label).length < 1) {\\n            revert LabelTooShort();\\n        }\\n        if (bytes(label).length > 255) {\\n            revert LabelTooLong(label);\\n        }\\n        return abi.encodePacked(uint8(bytes(label).length), label, name);\\n    }\\n\\n    function _mint(\\n        bytes32 node,\\n        address owner,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) internal override {\\n        _canFusesBeBurned(node, fuses);\\n        (address oldOwner, , ) = super.getData(uint256(node));\\n        if (oldOwner != address(0)) {\\n            // burn and unwrap old token of old owner\\n            _burn(uint256(node));\\n            emit NameUnwrapped(node, address(0));\\n        }\\n        super._mint(node, owner, fuses, expiry);\\n    }\\n\\n    function _wrap(\\n        bytes32 node,\\n        bytes memory name,\\n        address wrappedOwner,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) internal {\\n        _mint(node, wrappedOwner, fuses, expiry);\\n        emit NameWrapped(node, name, wrappedOwner, fuses, expiry);\\n    }\\n\\n    function _storeNameAndWrap(\\n        bytes32 parentNode,\\n        bytes32 node,\\n        string memory label,\\n        address owner,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) internal {\\n        bytes memory name = _addLabel(label, names[parentNode]);\\n        _wrap(node, name, owner, fuses, expiry);\\n    }\\n\\n    function _saveLabel(\\n        bytes32 parentNode,\\n        bytes32 node,\\n        string memory label\\n    ) internal returns (bytes memory) {\\n        bytes memory name = _addLabel(label, names[parentNode]);\\n        names[node] = name;\\n        return name;\\n    }\\n\\n    function _prepareUpgrade(bytes32 node)\\n        private\\n        returns (\\n            address owner,\\n            uint32 fuses,\\n            uint64 expiry\\n        )\\n    {\\n        if (address(upgradeContract) == address(0)) {\\n            revert CannotUpgrade();\\n        }\\n\\n        if (!canModifyName(node, msg.sender)) {\\n            revert Unauthorised(node, msg.sender);\\n        }\\n\\n        (owner, fuses, expiry) = getData(uint256(node));\\n\\n        _burn(uint256(node));\\n    }\\n\\n    function _updateName(\\n        bytes32 parentNode,\\n        bytes32 node,\\n        string memory label,\\n        address owner,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) internal {\\n        (address oldOwner, uint32 oldFuses, uint64 oldExpiry) = getData(\\n            uint256(node)\\n        );\\n        bytes memory name = _addLabel(label, names[parentNode]);\\n        if (names[node].length == 0) {\\n            names[node] = name;\\n        }\\n        _setFuses(node, oldOwner, oldFuses | fuses, oldExpiry, expiry);\\n        if (owner == address(0)) {\\n            _unwrap(node, address(0));\\n        } else {\\n            _transfer(oldOwner, owner, uint256(node), 1, \\\"\\\");\\n        }\\n    }\\n\\n    // wrapper function for stack limit\\n    function _checkParentFusesAndExpiry(\\n        bytes32 parentNode,\\n        bytes32 node,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) internal view returns (uint64) {\\n        (, , uint64 oldExpiry) = getData(uint256(node));\\n        (, uint32 parentFuses, uint64 maxExpiry) = getData(uint256(parentNode));\\n        _checkParentFuses(node, fuses, parentFuses);\\n        return _normaliseExpiry(expiry, oldExpiry, maxExpiry);\\n    }\\n\\n    function _checkParentFuses(\\n        bytes32 node,\\n        uint32 fuses,\\n        uint32 parentFuses\\n    ) internal pure {\\n        bool isBurningParentControlledFuses = fuses & PARENT_CONTROLLED_FUSES !=\\n            0;\\n\\n        bool parentHasNotBurnedCU = parentFuses & CANNOT_UNWRAP == 0;\\n\\n        if (isBurningParentControlledFuses && parentHasNotBurnedCU) {\\n            revert OperationProhibited(node);\\n        }\\n    }\\n\\n    function _normaliseExpiry(\\n        uint64 expiry,\\n        uint64 oldExpiry,\\n        uint64 maxExpiry\\n    ) internal pure returns (uint64) {\\n        // Expiry cannot be more than maximum allowed\\n        // .eth names will check registrar, non .eth check parent\\n        if (expiry > maxExpiry) {\\n            expiry = maxExpiry;\\n        }\\n        // Expiry cannot be less than old expiry\\n        if (expiry < oldExpiry) {\\n            expiry = oldExpiry;\\n        }\\n\\n        return expiry;\\n    }\\n\\n    function _wrapETH2LD(\\n        string memory label,\\n        address wrappedOwner,\\n        uint16 ownerControlledFuses,\\n        address resolver\\n    ) private {\\n        bytes32 labelhash = keccak256(bytes(label));\\n        bytes32 node = _makeNode(ETH_NODE, labelhash);\\n        // hardcode dns-encoded eth string for gas savings\\n        bytes memory name = _addLabel(label, \\\"\\\\x03eth\\\\x00\\\");\\n        names[node] = name;\\n\\n        uint64 expiry = uint64(registrar.nameExpires(uint256(labelhash))) +\\n            GRACE_PERIOD;\\n\\n        _wrap(\\n            node,\\n            name,\\n            wrappedOwner,\\n            ownerControlledFuses | PARENT_CANNOT_CONTROL | IS_DOT_ETH,\\n            expiry\\n        );\\n\\n        if (resolver != address(0)) {\\n            ens.setResolver(node, resolver);\\n        }\\n    }\\n\\n    function _unwrap(bytes32 node, address owner) private {\\n        if (allFusesBurned(node, CANNOT_UNWRAP)) {\\n            revert OperationProhibited(node);\\n        }\\n\\n        // Burn token and fuse data\\n        _burn(uint256(node));\\n        ens.setOwner(node, owner);\\n\\n        emit NameUnwrapped(node, owner);\\n    }\\n\\n    function _setFuses(\\n        bytes32 node,\\n        address owner,\\n        uint32 fuses,\\n        uint64 oldExpiry,\\n        uint64 expiry\\n    ) internal {\\n        _setData(node, owner, fuses, expiry);\\n        emit FusesSet(node, fuses);\\n        if (expiry > oldExpiry) {\\n            emit ExpiryExtended(node, expiry);\\n        }\\n    }\\n\\n    function _setData(\\n        bytes32 node,\\n        address owner,\\n        uint32 fuses,\\n        uint64 expiry\\n    ) internal {\\n        _canFusesBeBurned(node, fuses);\\n        super._setData(uint256(node), owner, fuses, expiry);\\n    }\\n\\n    function _canFusesBeBurned(bytes32 node, uint32 fuses) internal pure {\\n        // If a non-parent controlled fuse is being burned, check PCC and CU are burnt\\n        if (\\n            fuses & ~PARENT_CONTROLLED_FUSES != 0 &&\\n            fuses & (PARENT_CANNOT_CONTROL | CANNOT_UNWRAP) !=\\n            (PARENT_CANNOT_CONTROL | CANNOT_UNWRAP)\\n        ) {\\n            revert OperationProhibited(node);\\n        }\\n    }\\n\\n    function _checkFusesAreSettable(bytes32 node, uint32 fuses) internal pure {\\n        if (fuses | USER_SETTABLE_FUSES != USER_SETTABLE_FUSES) {\\n            // Cannot directly burn other non-user settable fuses\\n            revert OperationProhibited(node);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xdfde5214f82c518df164416eac557065f3fede57e8312c928ae7959cb88ddee6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/wrapper/NameWrapper.sol:NameWrapper","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":1363,"contract":"contracts/wrapper/NameWrapper.sol:NameWrapper","label":"_tokens","offset":0,"slot":"1","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1369,"contract":"contracts/wrapper/NameWrapper.sol:NameWrapper","label":"_operatorApprovals","offset":0,"slot":"2","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1303,"contract":"contracts/wrapper/NameWrapper.sol:NameWrapper","label":"controllers","offset":0,"slot":"3","type":"t_mapping(t_address,t_bool)"},{"astId":2680,"contract":"contracts/wrapper/NameWrapper.sol:NameWrapper","label":"metadataService","offset":0,"slot":"4","type":"t_contract(IMetadataService)2253"},{"astId":2685,"contract":"contracts/wrapper/NameWrapper.sol:NameWrapper","label":"names","offset":0,"slot":"5","type":"t_mapping(t_bytes32,t_bytes_storage)"},{"astId":2703,"contract":"contracts/wrapper/NameWrapper.sol:NameWrapper","label":"upgradeContract","offset":0,"slot":"6","type":"t_contract(INameWrapperUpgrade)2580"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_contract(IMetadataService)2253":{"encoding":"inplace","label":"contract IMetadataService","numberOfBytes":"20"},"t_contract(INameWrapperUpgrade)2580":{"encoding":"inplace","label":"contract INameWrapperUpgrade","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_bytes32,t_bytes_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => bytes)","numberOfBytes":"32","value":"t_bytes_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"allFusesBurned(bytes32,uint32)":{"notice":"Checks all Fuses in the mask are burned for the node"},"canModifyName(bytes32,address)":{"notice":"Checks if owner or approved by owner"},"extendExpiry(bytes32,bytes32,uint64)":{"notice":"Extends expiry for a name"},"getData(uint256)":{"notice":"Gets the data for a name"},"ownerOf(uint256)":{"notice":"Gets the owner of a name"},"recoverFunds(address,address,uint256)":{"notice":"Recover ERC20 tokens sent to the contract by mistake."},"renew(uint256,uint256)":{"notice":"Renews a .eth second-level domain."},"setChildFuses(bytes32,bytes32,uint32,uint64)":{"notice":"Sets fuses of a name that you own the parent of. Can also be called by the owner of a .eth name"},"setFuses(bytes32,uint16)":{"notice":"Sets fuses of a name"},"setMetadataService(address)":{"notice":"Set the metadata service. Only the owner can do this"},"setRecord(bytes32,address,address,uint64)":{"notice":"Sets records for the name in the ENS Registry"},"setResolver(bytes32,address)":{"notice":"Sets resolver contract in the registry"},"setSubnodeOwner(bytes32,string,address,uint32,uint64)":{"notice":"Sets the subdomain owner in the registry and then wraps the subdomain"},"setSubnodeRecord(bytes32,string,address,address,uint64,uint32,uint64)":{"notice":"Sets the subdomain owner in the registry with records and then wraps the subdomain"},"setTTL(bytes32,uint64)":{"notice":"Sets TTL in the registry"},"setUpgradeContract(address)":{"notice":"Set the address of the upgradeContract of the contract. only admin can do this"},"unwrap(bytes32,bytes32,address)":{"notice":"Unwraps a non .eth domain, of any kind. Could be a DNSSEC name vitalik.xyz or a subdomain"},"unwrapETH2LD(bytes32,address,address)":{"notice":"Unwraps a .eth domain. e.g. vitalik.eth"},"upgrade(bytes32,string,address,address)":{"notice":"Upgrades a non .eth domain of any kind. Could be a DNSSEC name vitalik.xyz or a subdomain"},"upgradeETH2LD(string,address,address)":{"notice":"Upgrades a .eth wrapped domain by calling the wrapETH2LD function of the upgradeContract     and burning the token of this contract"},"uri(uint256)":{"notice":"Get the metadata uri"},"wrap(bytes,address,address)":{"notice":"Wraps a non .eth domain, of any kind. Could be a DNSSEC name vitalik.xyz or a subdomain"},"wrapETH2LD(string,address,uint16,address)":{"notice":"Wraps a .eth domain, creating a new token and sending the original ERC721 token to this contract"}},"version":1}}}}}}